<?xml version="1.0"?><doc><assembly><name>Cognex.VisionPro.CompositeColorMatch</name></assembly><members><member name="T:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorItem"><summary>Class of composite color item. It has Selected property to indicate whether it might be used in a collection for color computing.</summary></member><member name="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"><param name="info">n/a</param><param name="ctxt">n/a</param><summary>Serialization constructor.</summary></member><member name="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorItem.#ctor(Cognex.VisionPro.CompositeColorMatch.CogCompositeColorItem)"><param name="other">The CogCompositeColorItem object to be copied. May not be NULL.</param><exception cref="T:System.ArgumentNullException">If <paramref name="other" /> is NULL.</exception><summary>Construct a deep copy of the supplied CogCompositeColorItem object.</summary></member><member name="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorItem.#ctor(Cognex.VisionPro.CogImage24PlanarColor,Cognex.VisionPro.ICogRegion)"><param name="image">The CogImage24PlanarColor object to get color from. May not be NULL.</param><param name="region">The ICogRegion object to specify a portion of the image to be used. If it is NULL, the whole image is used.</param><exception cref="T:System.InvalidOperationException">If <paramref name="region" /> is not Null, but the intersection between <paramref name="region" /> and <paramref name="image" /> is emtpy.</exception><summary>Constructs a  CogCompositeColorItem object based on image and Region.</summary><exception cref="T:System.ArgumentNullException">If <paramref name="image" /> is NULL.</exception></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorItem.Name"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><value>The name. Its default value is NULL.</value><summary>Gets or sets the name of this composite color item, and it provides another way to distinguish color objects.</summary></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorItem.Selected"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><summary>Gets or sets the selection property of this composite color item, and it indicates whether this object is selected for training/running.</summary><value>The selection property</value></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorItem.Region"><summary>Gets the region component of this composite color item.</summary><remarks>It is NULL if region  parameter of the constructor is NULL. Otherwise it is a copy of the input region during construction, and its SelectedSpaceName refers to SelectedSpaceName of Image property.</remarks><value>The region component</value></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorItem.Image"><value>The image component.</value><summary>Gets the image component of this composite color item.</summary><remarks>If region parameter of the constructor is NULL , this is  a copy of the image supplied for constructor. If region parameter of the constructor is not NULL, this is a regional copy of the image supplied for the constructor.</remarks></member><member name="T:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorCollection"><summary>Class of collection of CogCompositeColorItem.</summary></member><member name="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorCollection.#ctor(Cognex.VisionPro.CompositeColorMatch.CogCompositeColorCollection)"><param name="other">The CogCompositeColorCollection object to be copied. May not be NULL.</param><exception cref="T:System.NullReferenceException">If <paramref name="other" /> is NULL.</exception><summary>Construct a deep copy of the supplied CogCompositeColorCollection object.</summary></member><member name="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorCollection.#ctor"><summary>Construct a default CogCompositeColorCollection object.</summary></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorCollection.Item(System.Int32)"><param name="index">The zero-based index to specify a location in the CogCompositeColorCollection.</param><exception cref="T:System.IndexOutOfRangeException">If <paramref name="index" /> is not a valid index in the CogCompositeColorCollection.</exception><exception cref="T:System.ArgumentNullException">If you attempt to set it to a NULL value.</exception><summary>Gets/sets the CogCompositeColorItem at the specific index in the CogCompositeColorCollection.</summary></member><member name="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorCollection.GetEnumerator"><summary>Returns an enumerator that can iterate through the CogCompositeColorCollection's elements.</summary><returns>An IEnumerator that can be used to iterate through the CogCompositeColorCollection's objects.</returns></member><member name="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorCollection.IndexOf(Cognex.VisionPro.CompositeColorMatch.CogCompositeColorItem)"><param name="value">The CogCompositeColorItem to locate in the CogCompositeColorCollection.</param><returns>Zero-based index of value if found in the collection; otherwise -1.</returns><summary>Determines the index of a specific CogCompositeColorItem in the CogCompositeColorCollection.</summary></member><member name="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorCollection.Contains(Cognex.VisionPro.CompositeColorMatch.CogCompositeColorItem)"><param name="value">The CogCompositeColorItem to locate in the CogCompositeColorCollection.</param><returns>True if the CogCompositeColorCollection contains value; otherwise, false.</returns><summary>Determines whether the CogCompositeColorCollection contains a specific CogCompositeColorItem.</summary></member><member name="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorCollection.Add(Cognex.VisionPro.CompositeColorMatch.CogCompositeColorItem)"><param name="value">The CogCompositeColorItem to add to the CogCompositeColorCollection.</param><summary>Adds an item to the CogCompositeColorCollection.</summary><exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is NULL.</exception></member><member name="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorCollection.Insert(System.Int32,Cognex.VisionPro.CompositeColorMatch.CogCompositeColorItem)"><param name="index">The zero-based index at which value should be inserted.</param><param name="value">The CogCompositeColorItem to insert into the CogCompositeColorCollection.</param><exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="index" /> is not a valid index in the CogCompositeColorCollection.</exception><summary>Insert an item to the CogCompositeColorCollection at the specified position.</summary><exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is NULL.</exception></member><member name="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorCollection.Remove(Cognex.VisionPro.CompositeColorMatch.CogCompositeColorItem)"><param name="value">The CogCompositeColorItem to remove from the CogCompositeColorCollection.</param><summary>Removes the first occurrence of a specific CogCompositeColorItem from the CogCompositeColorCollection.</summary><exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is NULL.</exception></member><member name="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorCollection.GetSelectedCount"><returns>The number of CogCompositeColorItem items selected in the CogCompositeColorCollection.</returns><summary>Gets the total number of CogCompositeColorItem items selected in the CogCompositeColorCollection.</summary></member><member name="E:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorCollection.SelectedColorsChanged"><summary>This event is raised when the CogCompositeColorCollection or its members may have changed.</summary></member><member name="T:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchRunParams"><summary>This class encapsulates the run time parameters used by <see cref="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchPattern.Execute(Cognex.VisionPro.CogImage24PlanarColor,Cognex.VisionPro.ICogRegion,Cognex.VisionPro.ColorMatch.CogCompositeColorMatchRunParams)" />.</summary></member><member name="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchRunParams.#ctor(Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchRunParams)"><param name="other">The CogCompositeColorMatchRunParams object to be copied. May not be NULL.</param><summary>Construct a deep copy of the supplied CogCompositeColorMatchRunParams object.</summary><exception cref="T:System.ArgumentNullException">If <paramref name="other" /> is NULL.</exception></member><member name="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchRunParams.#ctor"><summary>Construct a default CogCompositeColorMatchRunParams object.</summary></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchRunParams.MatchingAccuracy"><value>The matching accuracy parameter</value><summary>Gets or sets the matching accuracy parameter which must be greater than zero and less than or equal to 1.</summary><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set this to a value greater than 1.0 or less than or equal to 0.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchRunParams.SortResultSetByScores"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><value>True if setting result items by scores is enabled; otherwise, false.</value><summary>Gets or sets  whether to sort the result items by scores.</summary></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchRunParams.RegionMode"><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set this to a value other than PixelAlignedBounding or PixelAlignedBoundingBoxAdjustMask.</exception><value>The region mode whichmay be either PixelAlignedBoundingBox or PixelAlignedBoundingBoxAdjustMask.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><summary>Gets or sets the region mode which specifies how the region is applied to the input image.</summary></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchRunParams.NormalizeIntensityEnabled"><summary>Gets or sets whether to normalize intensity distributionduring color matching. It is helpful in accommodating lighting intensity variations.</summary><value>True if normalizing intenisty is enabled; otherwise, false.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="T:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchResult"><summary>This class holds one result item of the result set for an entire composite color match.</summary></member><member name="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchResult.#ctor(Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchResult)"><param name="other">The CogCompositeColorMatchResult object to be copied. May not be NULL.</param><summary>Constructs a deep copy of the supplied CogCompositeColorMatchResult object.</summary><exception cref="T:System.ArgumentNullException">If <paramref name="other" /> is NULL.</exception></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchResult.MatchScore"><value>The match score which is in the range from zero (worst) to one (best).</value><summary>Gets the match score for the corresponding reference color.</summary></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchResult.Color"><value>The reference color.</value><summary>Gets the reference color corresponding to this match result.</summary></member><member name="T:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchResultSet"><summary>This class holds all of the result information for an entire composite color match.</summary></member><member name="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchResultSet.#ctor(Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchResultSet)"><param name="other">The CogCompositeColorMatchResultSet object to be copied. May not be NULL.</param><exception cref="T:System.ArgumentNullException">If <paramref name="other" /> is NULL.</exception><summary>Constructs a deep copy of the supplied CogCompositeColorMatchResultSet object.</summary></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchResultSet.Item(System.Int32)"><param name="index">The zero-based index to specify a location in the CogCompositeColorMatchResultSet.</param><exception cref="T:System.IndexOutOfRangeException">If <paramref name="index" /> is not a valid index in the CogSimpleColorCollection.</exception><summary>Gets the CogCompositeColorMatchResult at the specific index in the CogCompositeColorMatchResultSet.</summary></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchResultSet.ResultOfBestMatch"><summary>Gets the match result corresponding to the best match composite color item.</summary><value>The best match result</value></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchResultSet.ConfidenceScore"><value>The confidence score which is in the range from zero (worst) to one (best). Its value is 1.0 if there is only one reference color.</value><summary>The confidence score under classification mode. This is based on comparing the maximum match score and scores for all the other reference colors.</summary></member><member name="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchResultSet.IndexOf(Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchResult)"><param name="value">The CogCompositeColorMatchResult to locate in the CogCompositeColorMatchResultSet.</param><summary>Determines the index of a specific CogCompositeColorMatchResult in the CogCompositeColorMatchResultSet.</summary><returns>Zero-based index of value if found in the CogCompositeColorMatchResultSet; otherwise -1.</returns></member><member name="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchResultSet.Contains(Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchResult)"><param name="value">The CogCompositeColorMatchResult to locate in the CogCompositeColorMatchResultSet.</param><returns>True if the CogCompositeColorMatchResultSet contains value; otherwise, false.</returns><summary>Determines whether the CogCompositeColorMatchResultSet contains a specific CogCompositeColorMatchResult.</summary></member><member name="T:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchPattern"><summary>&lt;para&gt;This class is the workhorse of the &lt;see cref="N:Cognex.VisionPro.CompositeColorMatch"/&gt; assembly; it does the actual color match. This class contains the training parameters and trained state information. You can use this class to perform composite color match, or you can use the tool,&lt;see cref="T:Cognex.VisionPro.ColorMatch.CogCompositeColorMatchTool"/&gt;.</summary></member><member name="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchPattern.#ctor(Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchPattern)"><param name="other">The CogCompositeColorMatchPattern object to be copied. May not be NULL.</param><exception cref="T:System.ArgumentNullException">If <paramref name="other" /> is NULL.</exception><summary>Constructs a deep copy of the supplied CogCompositeColorMatchPattern object.</summary></member><member name="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchPattern.#ctor"><summary>Constructs a default CogCompositeColorMatchPattern object.</summary></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchPattern.CompositeColorCollection"><value>The composite color collection</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><summary>Gets or sets  the composite color collection which holds the composite colors for color match.</summary></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchPattern.SamplingPercentage"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><value>The percentage of pixels in the selected color region to use during matching, which must be greater than 0, and less than or equal to 100.</value><summary>Gets or sets the percentage of pixels in the selected color region to use during matching. Reducing this parameter may increase tool speed at the expense of color discrimination, and useful for scenes with uniform color regions.</summary><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set this to a value greater than 100 or less than or equal to 0.</exception></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchPattern.GaussianSmoothing"><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set this to a value less than 0 or greater than 24.</exception><summary>Gets or sets the smoothing parameter related with the number of pixels used to smooth the image. Each integer represents a ring of neighboring pixels (0...24). This may increase match scores for textured scenes.</summary><value>The smoothing parameter related with the number of pixels used to smooth the image.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchPattern.Trained"><value>True if the pattern has been trained; otherwise, false</value><summary>Gets whether this pattern has been trained.</summary><exception cref="T:System.ObjectDisposedException">If this CogCompositeColorMatchPattern object has aleady been disposed.</exception></member><member name="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchPattern.Untrain"><summary>Discards any trained data.</summary><exception cref="T:System.ObjectDisposedException">If this CogCompositeColorMatchPattern object has aleady been disposed.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when the pattern object is modified.</event></member><member name="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchPattern.Train"><exception cref="T:System.InvalidOperationException">If an internal error occurs during training.</exception><exception cref="T:System.ObjectDisposedException">If this CogCompositeColorMatchPattern object has already been disposed.</exception><exception cref="T:Cognex.VisionPro.Exceptions.CogSecurityViolationException">If licensing for this operator cannot be confirmed.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when the pattern object is modified.</event><summary>Trains the current selected composite colors in the collection.</summary></member><member name="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchPattern.Execute(Cognex.VisionPro.CogImage24PlanarColor,Cognex.VisionPro.ICogRegion,Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchRunParams)"><param name="image">The image to do the match. May not be NULL.</param><param name="region">The region inside image to do the match.</param><param name="runParams">The run parameters that specify how to perform this match.</param><returns>The results of the color match.</returns><summary>Performs color match upon the specified image and region with the specified run parameters.</summary><exception cref="T:System.ArgumentNullException">If <paramref name="runParams" /> is NULL.</exception><exception cref="T:System.ObjectDisposedException">If this CogCompositeColorMatchPattern object has already been disposed.</exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorNotTrainedException">If this operator is not already trained.</exception><exception cref="T:System.InvalidOperationException">If an internal error occurs during running.</exception><exception cref="T:Cognex.VisionPro.Exceptions.CogSecurityViolationException">If licensing for this operator cannot be confirmed.</exception></member><member name="T:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchTool"><summary>This class provides tool level access to the CogCompositeColorMatchPattern operator. This class encapsulates all of the classes required to perform a color match for composite colors.</summary></member><member name="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchTool.#ctor(Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchTool)"><param name="other">The CogCompositeColorMatchTool object to be copied. May not be NULL.</param><summary>Construct a deep copy of the supplied CogCompositeColorMatchTool object.</summary><exception cref="T:System.ArgumentNullException">If <paramref name="other" /> is NULL.</exception></member><member name="M:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchTool.#ctor"><summary>Construct a default CogCompositeColorMatchTool object.</summary></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchTool.Result"><summary>Gets the result from the last invocation of the Run method. A new instance of CogCompositeColorMatchResultSet is created for each running.</summary><value>The result</value></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchTool.Pattern"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><summary>Gets or sets the CompositeColorMatchPattern object which embodies all train-time composite colors.</summary><value>The operator</value></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchTool.RunParams"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><summary>Gets or sets the run parameters for this CompositeColorMatch tool.</summary><value>The run parameters.</value></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchTool.Region"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><summary>Gets or sets the region which specifies a portion on the InputImage that will be used to perform CompositeColorMatch.</summary><value>The region. If it is empty, composite color match is performed on the entire InputImage.</value></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchTool.InputImage"><summary>Gets or sets the input image used to perform composite color match.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><value>The input image</value></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchTool.LastRunRecordDiagEnable"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><summary>Enable creation of records by bitwise ORing the appropriate CogCompositeColorMatchLastRunRecordDiagConstants.</summary><value>This read/write property is a bitwise combination of CogCompositeColorMatchLastRunRecordDiagConstants. Options include None, InputImageByReference, InputImageDeepCopy, All.</value></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchTool.LastRunRecordEnable"><summary>Enable creation of records by bitwise ORing the appropriate CogCompositeColorMatchLastRunRecordConstants.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><value>This read/write property is a bitwise combination of CogCompositeColorMatchLastRunRecordConstants. Options include None, Region, All.</value></member><member name="P:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchTool.CurrentRecordEnable"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><summary>Enable creation of records by bitwise ORing the appropriate CogCompositeColorMatchCurrentRecordConstants.</summary><value>This read/write property is a bitwise combination of CogCompositeColorMatchCurrentRecordConstants. Options include None, InputImage, Region, All.</value></member><member name="T:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchCurrentRecordConstants"><summary>Enumeration of data that can be included in the tool's CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchCurrentRecordConstants.None"><summary>Do not include any records in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchCurrentRecordConstants.InputImage"><summary>Include the input image in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchCurrentRecordConstants.Region"><summary>Include the region to be processed in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchCurrentRecordConstants.CogInternalUseBit1"><summary>For Cognex internal usage.</summary></member><member name="F:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchCurrentRecordConstants.All"><summary>Include all possible records in the CurrentRecord.</summary></member><member name="T:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchLastRunRecordConstants"><summary>Enumeration of Non-Diagnostic data that can be included in the tool's LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchLastRunRecordConstants.None"><summary>Do not include any of the non-diagnostic data in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchLastRunRecordConstants.All"><summary>Include all of the non-diagnostic data in the LastRunRecord.</summary></member><member name="T:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchLastRunRecordDiagConstants"><summary>Enumeration of Diagnostic data that can be included in the tool's LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchLastRunRecordDiagConstants.None"><summary>Do not include any of the diagnostic data in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchLastRunRecordDiagConstants.InputImageByReference"><summary>Include a reference to the input image in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchLastRunRecordDiagConstants.InputImageDeepCopy"><summary>Include a deep copy of the input image in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchLastRunRecordDiagConstants.Region"><summary>Draw the region of the last run image.</summary></member><member name="F:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorMatchLastRunRecordDiagConstants.All"><summary>Include all of the diagnostic data in the LastRunRecord.</summary></member><member name="T:Cognex.VisionPro.CompositeColorMatch.CogCompositeColorCollection.SelectedColorsChangedEventHandler"><summary>This event is raised when the CogCompositeColorCollection or its members may have changed.</summary></member></members></doc>