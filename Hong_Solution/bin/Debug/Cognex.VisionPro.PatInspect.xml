<?xml version="1.0"?><doc><assembly><name>Cognex.VisionPro.PatInspect</name></assembly><members><member name="T:Cognex.VisionPro.Exceptions.CogPatInspectCorrelationScoreNotComputedException"><summary>The exception that is thrown when <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.ComputeCorrelationScore" /> is False.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogPatInspectNormalizationFailedException"><summary>The exception that is thrown when the portion of <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainRegion" /> mapped onto the input image does not contain enough data to perform normalization.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogPatInspectImageTooSmallException"><summary>The exception that is thrown when the width or height of <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImage" /> is less than 3 pixels.</summary></member><member name="T:Cognex.VisionPro.PatInspect.CogPatInspectResult"><summary>The result of a single PatInspect inspection.  A result basically consists of various flavors of both a match image and a difference image.  The result images that will be available depend on the run-time property settings of the pattern.</summary><remarks><PARA>The result of a single PatInspect analysis.  A result basically consists of various match images and difference images, depending on the configured run-time parameters. </PARA></remarks></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectResult.#ctor(Cognex.VisionPro.PatInspect.CogPatInspectResult)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectResult.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectResult.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectResult.CorrelationScore"><exception cref="T:Cognex.VisionPro.Exceptions.CogPatInspectCorrelationScoreNotComputedException" cgnxHRESULT="E_CogPatInspect_CorrelationScoreNotComputed"><para><see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.ComputeCorrelationScore" /> was False.</para></exception><summary>Returns a score indicating the correlation between the trained pattern image and the run-time match image.  This value will be in the range of zero for low correlation to one for high correlation.</summary><remarks><PARA>Returns a score indicating the correlation between the trained pattern image and the run-time match image.  This value will be in the range of 0.0 for low correlation to 1.0 for high correlation.</PARA></remarks></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectResult.ClippedMask"><summary>Indicates which pixels of the MatchImage were clipped.  If clipping occurred for a pixel in the MatchImage then the corresponding ClippedMask pixel will be set to 0, otherwise, it will be set to 255.  This property returns Nothing if Clipped is false.</summary><remarks><PARA>Indicates which pixels of the <see cref="M:Cognex.VisionPro.PatInspect.CogPatInspectResult.GetMatchImage(Cognex.VisionPro.PatInspect.CogPatInspectMatchImageConstants)">match image</see>were clipped.  If clipping occurred for a pixel in the match image then the corresponding <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectResult.ClippedMask" /> pixel will be set to 0, otherwise, it will be set to 255.  This property returns Nothing if <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectResult.Clipped" /> is False.</PARA></remarks></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectResult.Clipped"><summary>Returns true if the match image was clipped because part of the region fell outside of the input image.  The ClippedMask property will indicate which pixels of the match image were clipped.</summary><remarks><PARA>Returns true if the match image was clipped because part of the region fell outside of the input image.  The <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectResult.ClippedMask">ClippedMask</see> property will indicate which pixels of the match image were clipped.</PARA></remarks></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectResult.~CogPatInspectResult"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectResult.!CogPatInspectResult"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectResult.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectResult.GetMatchImage(Cognex.VisionPro.PatInspect.CogPatInspectMatchImageConstants)"><param name="whichImage"><PARA>A <see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectMatchImageConstants">CogPatInspectMatchImageConstants</see> constant</PARA></param><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="whichImage" />  is not one of <see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectDifferenceImageConstants" />  that specifies a single image.</para></exception><summary>Image containing the region of the input image that matches the pattern.  Match region is simply based on the Pose provided at run-time.  Returns Nothing if the bit that corresponds to WhichImage was not set in the run-time MatchImages property.</summary><remarks><PARA>Image containing the region of the input image that matches the pattern.  Match region is simply based on the <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.Pose">Pose</see> provided at run-time.  Returns Nothing if the bit that corresponds to <see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectMatchImageConstants">WhichImage</see> was not set in the <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.MatchImages">MatchImages</see> property.</PARA></remarks></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectResult.GetDifferenceImage(Cognex.VisionPro.PatInspect.CogPatInspectDifferenceImageConstants)"><param name="whichImage"><PARA>A <see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectDifferenceImageConstants">CogPatInspectDifferenceImageConstants</see> constant</PARA></param><summary>Image that provides thresholded differences between the trained pattern image and the normalized match image.  Returns Nothing if the bit that corresponds to WhichImage was not set in the run-time DifferenceImages property.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="whichImage" />  is not one of <see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectDifferenceImageConstants" />  that specifies a single image.</para></exception><remarks><PARA>Image that provides thresholded differences between the trained pattern image and the normalized match image.  Returns Nothing if the bit that corresponds to <see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectDifferenceImageConstants">WhichImage</see> was not set in the <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.DifferenceImages" /> property. </PARA></remarks></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectResult.GetDifferenceImageRaw(Cognex.VisionPro.PatInspect.CogPatInspectDifferenceImageConstants)"><param name="whichImage"><PARA>A <see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectMatchImageConstants">CogPatInspectMatchImageConstants</see> constant</PARA></param><summary>Image that provides unthresholded (raw) differences between the trained pattern image and the normalized match image.  Returns Nothing if the bit that corresponds to WhichImage was not set in the run-time DifferenceImagesRaw property.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="whichImage" />  is not one of <see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectDifferenceImageConstants" />  that specifies a single image.</para></exception><remarks><PARA>Image that provides unthresholded (raw) differences between the trained pattern image and the normalized match image.  Returns Nothing if the bit that corresponds to <see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectMatchImageConstants">WhichImage</see> was not set in the <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.DifferenceImagesRaw">DifferenceImagesRaw</see> property.</PARA></remarks></member><member name="T:Cognex.VisionPro.PatInspect.CogPatInspectRunParams"><summary>Provides access to PatInspect run-time parameters.  The run-time parameters are used to indicate how the PatInspect inspection will be performed and what data will be generated as part of the PatInspect result.</summary><remarks><PARA>Provides access to PatInspect run-time parameters, which are used to indicate how the PatInspect inspection will be performed and what data will be generated as part of the PatInspect result.</PARA></remarks></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.#ctor(Cognex.VisionPro.PatInspect.CogPatInspectRunParams)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.SfNormalizationMode"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by NormalizationMode may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.SfTailLow"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TailLow may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.SfTailHigh"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TailHigh may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.SfMatchImages"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by MatchImages may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.SfDifferenceImages"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by DifferenceImages may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.SfDifferenceImagesRaw"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by DifferenceImagesRaw may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.SfComputeCorrelationScore"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ComputeCorrelationScore may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.SfNeighborhoodWidth"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by NeighborhoodWidth may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.SfNeighborhoodHeight"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by NeighborhoodHeight may have changed.</summary></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.NeighborhoodHeight"><summary>The height in pixels of the neighborhood to be used when NormalizationMode is either LocalCorrection or LocalCorrectionEnhanced.</summary></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.NeighborhoodWidth"><summary>The width in pixels of the neighborhood to be used when NormalizationMode is either LocalCorrection or LocalCorrectionEnhanced.</summary></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.ComputeCorrelationScore"><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogPatInspectRunParams_ComputeCorrelationScore--><ul><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.SfComputeCorrelationScore" /></li></ul></event><summary>If true then the result object will contain a score indicating the correlation between the trained pattern image and the run-time match image.</summary><remarks><PARA>If true then the result object will contain a score indicating the correlation between the trained pattern image and the run-time match image.</PARA><DEFAULT>FALSE</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.DifferenceImagesRaw"><summary>The raw difference images that will be created at run-time.  Images indicate raw differences between the normalized input image and trained pattern image with no thresholding performed.  Specified by ORing together the desired difference image constants.</summary><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogPatInspectRunParams_DifferenceImagesRaw--><ul><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.SfDifferenceImagesRaw" /></li></ul></event><remarks><PARA>The raw difference images that will be created at run-time.  These images indicate raw differences between the normalized input image and the trained pattern image without comparing the result to the threshold image.  Specified by ORing together the desired difference image constants.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectDifferenceImageConstants">None</see></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.DifferenceImages"><remarks><PARA>The difference images that will be created each time the tool executes.  These images indicate differences between the normalized input image and trained pattern image after the PatInspect tool analyzes the raw difference image with the threshold image. Specified by ORing together the desired difference image constants.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectDifferenceImageConstants">Absolute</see></DEFAULT></remarks><summary>The difference images that will be created at run-time.  Images indicate differences between the normalized input image and trained pattern image after thresholding is performed.  Specified by ORing together the desired difference image constants.</summary><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogPatInspectRunParams_DifferenceImages--><ul><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.SfDifferenceImages" /></li></ul></event></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.MatchImages"><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogPatInspectRunParams_MatchImages--><ul><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.SfMatchImages" /></li></ul></event><remarks><PARA>The match images that will be created at run-time.  Specified by ORing together the desired match image constants.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectMatchImageConstants">Image</see></DEFAULT></remarks><summary>The match images that will be created at run-time.  Specified by ORing together the desired match image constants.</summary></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.TailHigh"><summary>The percentage of pixels to discard on the high end of the grey scale spectrum prior to performing tail matching normalization.  Only applicable if match tails is selected for the NormalizationMode.</summary><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogPatInspectRunParams_TailHigh--><ul><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.SfTailHigh" /></li></ul></event><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.Changed" cgnxEvent="multiState"><para>
        
Fires when both <see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectRunParams" /> and <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.TailLow" /> change. 
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_PatInspectRunParams_Tails--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.SfTailLow" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.SfTailHigh" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="Value" />  is &lt; 0 or &gt; 100.</para></exception><remarks><PARA>The percentage of pixels to discard on the high end of the grey scale spectrum prior to performing tail matching normalization.  Only applicable if match tails is selected for the <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.NormalizationMode">NormalizationMode</see>. </PARA><NOTE><see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.TailLow">Tail Low</see> plus <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.TailHigh">Tail High</see> cannot exceed 100%. If the new value for <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.TailHigh" /> would cause the total to exceed 100%, the other value will be changed so that the sum of both properties is 100%. In such cases, the change event will indicate that both properties have changed.</NOTE><DEFAULT>10%</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.TailLow"><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogPatInspectRunParams_TailLow--><ul><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.SfTailLow" /></li></ul></event><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.Changed" cgnxEvent="multiState"><para>
        
Fires when both <see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectRunParams" /> and <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.TailHigh" /> change. 
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_PatInspectRunParams_Tails--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.SfTailLow" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.SfTailHigh" /></li></ul></event><summary>The percentage of pixels to discard on the low end of the grey scale spectrum prior to performing tail matching normalization.  Only applicable if match tails is selected for the NormalizationMode.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="Value" />  is &lt; 0 or &gt; 100.</para></exception><remarks><PARA>The percentage of pixels to discard on the low end of the grey scale spectrum prior to performing tail matching normalization.  Only applicable if match tails is selected for the <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.NormalizationMode">NormalizationMode</see>.</PARA><NOTE><see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.TailLow" /> plus <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.TailHigh" /> cannot exceed 100%. If the new value for <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.TailLow" /> would cause the total to exceed 100%, the other value will be changed so that the sum of both properties is 100%. In such cases, the change event will indicate that both properties have changed.</NOTE><DEFAULT>10%</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.NormalizationMode"><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogPatInspectRunParams_NormalizationMode--><ul><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.SfNormalizationMode" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="Value" />  is not in <see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectNormalizationModeConstants" />.</para></exception><summary>Normalization mode to be applied to the input image prior to performing the intensity difference operation.</summary><remarks><PARA>Normalization mode to be applied to the input image prior to performing the intensity difference operation.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectNormalizationModeConstants">HistogramEqualization</see></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.~CogPatInspectRunParams"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.!CogPatInspectRunParams"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="E:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.PatInspect.CogPatInspectPattern"><remarks><PARA>Provide access to the train time parameters and the trained pattern. The pattern must be trained using the <see cref="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Train" /> method before performing an inspection. Perform the inspection by calling the <see cref="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Execute(Cognex.VisionPro.CogImage8Grey,Cognex.VisionPro.CogTransform2DLinear,Cognex.VisionPro.PatInspect.CogPatInspectRunParams)">Execute</see> method.</PARA></remarks><summary>Provides access to the train time parameters and to the results of training a PatInspect pattern.  The pattern must be trained via the Train method prior to performing an inspection which is done by calling the Execute method.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.#ctor(Cognex.VisionPro.PatInspect.CogPatInspectPattern)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainImage"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TrainImage may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainRegion"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TrainRegion may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainRegionMode"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TrainRegionMode may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfOrigin"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Origin may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainImageMask"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TrainImageMask may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainImageMaskOffsetX"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TrainImageMaskOffsetX may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainImageMaskOffsetY"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TrainImageMaskOffsetY may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfSobelScale"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by SobelScale may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfSobelOffset"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by SobelOffset may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfThresholdScale"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ThresholdScale may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfThresholdOffset"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ThresholdOffset may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrained"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Trained may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainedCount"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TrainedCount may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedPatternImage"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetTrainedPatternImage may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedPatternImageMask"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetTrainedPatternImageMask may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedThresholdImage"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetTrainedThresholdImage may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfInterpolationMode"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by InterpolationMode may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfStatisticalTrainingEnded"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by StatisticalTrainingEnded may have changed.</summary></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainedCount"><summary>The number of images that are statistically incorporated into the pattern.  This number is equal to the number of times StatisticalTrain has been called plus one for the initial call to Train.</summary><remarks><PARA>The number of images that are statistically incorporated into the pattern.  This number is equal to the number of times <see cref="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.StatisticalTrain(Cognex.VisionPro.CogImage8Grey,Cognex.VisionPro.CogTransform2DLinear)">StatisticalTrain</see> has been called plus one for the initial call to <see cref="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Train" />. </PARA></remarks></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.StatisticalTrainingEnded"><value>True if pattern statistical training has been ended.</value><summary>Gets whether (statistical) training of this pattern has been ended.</summary></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Trained"><remarks><PARA>True if the pattern is trained.</PARA></remarks><summary>True if the pattern is trained.</summary></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.InterpolationMode"><summary>Specifies how affine transforms are applied.</summary></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.ThresholdOffset"><summary>The threshold coefficients are used to compute a threshold image from the standard deviation image.  Threshold Pixel = [ThresholdScale * Standard Deviation Pixel] + ThresholdOffset.</summary><remarks><PARA>The threshold coefficients are used to compute a threshold image from the standard deviation image.  Threshold Pixel = [ThresholdScale * Standard Deviation Pixel] + ThresholdOffset.</PARA><PARA>The currently trained threshold image is updated when the threshold offset value is changed and the pattern is already trained. </PARA><DEFAULT>0.0</DEFAULT></remarks><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Changed" cgnxEvent="singleState"><para>
        
Fires when the threshold offset  changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogPatInspectPattern_ThresholdOffset--><ul><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfThresholdOffset" /></li></ul></event><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Changed" cgnxEvent="multiState"><para>
        
Fires when the threshold offset  changes and the <see cref="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.GetTrainedThresholdImage">trained threshold image</see> is updated as well. 
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_PatInspectPattern_ThresholdCoefficients--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfThresholdScale" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfThresholdOffset" /></li><!--FA:cogFA_PatInspectPattern_ThresholdResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedThresholdImage" /></li></ul></event></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.ThresholdScale"><remarks><PARA>The threshold coefficients are used to compute a threshold image from the standard deviation image.  Threshold Pixel = [ThresholdScale * Standard Deviation Pixel] + ThresholdOffset.</PARA><PARA>The currently trained threshold image is updated when the threshold scale value is changed and the pattern is already trained. </PARA><DEFAULT>1.0</DEFAULT></remarks><summary>The threshold coefficients are used to compute a threshold image from the standard deviation image.  Threshold Pixel = [ThresholdScale * Standard Deviation Pixel] + ThresholdOffset.</summary><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Changed" cgnxEvent="singleState"><para>
        
Fires when the threshold scale changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogPatInspectPattern_ThresholdScale--><ul><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfThresholdScale" /></li></ul></event><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Changed" cgnxEvent="multiState"><para>
        
Fires when the threshold scale changes and the <see cref="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.GetTrainedThresholdImage">trained threshold image</see> is updated as well. 
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_PatInspectPattern_ThresholdCoefficients--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfThresholdScale" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfThresholdOffset" /></li><!--FA:cogFA_PatInspectPattern_ThresholdResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedThresholdImage" /></li></ul></event></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SobelOffset"><remarks><PARA>The Sobel coefficients are used to compute a pseudo standard deviation image when the pattern has been trained from a single image.  Standard Deviation Pixel = [SobelScale * Sobel Magnitude Pixel Value] + SobelOffset.</PARA><PARA>The currently trained threshold image is updated when the Sobel offset value is changed and the pattern has been trained from a single image.</PARA><DEFAULT>0.0</DEFAULT></remarks><summary>The Sobel coefficients are used to compute a pseudo standard deviation image when the pattern has been trained from a single image.  Standard Deviation Pixel = [SobelScale * Sobel Magnitude Pixel Value] + SobelOffset.</summary><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Changed" cgnxEvent="singleState"><para>
        
Fires when the Sobel offset changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogPatInspectPattern_SobelOffset--><ul><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfSobelOffset" /></li></ul></event><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Changed" cgnxEvent="multiState"><para>
        
Fires when the Sobel offset changes and the <see cref="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.GetTrainedThresholdImage">trained threshold image</see> is updated as well. 
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_PatInspectPattern_SobelCoefficients--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfSobelScale" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfSobelOffset" /></li><!--FA:cogFA_PatInspectPattern_ThresholdResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedThresholdImage" /></li></ul></event></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SobelScale"><remarks><PARA>The Sobel coefficients are used to compute a pseudo standard deviation image when the pattern has been trained from a single image.  Standard Deviation Pixel = [SobelScale * Sobel Magnitude Pixel Value] + SobelOffset.</PARA><PARA>The currently trained threshold image is updated when the Sobel scale value is changed and the pattern has been trained from a single image.</PARA><DEFAULT>1.0</DEFAULT></remarks><summary>The Sobel coefficients are used to compute a pseudo standard deviation image when the pattern has been trained from a single image.  Standard Deviation Pixel = [SobelScale * Sobel Magnitude Pixel Value] + SobelOffset.</summary><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Changed" cgnxEvent="singleState"><para>
        
Fires when the Sobel scale changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogPatInspectPattern_SobelScale--><ul><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfSobelScale" /></li></ul></event><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Changed" cgnxEvent="multiState"><para>
        
Fires when the Sobel scale changes and the <see cref="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.GetTrainedThresholdImage">trained threshold image</see> is updated as well. 
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_PatInspectPattern_SobelCoefficients--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfSobelScale" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfSobelOffset" /></li><!--FA:cogFA_PatInspectPattern_ThresholdResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedThresholdImage" /></li></ul></event></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImageMaskOffsetY"><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogPatInspectPattern_TrainImageMaskOffsetY--><ul><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainImageMaskOffsetY" /></li></ul></event><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Changed" cgnxEvent="multiState"><para>
        
Fires when the value of this property changes and the pattern was untrained.
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_PatInspectPattern_TrainImageMask--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainImageMask" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainImageMaskOffsetX" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainImageMaskOffsetY" /></li><!--FA:cogFA_PatInspectPattern_TrainResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrained" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedPatternImageMask" /></li><!--FA:cogFA_PatInspectPattern_StatisticalTrainResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainedCount" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedPatternImage" /></li><!--FA:cogFA_PatInspectPattern_ThresholdResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedThresholdImage" /></li></ul></event><summary>Y offset value in pixels.  The X &amp; Y offset values measure the offset from the upper-left corner of the TrainImage to the upper-left corner of the TrainImageMask in image coordinates of the TrainImage.</summary><remarks><PARA>Y offset value in pixels.  The X &amp; Y offset values measure the offset from the upper-left corner of the <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImage" /> to the upper-left corner of the <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImageMask" /> in image coordinates of the TrainImage.</PARA><DEFAULT>0, 0</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImageMaskOffsetX"><summary>X offset value in pixels.  The X &amp; Y offset values measure the offset from the upper-left corner of the TrainImage to the upper-left corner of the TrainImageMask in image coordinates of the TrainImage.</summary><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogPatInspectPattern_TrainImageMaskOffsetX--><ul><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainImageMaskOffsetX" /></li></ul></event><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Changed" cgnxEvent="multiState"><para>
        
Fires when the value of this property changes and the pattern was untrained.
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_PatInspectPattern_TrainImageMask--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainImageMask" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainImageMaskOffsetX" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainImageMaskOffsetY" /></li><!--FA:cogFA_PatInspectPattern_TrainResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrained" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedPatternImageMask" /></li><!--FA:cogFA_PatInspectPattern_StatisticalTrainResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainedCount" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedPatternImage" /></li><!--FA:cogFA_PatInspectPattern_ThresholdResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedThresholdImage" /></li></ul></event><remarks><PARA>X offset value in pixels.  The X &amp; Y offset values measure the offset from the upper-left corner of the <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImage" /> to the upper-left corner of the <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImageMask" /> in image coordinates of the TrainImage.</PARA><DEFAULT>0, 0</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImageMask"><remarks><PARA>Mask used when training the PatInspect pattern.  The mask allows the user to identify areas of the pattern as Care (128-255) or Don't Care (0-127) pixels. </PARA></remarks><summary>Mask used when training the PatInspect pattern.  The mask allows the user to identify areas of the pattern as "Care" (128-255) or "Don't Care" (0-127).</summary><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogPatInspectPattern_TrainImageMask--><ul><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainImageMask" /></li></ul></event><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Changed" cgnxEvent="multiState"><para>
        
Fires when the value of this property changes and the pattern was untrained.
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_PatInspectPattern_TrainImageMask--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainImageMask" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainImageMaskOffsetX" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainImageMaskOffsetY" /></li><!--FA:cogFA_PatInspectPattern_TrainResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrained" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedPatternImageMask" /></li><!--FA:cogFA_PatInspectPattern_StatisticalTrainResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainedCount" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedPatternImage" /></li><!--FA:cogFA_PatInspectPattern_ThresholdResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedThresholdImage" /></li></ul></event></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Origin"><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogPatInspectPattern_Origin--><ul><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfOrigin" /></li></ul></event><remarks><PARA>A <!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Search.PMAlign.Theory.PatMax" cgnxAnchor="generalized_pattern_origin">generalized pattern origin</see> that describes how the pattern in the run-time image is different from the trained pattern. The PatInspect tool uses this transformation to map from "Pattern Space" to the selected space of the <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImage" />.</PARA><DEFAULT>The identity transform.</DEFAULT></remarks><summary>A 6 DOF origin for the pattern.  This transform maps from "Pattern Space" to the selected space of TrainImage.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="Value" /> is NULL.</para></exception></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainRegionMode"><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogPatInspectPattern_TrainRegionMode--><ul><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainRegionMode" /></li></ul></event><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Changed" cgnxEvent="multiState"><para>
        
Fires when the value of this property changes and the pattern was untrained.
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_PatInspectPattern_TrainRegion--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainRegion" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainRegionMode" /></li><!--FA:cogFA_PatInspectPattern_TrainResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrained" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedPatternImageMask" /></li><!--FA:cogFA_PatInspectPattern_StatisticalTrainResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainedCount" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedPatternImage" /></li><!--FA:cogFA_PatInspectPattern_ThresholdResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedThresholdImage" /></li></ul></event><summary>Specifies how the TrainRegion is applied to the TrainImage.</summary><remarks><PARA>Specifies how the <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainRegion" /> is applied to the <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImage" />.</PARA></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The supplied value is not one of
        		<see cref="T:Cognex.VisionPro.CogRegionModeConstants">PixelAlignedBoundingBox</see>,
        		<see cref="T:Cognex.VisionPro.CogRegionModeConstants">PixelAlignedBoundingBoxAdjustMask</see>, or
        		<see cref="T:Cognex.VisionPro.CogRegionModeConstants">AffineTransform</see>.
	</para></exception></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainRegion"><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogPatInspectPattern_TrainRegion--><ul><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainRegion" /></li></ul></event><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Changed" cgnxEvent="multiState"><para>
        
Fires when the value of this property changes and the pattern was untrained.
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_PatInspectPattern_TrainRegion--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainRegion" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainRegionMode" /></li><!--FA:cogFA_PatInspectPattern_TrainResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrained" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedPatternImageMask" /></li><!--FA:cogFA_PatInspectPattern_StatisticalTrainResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainedCount" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedPatternImage" /></li><!--FA:cogFA_PatInspectPattern_ThresholdResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedThresholdImage" /></li></ul></event><summary>Region of interest in the TrainImage that will be used to train the pattern.  A NULL TrainRegion indicates that the entire TrainImage will be used to train the PatInspect pattern.</summary><remarks><PARA>Region of interest in the <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImage" /> that will be used to train the pattern.  A NULL TrainRegion indicates that the entire TrainImage will be used to train the PatInspect pattern.</PARA></remarks></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImage"><summary>Image used to train PatInspect.  Additional images may be incorporated into the pattern using the StatisticalTrain method. The TrainRegion is applied to this TrainImage in order to define the region that will be used to train the pattern.</summary><remarks><PARA>Image used to train PatInspect.  Additional images may be incorporated into the pattern using the <see cref="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.StatisticalTrain(Cognex.VisionPro.CogImage8Grey,Cognex.VisionPro.CogTransform2DLinear)">StatisticalTrain</see> method. The <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainRegion" /> is applied to this <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImage" /> in order to define the region that will be used to train the pattern. </PARA><DEFAULT>NULL</DEFAULT></remarks><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogPatInspectPattern_TrainImage--><ul><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainImage" /></li></ul></event><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Changed" cgnxEvent="multiState"><para>
        
Fires when the value of this property changes and the pattern was untrained.
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_PatInspectPattern_TrainImage--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainImage" /></li><!--FA:cogFA_PatInspectPattern_TrainResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrained" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedPatternImageMask" /></li><!--FA:cogFA_PatInspectPattern_StatisticalTrainResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainedCount" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedPatternImage" /></li><!--FA:cogFA_PatInspectPattern_ThresholdResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedThresholdImage" /></li></ul></event></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.~CogPatInspectPattern"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.!CogPatInspectPattern"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.GetTrainedPatternImage"><summary>Gets an image that represents the currently trained pattern.  This is a template image that incorporates pixel data from all of the statistically trained images.</summary><returns><PARA>The <see cref="T:Cognex.VisionPro.CogImage8Grey" /> that represents the currently trained pattern.</PARA></returns><remarks><PARA>Gets an <see cref="T:Cognex.VisionPro.CogImage8Grey" /> that represents the currently trained pattern.  This is a template image that incorporates pixel data from all of the statistically trained images.</PARA></remarks><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorNotTrainedException" cgnxHRESULT="E_CogOperator_NotTrained"><para>The pattern is not trained.</para></exception></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.GetTrainedPatternImageMask"><summary>Gets an image representing the mask used to train the current pattern.  This mask is the combination of the TrainImageMask and any mask that may be required by TrainRegionMode.  This mask is the same size as the image returned by GetTrainedPatternImage.</summary><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorNotTrainedException" cgnxHRESULT="E_CogOperator_NotTrained"><para>The pattern is not trained.</para></exception><returns><PARA>The <see cref="T:Cognex.VisionPro.CogImage8Grey" /> that represents the mask used to train the current pattern.</PARA></returns><remarks><PARA>Gets an <see cref="T:Cognex.VisionPro.CogImage8Grey" /> representing the mask used to train the current pattern.  This mask is the combination of the 
<see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImageMask" /> and any mask that may be required by <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainRegionMode">TrainRegionMode</see>.  This mask is the same size as the image returned by <see cref="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.GetTrainedPatternImage" />.</PARA></remarks></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.GetTrainedThresholdImage"><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorNotTrainedException" cgnxHRESULT="E_CogOperator_NotTrained"><para>The pattern is not trained.</para></exception><returns><PARA>The <see cref="T:Cognex.VisionPro.CogImage8Grey" /> that represents the current threshold image.</PARA></returns><summary>Gets an image representing the currently trained threshold image.  Pixel differences at run-time that are greater than the corresponding threshold image pixel are considered defects.  This image is the same size as the GetTrainedPatternImage.</summary><remarks><PARA>Gets an <see cref="T:Cognex.VisionPro.CogImage8Grey" /> representing the currently trained threshold image.  Pixel differences at run-time that are greater than the corresponding threshold image pixel are considered defects.  This image is the same size as the <see cref="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.GetTrainedPatternImage" />.</PARA></remarks></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Train"><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Changed" cgnxEvent="multiState"><para>
        
Fires when the pattern is trained.
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_PatInspectPattern_TrainResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrained" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedPatternImageMask" /></li><!--FA:cogFA_PatInspectPattern_StatisticalTrainResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainedCount" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedPatternImage" /></li><!--FA:cogFA_PatInspectPattern_ThresholdResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedThresholdImage" /></li></ul></event><exception cref="T:Cognex.VisionPro.Exceptions.CogSecurityViolationException" cgnxHRESULT="E_Cog_SecurityViolation"><para>Security is not enabled for this vision tool. See 
<see cref="u:Programming.Tools.Theory.Security" cgnxAnchor="resolving_securityrelated_error_messages">Resolving Security-Related Error Messages</see>
for more information.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadSelectedSpaceNameException" cgnxHRESULT="E_CogImage_BadSelectedSpaceName"><para>The selected space of <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImage" /> is not a valid space of <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImage" />'s coordinate space tree.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadSelectedSpaceNameException" cgnxHRESULT="E_CogImage_BadSelectedSpaceName"><para> The selected space name of
<see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImage" /> is a nonqualified space name and more than one
instance of it exists in the space tree of <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImage" />.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadSelectedSpaceNameException" cgnxHRESULT="E_CogImage_BadSelectedSpaceName"><para> The selected space name
of <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImage" /> is not a legal space name. </para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageNoPixelsException" cgnxHRESULT="E_CogImage_NoPixels"><para><see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImage" /> is not allocated.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorInvalidRegionException" cgnxHRESULT="E_CogOperator_InvalidRegion"><para>The selected space of the <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainRegion" /> is not a valid space of the <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImage" />.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorInvalidRegionException" cgnxHRESULT="E_CogOperator_InvalidRegion"><para><see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainRegion" /> falls completely outside of <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImage" />.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorInvalidRegionException" cgnxHRESULT="E_CogOperator_InvalidRegion"><para> The selected space name of the
<see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainRegion" /> is a nonqualified space name and more than one
instance of it exists  in the space tree of <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImage" />.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorInvalidRegionException" cgnxHRESULT="E_CogOperator_InvalidRegion"><para> The selected space name of the
<see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainRegion" /> is not a legal space name. </para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorInvalidRegionException" cgnxHRESULT="E_CogOperator_InvalidRegion"><para><see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainRegion" /> is some region other than an <see cref="T:Cognex.VisionPro.CogRectangleAffine" /> and <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainRegion" />  is 
		<see cref="T:Cognex.VisionPro.CogRegionModeConstants">AffineTransform</see>.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorInvalidRegionException" cgnxHRESULT="E_CogOperator_InvalidRegion"><para><see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainRegion" /> is clipped
and <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainRegionMode" />  is <see cref="T:Cognex.VisionPro.CogRegionModeConstants">AffineTransform</see>.
Clipping of the 
<see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainRegion" /> is allowed when <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainRegionMode" /> is 
<see cref="T:Cognex.VisionPro.CogRegionModeConstants">PixelAlignedBoundingBoxAdjustMask</see> or
<see cref="T:Cognex.VisionPro.CogRegionModeConstants">PixelAlignedBoundingBox</see>.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorInvalidRegionException" cgnxHRESULT="E_CogOperator_InvalidRegion"><para><see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainRegionMode" /> is too close (within 2 or 3 pixels)
of <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImage" />  and <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainRegionMode" />  is <see cref="T:Cognex.VisionPro.CogRegionModeConstants">AffineTransform</see>.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorNoTrainImageException" cgnxHRESULT="E_CogOperator_NoTrainImage"><para><see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImage" /> is NULL.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogPatInspectImageTooSmallException" cgnxHRESULT="E_CogPatInspect_ImageTooSmall"><para><see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImage" /> width or height was less than 3 pixels.</para></exception><remarks><PARA>Trains this PatInspect pattern.  If the pattern is already trained then it will be untrained and retrained.</PARA></remarks><summary>Trains this PatInspect pattern.  If the pattern is already trained then it will be untrained and retrained.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Untrain"><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Changed" cgnxEvent="multiState"><para>
        
Fires when the pattern is untrained.
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_PatInspectPattern_TrainResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrained" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedPatternImageMask" /></li><!--FA:cogFA_PatInspectPattern_StatisticalTrainResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainedCount" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedPatternImage" /></li><!--FA:cogFA_PatInspectPattern_ThresholdResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedThresholdImage" /></li></ul></event><remarks><PARA>Untrain this pattern.  All statistical trained data will be lost.</PARA></remarks><summary>Untrain this pattern.  All statistical trained data will be lost.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.StatisticalTrain(Cognex.VisionPro.CogImage8Grey,Cognex.VisionPro.CogTransform2DLinear)"><param name="statisticalTrainImage"><PARA>The <see cref="T:Cognex.VisionPro.CogImage8Grey" /> containing the statistically trained image.</PARA></param><param name="pose"><PARA>The <see cref="T:Cognex.VisionPro.CogTransform2DLinear" /> that maps the alignment region in the input image to the alignment region of the training image. </PARA></param><summary>Statistically incorporates the provided image into the existing pattern.  The Pose maps from "Pattern Space" to the selected space of StatisticalTrainImage and is used to align the features of the original TrainImage with the StatisticalTrainImage.</summary><remarks><PARA>Statistically incorporates the provided image into the existing pattern.  The Pose maps from "Pattern Space" to the selected space of StatisticalTrainImage and is used to align the features of the original <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainImage" /> with the <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.InputImage">StatisticalTrainImage</see>. </PARA></remarks><event cref="E:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Changed" cgnxEvent="multiState"><para>
        
Fires when the threshold scale changes and the <see cref="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.GetTrainedThresholdImage">trained threshold image</see> is updated as well. 
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_PatInspectPattern_TrainResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrained" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedPatternImageMask" /></li><!--FA:cogFA_PatInspectPattern_StatisticalTrainResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfTrainedCount" /></li><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedPatternImage" /></li><!--FA:cogFA_PatInspectPattern_ThresholdResults--><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectPattern.SfGetTrainedThresholdImage" /></li></ul></event><exception cref="T:Cognex.VisionPro.Exceptions.CogSecurityViolationException" cgnxHRESULT="E_Cog_SecurityViolation"><para>Security is not enabled for this vision tool. See 
<see cref="u:Programming.Tools.Theory.Security" cgnxAnchor="resolving_securityrelated_error_messages">Resolving Security-Related Error Messages</see>
for more information.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadSelectedSpaceNameException" cgnxHRESULT="E_CogImage_BadSelectedSpaceName"><para>The selected space of <paramref name="statisticalTrainImage" /> is not
		a valid space of <paramref name="statisticalTrainImage" />'s coordinate space tree.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadSelectedSpaceNameException" cgnxHRESULT="E_CogImage_BadSelectedSpaceName"><para> The selected space name of <paramref name="statisticalTrainImage" /> 
		is a nonqualified space name and more than one instance of it exists in the space tree of <paramref name="statisticalTrainImage" />.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadSelectedSpaceNameException" cgnxHRESULT="E_CogImage_BadSelectedSpaceName"><para> The selected space name
of <paramref name="statisticalTrainImage" />  is not a legal space name. </para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageClippedException" cgnxHRESULT="E_CogImage_Clipped"><para><see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainRegion" /> is clipped when mapped onto the <paramref name="statisticalTrainImage" /> or the <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainRegion" /> is too close (within 2 or 3 pixels) to the edge of the <paramref name="statisticalTrainImage" />.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageNoPixelsException" cgnxHRESULT="E_CogImage_NoPixels"><para><paramref name="statisticalTrainImage" />  is not allocated.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorNoTrainImageException" cgnxHRESULT="E_CogOperator_NoTrainImage"><para><paramref name="statisticalTrainImage" /> is NULL.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorNotTrainedException" cgnxHRESULT="E_CogOperator_NotTrained"><para>The pattern is not trained.</para></exception><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="pose" /> is NULL.</para></exception></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.EndStatisticalTraining"><summary>End statistical training on this pattern. No further statistical training may be performed after calling this method. Calling this method will free some internal data, causing this object to use less memory.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this method causes StatisticalTrainingEnded property to change.</event></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Execute(Cognex.VisionPro.CogImage8Grey,Cognex.VisionPro.CogTransform2DLinear,Cognex.VisionPro.PatInspect.CogPatInspectRunParams)"><param name="inputImage"><PARA>The <see cref="T:Cognex.VisionPro.CogImage8Grey" /> containing the features you want to analyze with the PatInspect tool.</PARA></param><param name="pose"><PARA>The <see cref="T:Cognex.VisionPro.CogTransform2DLinear" /> that maps the alignment region in the input image to the alignment region of the training image.</PARA></param><param name="runParams"><PARA>The <see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectRunParams" /> containing the parameters for how the PatInspect inspection will be performed and what data will be generated as part of the result.</PARA></param><returns><PARA>The <see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectResult" /> containing the various match images and difference images the tool was configured to generate.</PARA></returns><remarks><PARA>Analyze the current <paramref name="inputImage" /> with the PatInspect tool and generate the output images determined by the current set of <paramref name="runParams" />. The tool uses the <paramref name="pose" /> to map from "Pattern Space" to the selected space of the input image and is used to align the pattern with the features that will be inspected 
in the input image.</PARA></remarks><exception cref="T:Cognex.VisionPro.Exceptions.CogSecurityViolationException" cgnxHRESULT="E_Cog_SecurityViolation"><para>Security is not enabled for this vision tool. See 
<see cref="u:Programming.Tools.Theory.Security" cgnxAnchor="resolving_securityrelated_error_messages">Resolving Security-Related Error Messages</see>
for more information.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadSelectedSpaceNameException" cgnxHRESULT="E_CogImage_BadSelectedSpaceName"><para>The selected space of <paramref name="inputImage" /> is not
		a valid space of <paramref name="inputImage" />'s coordinate space tree.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadSelectedSpaceNameException" cgnxHRESULT="E_CogImage_BadSelectedSpaceName"><para> The selected space name of <paramref name="inputImage" /> 
		is a nonqualified space name and more than one instance of it exists in the space tree of <paramref name="inputImage" />.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadSelectedSpaceNameException" cgnxHRESULT="E_CogImage_BadSelectedSpaceName"><para> The selected space name
of <paramref name="inputImage" />  is not a legal space name. </para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorNoInputImageException" cgnxHRESULT="E_CogOperator_NoInputImage"><para><paramref name="inputImage" /> is NULL.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageNoPixelsException" cgnxHRESULT="E_CogImage_NoPixels"><para><paramref name="inputImage" />  is not allocated.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorNotTrainedException" cgnxHRESULT="E_CogOperator_NotTrained"><para>The pattern is not trained.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogPatInspectNormalizationFailedException" cgnxHRESULT="E_CogPatInspect_NormalizationFailed"><para>The portion of <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainRegion" /> mapped onto <paramref name="inputImage" /> does not contain enough data to perform normalization.</para></exception><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="pose" /> is NULL.</para></exception><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="runParams" /> is NULL.</para></exception><summary>Perform a PatInspect inspection on the provided input image.  The Pose maps from "Pattern Space" to the selected space of the input image and is used to align the pattern with the features that will be inspected in the input image.</summary></member><member name="E:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.PatInspect.CogPatInspectTool"><remarks><PARA>A PatInspect tool can be used to detect defects by comparing the desired region of an input image to a trained pattern.  The trained pattern can be trained from one or more good images that contain no defects.</PARA></remarks><summary>A PatInspect tool can be used to detect defects by comparing the desired region of an input image to a template image stored in the tool's pattern.  The template image may be trained from one or more good images that contain no defects.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectTool.#ctor(Cognex.VisionPro.PatInspect.CogPatInspectTool)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectTool.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectTool.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectTool.SfLastRunRecordEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LastRunRecordEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectTool.SfLastRunRecordDiagEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LastRunRecordDiagEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectTool.SfCurrentRecordEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CurrentRecordEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectTool.SfInputImage"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by InputImage may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectTool.SfPose"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Pose may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectTool.SfRunParams"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by RunParams may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectTool.SfPattern"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Pattern may have changed.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectTool.SfResult"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Result may have changed.</summary></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.Result"><remarks><PARA>Result object from the last execution of the <see cref="M:Cognex.VisionPro.PatInspect.CogPatInspectTool.Run" /> method.  A new <see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectResult" /> object is generated for each inspection.  The previous result is released prior to the new inspection. </PARA></remarks><summary>Result object from the last invocation of the Run method.  A gcnew CogPatInspectResult object is factoried for each inspection.  Previous result will be released prior to the new inspection.</summary></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.Pattern"><remarks><PARA>Provides access to the train time parameters and to the results of training a PatInspect pattern.  The pattern must be trained using the <see cref="M:Cognex.VisionPro.PatInspect.CogPatInspectPattern.Train" /> method prior to performing an inspection which is done by calling the <see cref="M:Cognex.VisionPro.PatInspect.CogPatInspectTool.Run" /> method.</PARA><DEFAULT>A default constructed <see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectPattern" /></DEFAULT></remarks><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogPatInspectTool_Pattern--><ul><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectTool.SfPattern" /></li></ul></event><summary>Provides access to the train time parameters and to the results of training a PatInspect pattern.  The pattern must be trained via the Train method prior to performing an inspection which is done by calling the tool's Run method.</summary></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.RunParams"><remarks><PARA>Provides access to PatInspect run-time parameters, which are used to indicate how the PatInspect inspection will be performed and what data will be generated as part of the PatInspect result.</PARA><DEFAULT>A default constructed <see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectRunParams" /></DEFAULT></remarks><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogPatInspectTool_RunParams--><ul><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectTool.SfRunParams" /></li></ul></event><summary>Provides access to PatInspect run-time parameters.  The run-time parameters are used to indicate how the PatInspect inspection will be performed and what data will be generated as part of the PatInspect result.</summary></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.Pose"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogPatInspectTool_Pose--><ul><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectTool.SfPose" /></li></ul></event><remarks><PARA>Transform which maps from "Pattern Space" to the selected space of the input image and is used to align the pattern with the features that will be inspected in the input image.</PARA><DEFAULT>A default constructed linear transform </DEFAULT></remarks><summary>Transform which maps from "Pattern Space" to the selected space of the input image and is used to align the pattern with the features that will be inspected in the input image.</summary></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.InputImage"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogPatInspectTool_InputImage--><ul><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectTool.SfInputImage" /></li></ul></event><summary>Input image for performing a PatInspect inspection.  This tool's Pose property indicates where in the image to perform the inspection.</summary><remarks><PARA>The input image for performing a PatInspect inspection.  The <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.Pose">Pose </see> property indicates where in the image to perform the inspection.</PARA><DEFAULT>NULL</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.CurrentRecordEnable"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogPatInspectTool_CurrentRecordEnable--><ul><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectTool.SfCurrentRecordEnable" /></li></ul></event><summary>Enable creation of records by bitwise ORing the appropriate CurrentRecordConstants.</summary><remarks><PARA>Enable creation of records by bitwise ORing the appropriate <see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants">CurrentRecordConstants</see>.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants">TrainImage</see> +
<see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants">TrainImageMask</see>  +
<see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants">TrainRegion</see> +
<see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants">PatternOrigin</see> +
<see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants">InputImage</see> +
<see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants">Pose</see> +
<see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants">Region</see> +
<see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants">TrainedPatternImage</see> +
<see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants">TrainedThresholdImage</see> +
<see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants">TrainedPatternRegion</see> +
<see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants">TrainedPatternOrigin</see> +
<see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants">TrainedPatternImageMask</see></DEFAULT></remarks></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.LastRunRecordDiagEnable"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogPatInspectTool_LastRunRecordDiagEnable--><ul><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectTool.SfLastRunRecordDiagEnable" /></li></ul></event><remarks><PARA>Enable creation of records by bitwise ORing the appropriate <see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordDiagConstants">LastRunRecordDiagConstants</see>.  These are diagnostic records that can cause the PatInspect tool to require a longer execution time.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordDiagConstants">InputImageByReference</see></DEFAULT></remarks><summary>Enable creation of records by bitwise ORing the appropriate LastRunRecordDiagConstants.  These are diagnostic records that may cause the Tool to have a longer execution time.</summary></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.LastRunRecordEnable"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogPatInspectTool_LastRunRecordEnable--><ul><li><see cref="F:Cognex.VisionPro.PatInspect.CogPatInspectTool.SfLastRunRecordEnable" /></li></ul></event><remarks><PARA>Enable creation of records by bitwise ORing the appropriate <see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordConstants">LastRunRecordConstants</see>.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordConstants">MatchImages</see> +
<see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordConstants">DifferenceImagesAsGraphic</see> +
<see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordConstants">DifferenceImagesRaw</see> +
<see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordConstants">DifferenceImages</see> +
<see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordConstants">ClippedMask</see></DEFAULT></remarks><summary>Enable creation of records by bitwise ORing the appropriate LastRunRecordConstants.</summary></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.RunStatus"><summary>Gets general information about the last call to Run.</summary></member><member name="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.Name"><summary>Gets or sets the name of the tool.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectTool.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectTool.Run"><event cref="E:Cognex.VisionPro.ICogTool.Running" cgnxEvent="PreRun"><para>
		Fires before the tool runs.
	</para></event><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="multiState"><para>
	
		Fires when the tool runs. If the run was successful, results are generated;
		if the run was not successful, no results are generated and the previous results are cleared.
		Use <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.RunStatus" /> after <see cref="T:Cognex.VisionPro.PatInspect.CogPatInspectTool" /> returns or in a
		<see cref="E:Cognex.VisionPro.ICogTool.Ran" /> event handler
		to determine whether a run was successful or unsuccessful.
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_Tool_Results--><!--FA:cogFA_Tool_LastRunRecord--></ul></event><event cref="E:Cognex.VisionPro.ICogTool.Ran" cgnxEvent="PostRun"><para>
		Fires after the tool runs.
	</para></event><exception cref="T:Cognex.VisionPro.Exceptions.CogSecurityViolationException" cgnxHRESULT="E_Cog_SecurityViolation"><para>Security is not enabled for this vision tool. See 
<see cref="u:Programming.Tools.Theory.Security" cgnxAnchor="resolving_securityrelated_error_messages">Resolving Security-Related Error Messages</see>
for more information.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadSelectedSpaceNameException" cgnxHRESULT="E_CogImage_BadSelectedSpaceName"><para>The selected space of <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.InputImage" /> is not
		a valid space of <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.InputImage" />'s coordinate space tree.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadSelectedSpaceNameException" cgnxHRESULT="E_CogImage_BadSelectedSpaceName"><para> The selected space name of <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.InputImage" /> 
		is a nonqualified space name and more than one instance of it exists in the space tree of <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.InputImage" />.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadSelectedSpaceNameException" cgnxHRESULT="E_CogImage_BadSelectedSpaceName"><para> The selected space name
of <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.InputImage" />  is not a legal space name. </para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorNoInputImageException" cgnxHRESULT="E_CogOperator_NoInputImage"><para><see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.InputImage" /> is NULL.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageNoPixelsException" cgnxHRESULT="E_CogImage_NoPixels"><para><see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.InputImage" />  is not allocated.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorNotTrainedException" cgnxHRESULT="E_CogOperator_NotTrained"><para>The pattern is not trained.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogToolNoOperatorException" cgnxHRESULT="E_CogTool_NoOperator"><para><see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.Pattern" /> is NULL.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogPatInspectNormalizationFailedException" cgnxHRESULT="E_CogPatInspect_NormalizationFailed"><para>The portion of <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectPattern.TrainRegion" /> mapped onto <see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.InputImage" /> does not contain enough data to perform normalization.</para></exception><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.Pose" /> is NULL.</para></exception><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.RunParams" /> is NULL.</para></exception><summary>Runs the tool using the current parameter settings.</summary><remarks><PARA>Compare the selected region of the input image to the trained pattern and generate one or more output images that represent the differences between the two.</PARA><NOTE>
		This method does not actually raise the exceptions listed below. 
		Use the <see cref="P:Cognex.VisionPro.CogFitCircleTool.RunStatus" /> property
		to obtain a <see cref="T:Cognex.VisionPro.ICogRunStatus" /> reference. Then use
		its <see cref="P:Cognex.VisionPro.ICogRunStatus.Exception" /> property to see
		if the Run method raised any exceptions.
	</NOTE></remarks></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectTool.~CogPatInspectTool"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.PatInspect.CogPatInspectTool.!CogPatInspectTool"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="T:Cognex.VisionPro.PatInspect.CogPatInspectMatchImageConstants"><remarks><PARA>Enumeration of match images that can be generated by PatInspect.</PARA></remarks><summary>Enumeration of match images that can be generated by PatInspect.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectMatchImageConstants.None"><summary>No match images will be created.</summary><remarks><PARA>No match images will be created.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectMatchImageConstants.Image"><summary>The region of the run-time input image that matches the trained pattern image.</summary><remarks><PARA>The region of the run-time input image that matches the trained pattern image.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectMatchImageConstants.ImageNormalized"><summary>The region of the run-time input image that matches the trained pattern image.  This match image is normalized based on the run-time normalization mode property of the pattern.</summary><remarks><PARA>The region of the run-time input image that matches the trained pattern image.  This match image is normalized based on the run-time normalization mode property of the pattern.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectMatchImageConstants.All"><remarks><PARA>Create all match images.</PARA></remarks><summary>Create all match images.</summary></member><member name="T:Cognex.VisionPro.PatInspect.CogPatInspectDifferenceImageConstants"><summary>Enumeration of difference images that can be generated by PatInspect.</summary><remarks><PARA>Enumeration of difference images that can be generated by PatInspect.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectDifferenceImageConstants.None"><summary>No difference image will be created.</summary><remarks><PARA>No difference image will be created.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectDifferenceImageConstants.Absolute"><summary>Difference image that contains the absolute difference between the pixels of the normalized input image and the trained pattern image.  Pixels greater than zero indicate absolute differences that are above the allowable threshold.</summary><remarks><PARA>Difference image that contains the absolute difference between the pixels of the normalized input image and the trained pattern image.  Pixels greater than zero indicate absolute differences that are above the allowable threshold.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectDifferenceImageConstants.Brighter"><remarks><PARA>Difference image that contains only features that are brighter in the normalized input image than in the trained pattern image.  Pixels greater than zero indicate brighter differences above the allowable threshold.  Darker differences are clamped to zero.</PARA></remarks><summary>Difference image that contains only features that are brighter in the normalized input image than in the trained pattern image.  Pixels greater than zero indicate brighter differences above the allowable threshold.  Darker differences are clamped to zero.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectDifferenceImageConstants.Darker"><remarks><PARA>Difference image that contains only features that are darker in the normalized input image than in the trained pattern image.  Pixels greater than zero indicate darker differences above the allowable threshold.  Brighter differences are clamped to zero.</PARA></remarks><summary>Difference image that contains only features that are darker in the normalized input image than in the trained pattern image.  Pixels greater than zero indicate darker differences above the allowable threshold.  Brighter differences are clamped to zero.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectDifferenceImageConstants.All"><remarks><PARA>Create all difference images.</PARA></remarks><summary>Create all difference images.</summary></member><member name="T:Cognex.VisionPro.PatInspect.CogPatInspectNormalizationModeConstants"><remarks><PARA>Normalization modes that can be applied to the input image prior to performing the intensity difference operation with the trained pattern image.</PARA></remarks><summary>Normalization modes that can be applied to the input image prior to performing the intensity difference operation with the trained pattern image.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectNormalizationModeConstants.Identity"><summary>No normalization is performed on the input image prior to performing the intensity difference operation.</summary><remarks><PARA>No normalization is performed on the input image prior to performing the intensity difference operation.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectNormalizationModeConstants.HistogramEqualization"><remarks><PARA>Histogram equalization is performed on the input image prior to performing the intensity difference operation.</PARA></remarks><summary>Histogram equalization is performed on the input image prior to performing the intensity difference operation.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectNormalizationModeConstants.MeanAndStdDev"><remarks><PARA>Mean and standard deviation equalization is performed on the input image prior to performing the intensity difference operation.</PARA></remarks><summary>Mean and standard deviation equalization is performed on the input image prior to performing the intensity difference operation.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectNormalizationModeConstants.MatchTails"><summary>Tail matching equalization is performed on the input image prior to performing the intensity difference operation.</summary><remarks><PARA>Tail matching equalization is performed on the input image prior to performing the intensity difference operation.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectNormalizationModeConstants.RobustLineFit"><remarks><PARA>Robust line fit equalization is performed on the input image prior to performing the intensity difference operation. </PARA></remarks><summary>Robust line fit equalization is performed on the input image prior to performing the intensity on the input image.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectNormalizationModeConstants.LocalCorrection"><summary>Local correction equalization is performed on the input image prior to performing the intensity difference operation.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectNormalizationModeConstants.LocalCorrectionEnhanced"><summary>Enhanced local correction equalization is performed on the input image prior to performing the intensity difference operation.</summary></member><member name="T:Cognex.VisionPro.PatInspect.CogPatInspectInterpolationModeConstants"><summary>Interpolation modes for affine transforms applied to the region.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectInterpolationModeConstants.Compatibility"><summary>This interpolation mode is provided for compatibility with older CogPatInspectPattern archives.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectInterpolationModeConstants.Bilinear"><summary>Perform affine transform interpolation using bilinear algorithm.</summary></member><member name="T:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordConstants"><remarks><PARA>
    Use these constants with
<see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.LastRunRecordEnable" /> to specify the 
<!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Programming.Tools.Theory.ToolRecords">tool records</see> that the
CogPatInspect Tool
generates when you call
<see cref="M:Cognex.VisionPro.ICogTool.CreateLastRunRecord" />.
</PARA><PARA>
See <see cref="u:Programming.Tools.Theory.RecordKeys" cgnxAnchor="cogpatinspecttool_record_keys">About Record Keys</see>  for a list of the record keys that the tool uses.
</PARA></remarks><summary>Enumeration of non-diagnostic data that can be provided in the Tool's LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordConstants.None"><remarks><PARA>Do not include any non-diagnostic records in the LastRunRecord.</PARA></remarks><summary>Do not include any non-diagnostic records in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordConstants.MatchImages"><remarks><PARA>Include all match images that were created during the last invocation of run in the LastRunRecord.</PARA></remarks><summary>Include all match image(s) that were created during the last invocation of run in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordConstants.DifferenceImagesAsGraphic"><remarks><PARA>Include a graphic representing the thresholded difference images to be displayed over the match images.  Each graphic pixel will be color coded to indicate the magnitude(M) of the grey scale difference, cyan(M=1) to red (M&gt;=20).</PARA></remarks><summary>Include a graphic representing the thresholded difference images to be displayed over the match image(s).  Each graphic pixel will be color coded to indicate the magnitude(M) of the grey scale difference, cyan(M=1) to red (M&gt;=20).</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordConstants.DifferenceImagesRawAsGraphic"><summary>Include a graphic representing the unthresholded (raw) difference images to be displayed over the match image(s).  Each graphic pixel will be color coded to indicate the magnitude(M) of the grey scale difference, cyan(M=1) to red (M&gt;=20).</summary><remarks><PARA>Include a graphic representing the unthresholded (raw) difference images to be displayed over the match images.  Each graphic pixel will be color coded to indicate the magnitude(M) of the grey scale difference, cyan(M=1) to red (M&gt;=20).</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordConstants.DifferenceImages"><summary>Include all thresholded difference image(s) that were created during the last invocation of run in the LastRunRecord.</summary><remarks><PARA>Include all thresholded difference images that were created during the last invocation of run in the LastRunRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordConstants.DifferenceImagesRaw"><remarks><PARA>Include all unthresholded (raw) difference images that were created during the last invocation of run in the LastRunRecord.</PARA></remarks><summary>Include all unthresholded (raw) difference image(s) that were created during the last invocation of run in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordConstants.ClippedMask"><summary>Include a graphic representing the clipped mask on all of the result images in the LastRunRecord.</summary><remarks><PARA>Include a graphic representing the clipped mask on all of the result images in the LastRunRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordConstants.All"><summary>Include all non-diagnostic records in the LastRunRecord.</summary><remarks><PARA>Include all non-diagnostic records in the LastRunRecord.</PARA></remarks></member><member name="T:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordDiagConstants"><remarks><PARA>
    Use these constants with
<see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.LastRunRecordDiagEnable" /> to specify the 
diagnostic
<!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Programming.Tools.Theory.ToolRecords">tool records</see> that the
CogPatInspect Tool
generates when you call
<see cref="M:Cognex.VisionPro.ICogTool.CreateLastRunRecord" />.
</PARA><PARA>
See <see cref="u:Programming.Tools.Theory.RecordKeys" cgnxAnchor="cogpatinspecttool_record_keys">About Record Keys</see>  for a list of the record keys that the tool uses.
</PARA></remarks><summary>Enumeration of diagnostic data that can be provided in the Tool's LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordDiagConstants.None"><remarks><PARA>Do not include any diagnostic records in the LastRunRecord.</PARA></remarks><summary>Do not include any diagnostic records in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordDiagConstants.InputImageByReference"><summary>Include a reference to the input image in the LastRunRecord.</summary><remarks><PARA>Include a reference to the input image in the LastRunRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordDiagConstants.InputImageDeepCopy"><summary>Include a deep copy of the input image in the LastRunRecord.</summary><remarks><PARA>Include a deep copy of the input image in the LastRunRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordDiagConstants.Region"><summary>Include a graphic for the inspection region on the last run input image and all all of the result images in the LastRunRecord.</summary><remarks><PARA>Include a graphic for the inspection region on the last run input image and all of the result images in the LastRunRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordDiagConstants.Pose"><remarks><PARA>Include a graphic for the pose on the last run input image and all of the result images in the LastRunRecord.</PARA></remarks><summary>Include a graphic for the pose on the last run input image and all all of the result images in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordDiagConstants.Mask"><remarks><PARA>Include a graphic representing the pattern's mask on all of the result images in the LastRunRecord.</PARA></remarks><summary>Include a graphic representing the pattern's mask on all of the result images in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordDiagConstants.TrainImageDeepCopy"><remarks><PARA>Include a deep copy of the entire train image in the LastRunRecord.</PARA></remarks><summary>Include a deep copy of the entire train image in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordDiagConstants.PatternOrigin"><summary>Include a graphic for the pattern origin to be displayed on the last run train image.</summary><remarks><PARA>Include a graphic for the pattern origin to be displayed on the last run train image.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordDiagConstants.TrainRegion"><summary>Include a clone of the train region to be displayed on the last run train image.</summary><remarks><PARA>Include a clone of the train region to be displayed on the last run train image.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordDiagConstants.TrainImageMask"><summary>Include a graphic representing the train image mask to be displayed over the last run train image.</summary><remarks><PARA>Include a graphic representing the train image mask to be displayed over the last run train image.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordDiagConstants.TrainedPatternImage"><summary>Include the trained pattern image in the LastRunRecord.</summary><remarks><PARA>Include the trained pattern image in the LastRunRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordDiagConstants.TrainedThresholdImage"><summary>Include the trained threshold image in the LastRunRecord.</summary><remarks><PARA>Include the trained threshold image in the LastRunRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordDiagConstants.TrainedPatternOrigin"><remarks><PARA>Include a non-interactive graphic representing the pattern origin on both the last run trained pattern image and the last run trained threshold image.</PARA></remarks><summary>Include a non-interactive graphic representing the pattern origin on both the last run trained pattern image and the last run trained threshold image.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordDiagConstants.TrainedPatternRegion"><remarks><PARA>Include a non-interactive graphic representing the train region on both the last run trained pattern image and the last run trained threshold image.</PARA></remarks><summary>Include a non-interactive graphic representing the train region on both the last run trained pattern image and the last run trained threshold image.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordDiagConstants.TrainedPatternImageMask"><remarks><PARA>Include a graphic representing the trained image mask on the last run trained pattern image and the last run trained threshold image.</PARA></remarks><summary>Include a graphic representing the trained image mask on the last run trained pattern image and the last run trained threshold image.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectLastRunRecordDiagConstants.All"><summary>Include all diagnostic records in the LastRunRecord.</summary><remarks><PARA>Include all diagnostic records in the LastRunRecord.</PARA></remarks></member><member name="T:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants"><summary>Enumeration of data that can be provided in the Tool's CurrentRecord.</summary><remarks><PARA>
    Use these constants with
<see cref="P:Cognex.VisionPro.PatInspect.CogPatInspectTool.CurrentRecordEnable" /> to specify the 
<!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Programming.Tools.Theory.ToolRecords">tool records</see> that the
CogPatInspect Tool
generates when you call
<see cref="M:Cognex.VisionPro.ICogTool.CreateCurrentRecord" />.
</PARA><PARA>
See <see cref="u:Programming.Tools.Theory.RecordKeys" cgnxAnchor="cogpatinspecttool_record_keys">About Record Keys</see>  for a list of the record keys that the tool uses.
</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants.None"><summary>Do not include any records in the CurrentRecord.</summary><remarks><PARA>Do not include any records in the CurrentRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants.InputImage"><summary>Include the input image in the CurrentRecord.</summary><remarks><PARA>Include the input image in the CurrentRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants.Pose"><summary>Include a non-interactive coordinate axes representing the pose on the current input image.</summary><remarks><PARA>Include a non-interactive coordinate axes representing the pose on the current input image.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants.Region"><remarks><PARA>Include a non-interactive graphic for the region on the current input image.  This region represents the train-time region mapped onto the current input image based on the supplied pose property of the tool.</PARA></remarks><summary>Include a non-interactive graphic for the region on the current input image.  This region represents the train-time region mapped onto the current input image based on the supplied pose property of the tool.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants.TrainImage"><summary>Include the train image in the CurrentRecord.</summary><remarks><PARA>Include the train image in the CurrentRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants.PatternOrigin"><remarks><PARA>Include a non-interactive coordinate axes representing the pattern origin on the current train image.</PARA></remarks><summary>Include a non-interactive coordinate axes representing the pattern origin on the current train image.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants.TrainRegion"><summary>Include the (interactive) train region on the current train image.</summary><remarks><PARA>Include the (interactive) train region on the current train image.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants.TrainImageMask"><summary>Include a graphic representing the train image mask on the current train image.</summary><remarks><PARA>Include a graphic representing the train image mask on the current train image.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants.TrainedPatternImage"><summary>Include the trained pattern image in the CurrentRecord.</summary><remarks><PARA>Include the trained pattern image in the CurrentRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants.TrainedThresholdImage"><remarks><PARA>Include the trained threshold image in the CurrentRecord.</PARA></remarks><summary>Include the trained threshold image in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants.TrainedPatternRegion"><summary>Include a non-interactive graphic representing the train region on both the trained pattern image and the trained threshold image.</summary><remarks><PARA>Include a non-interactive graphic representing the train region on both the trained pattern image and the trained threshold image.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants.TrainedPatternOrigin"><summary>Include a non-interactive graphic representing the pattern origin on both the trained pattern image and the trained threshold image.</summary><remarks><PARA>Include a non-interactive graphic representing the pattern origin on both the trained pattern image and the trained threshold image.</PARA></remarks></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants.TrainedPatternImageMask"><remarks><PARA>Include a graphic representing the trained image mask on the trained pattern image and trained threshold image.</PARA></remarks><summary>Include a graphic representing the trained image mask on the trained pattern image and trained threshold image.</summary></member><member name="F:Cognex.VisionPro.PatInspect.CogPatInspectCurrentRecordConstants.All"><summary>Include all possible records in the CurrentRecord.</summary><remarks><PARA>Include all possible records in the CurrentRecord.</PARA></remarks></member><member name="T:Cognex.VisionPro.PatInspect.CogPatInspectRunParams.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.PatInspect.CogPatInspectPattern.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member></members></doc>