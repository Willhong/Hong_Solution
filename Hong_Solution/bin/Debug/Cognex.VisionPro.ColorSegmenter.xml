<?xml version="1.0"?><doc><assembly><name>Cognex.VisionPro.ColorSegmenter</name></assembly><members><member name="T:Cognex.VisionPro.ColorSegmenter.CogColorRangeItem"><summary>Class of color value range item for segmenter. It has Selected property to indicate whether it might be used in a collection for color segmentation.</summary></member><member name="M:Cognex.VisionPro.ColorSegmenter.CogColorRangeItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"><param name="info">n/a</param><param name="ctxt">n/a</param><summary>Serialization constructor.</summary></member><member name="M:Cognex.VisionPro.ColorSegmenter.CogColorRangeItem.#ctor(Cognex.VisionPro.ColorSegmenter.CogColorRangeItem)"><param name="other">The CogColorRangeItem object to be copied. May not be NULL.</param><summary>Construct a deep copy of the supplied CogColorRangeItem object.</summary><exception cref="T:System.ArgumentNullException">If <paramref name="other" /> is NULL.</exception></member><member name="M:Cognex.VisionPro.ColorSegmenter.CogColorRangeItem.#ctor(Cognex.VisionPro.CogSimpleColor)"><param name="color">The nominal color for the new CogColorRangeItem object. May not be NULL</param><exception cref="T:System.ArgumentNullException">If <paramref name="color" /> is NULL.</exception><summary>Constructs a CogColorRangeItem based on a simple color value.</summary></member><member name="P:Cognex.VisionPro.ColorSegmenter.CogColorRangeItem.Selected"><value>True if this object is selected for running; otherwise, false.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><summary>Gets or sets the selection property for this color range item.</summary></member><member name="P:Cognex.VisionPro.ColorSegmenter.CogColorRangeItem.PlaneRange2"><summary>Gets/sets the CogPlaneRange object for the third image plane.</summary><exception cref="T:System.ArgumentNullException">If the new value is NULL.</exception><value>The CogPlaneRange object for the third image plane.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ArgumentException">If the color plane of  the new value is not the same as the color plane of PlaneRange2.</exception></member><member name="P:Cognex.VisionPro.ColorSegmenter.CogColorRangeItem.PlaneRange1"><exception cref="T:System.ArgumentException">If the color plane of the new value is not the same as the color plane of PlaneRange1.</exception><value>The CogPlaneRange object for the second image plane.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ArgumentNullException">If the new value is NULL.</exception><summary>Gets/sets the CogPlaneRange object for the second image plane.</summary></member><member name="P:Cognex.VisionPro.ColorSegmenter.CogColorRangeItem.PlaneRange0"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ArgumentException">If the color plane of   the new value is not the same as the color plane of PlaneRange0.</exception><value>The CogPlaneRange object for the first image plane.</value><summary>Gets/sets the CogPlaneRange object for the first image plane.</summary><exception cref="T:System.ArgumentNullException">If the new value is NULL.</exception></member><member name="P:Cognex.VisionPro.ColorSegmenter.CogColorRangeItem.Name"><value>The name of this CogColorRange object. Its default value is NULL.</value><summary>Gets or sets the name of this CogColorRange object which provides another way to distinguish color range objects.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="M:Cognex.VisionPro.ColorSegmenter.CogColorRangeItem.GetColor"><summary>Gets a CogSimpleColor object based on the name, color space and nominal values from this CogColorRange object.</summary></member><member name="M:Cognex.VisionPro.ColorSegmenter.CogColorRangeItem.SetColor(Cognex.VisionPro.CogSimpleColor)"><param name="color">The CogSimpleColor object to specify the new nominal color value and color name. May not be NULL.</param><remarks>It may result in changing the tolerance values if plane ranges based on the new nominal color are out of the range limits.</remarks><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this method updates the Name property.</event><exception cref="T:System.ArgumentNullException">If <paramref name="color" /> is NULL.</exception><summary>Updates the range values based on the provided color.</summary><exception cref="T:System.ArgumentException">If the color space of <paramref name="color" /> is not the same as the color space of this CogColorRange object.</exception></member><member name="M:Cognex.VisionPro.ColorSegmenter.CogColorRangeItem.UpdateUsingMeanVarianceFromImageRegion(Cognex.VisionPro.CogImage24PlanarColor,Cognex.VisionPro.ICogRegion)"><param name="image">The CogImage24PlanarColor object to update color range from. May not be NULL.</param><param name="region">The ICogRegion object to specify a portion of the image to be used. If it is NULL, the whole image is used.</param><summary>Updates the range values based on the mean and variance from the provided image and Region.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this method updates the range values.</event><exception cref="T:System.InvalidOperationException">If an internal error occurs.</exception><remarks>If the absoulte Tolerance values of any plane range after the updating are less than 5, it sets the Tolerances of that plane range to be +/-5, or clipped values if the range defined by +/-5 is out of range limits.</remarks><exception cref="T:System.ArgumentNullException">If <paramref name="image" /> is NULL.</exception></member><member name="T:Cognex.VisionPro.ColorSegmenter.CogColorRangeCollection"><summary>Class of color range collection for segmenter.</summary></member><member name="M:Cognex.VisionPro.ColorSegmenter.CogColorRangeCollection.#ctor(Cognex.VisionPro.ColorSegmenter.CogColorRangeCollection)"><param name="other">The CogColorRangeCollection object to be copied. May not be NULL.</param><exception cref="T:System.NullReferenceException">If <paramref name="other" /> is NULL.</exception><summary>Construct a deep copy of the supplied CogColorRangeCollection object.</summary></member><member name="M:Cognex.VisionPro.ColorSegmenter.CogColorRangeCollection.#ctor"><summary>Construct a default  CogColorRangeCollection object.</summary></member><member name="P:Cognex.VisionPro.ColorSegmenter.CogColorRangeCollection.Item(System.Int32)"><param name="index">The zero-based index to specify a location in the CogColorRangeCollection.</param><exception cref="T:System.IndexOutOfRangeException">If <paramref name="index" /> is not a valid index in the CogColorRangeCollection.</exception><exception cref="T:System.ArgumentNullException">If you attempt to set it to a NULL value.</exception><summary>Gets or sets the CogColorRangeItem at the specific index in the CogColorRangeCollection.</summary></member><member name="M:Cognex.VisionPro.ColorSegmenter.CogColorRangeCollection.GetEnumerator"><returns>An IEnumerator that can be used to iterate through the CogColorRangeCollection's objects.</returns><summary>Returns an enumerator that can iterate through the CogColorRangeCollection's elements.</summary></member><member name="M:Cognex.VisionPro.ColorSegmenter.CogColorRangeCollection.IndexOf(Cognex.VisionPro.ColorSegmenter.CogColorRangeItem)"><param name="value">The CogColorRangeItem to locate in the CogColorRangeCollection.</param><returns>Zero-based index of value if found in the collection; otherwise -1.</returns><summary>Determines the index of a specific CogColorRangeItem in the CogColorRangeCollection.</summary></member><member name="M:Cognex.VisionPro.ColorSegmenter.CogColorRangeCollection.Contains(Cognex.VisionPro.ColorSegmenter.CogColorRangeItem)"><param name="value">The CogColorRangeItem to locate in the CogColorRangeCollection.</param><summary>Determines whether the CogColorRangeCollection contains a specific CogColorRangeItem.</summary><returns>True if the CogColorRangeCollection contains value; otherwise, false.</returns></member><member name="M:Cognex.VisionPro.ColorSegmenter.CogColorRangeCollection.Add(Cognex.VisionPro.ColorSegmenter.CogColorRangeItem)"><param name="value">The CogColorRangeItem to add to the CogColorRangeCollection.</param><exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is NULL.</exception><summary>Adds an item to the CogColorRangeCollection.</summary></member><member name="M:Cognex.VisionPro.ColorSegmenter.CogColorRangeCollection.Insert(System.Int32,Cognex.VisionPro.ColorSegmenter.CogColorRangeItem)"><param name="index">The zero-based index at which value should be inserted.</param><param name="value">The CogColorRangeItem to insert into the CogColorRangeCollection.</param><summary>Insert an item to the CogColorRangeCollection at the specified position.</summary><exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is NULL.</exception><exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="index" /> is not a valid index in the CogColorRangeCollection.</exception></member><member name="M:Cognex.VisionPro.ColorSegmenter.CogColorRangeCollection.Remove(Cognex.VisionPro.ColorSegmenter.CogColorRangeItem)"><param name="value">The CogColorRangeItem to remove from the CogColorRangeCollection.</param><summary>Removes the first occurrence of a specific CogColorRangeItem from the CogColorRangeCollection.</summary><exception cref="T:System.ArgumentNullException">If <paramref name="other" /> is NULL.</exception></member><member name="M:Cognex.VisionPro.ColorSegmenter.CogColorRangeCollection.GetSelectedCount"><returns>The number of CogColorRangeItem items selected in the CogColorRangeCollection.</returns><summary>Gets the total number of CogColorRangeItem items selected in the CogColorRangeCollection.</summary></member><member name="T:Cognex.VisionPro.ColorSegmenter.CogColorSegmenter"><summary>This class is the workhorse of the <see cref="N:Cognex.VisionPro.ColorSegmenter" /> assembly; it does the actual color segmentation. This class contains the collected color ranges. You can use this class to perform color segmentation, or you can use the tool,<see cref="T:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterTool" />.</summary></member><member name="M:Cognex.VisionPro.ColorSegmenter.CogColorSegmenter.#ctor(Cognex.VisionPro.ColorSegmenter.CogColorSegmenter)"><param name="other">The CogColorSegmenter object to be copied. May not be NULL.</param><exception cref="T:System.ArgumentNullException">If <paramref name="other" /> is NULL.</exception><summary>Constructs a deep copy of the supplied CogColorSegmenter object.</summary></member><member name="M:Cognex.VisionPro.ColorSegmenter.CogColorSegmenter.#ctor"><summary>Constructs a default CogColorSegmenter object.</summary></member><member name="P:Cognex.VisionPro.ColorSegmenter.CogColorSegmenter.ColorRangeCollection"><summary>Gets or sets the color range collection.</summary><value>The color range collection</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="M:Cognex.VisionPro.ColorSegmenter.CogColorSegmenter.Execute(Cognex.VisionPro.CogImage24PlanarColor,Cognex.VisionPro.ICogRegion)"><param name="image">The image to segment. May not be NULL.</param><param name="region">The ICogRegion object to specify a portion of the image to segment. If it is NULL, the whole image will be segmented.</param><returns>The segment image of CogImage8Grey.</returns><exception cref="T:Cognex.VisionPro.Exceptions.CogSecurityViolationException">If licensing for this operator cannot be confirmed.</exception><exception cref="T:System.NullReferenceException">If this operator's color collection member is NULL.</exception><summary>Performs color segmentation upon the specified region of the specified image according to the selected color ranges.</summary><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorInvalidRegionException">If <paramref name="region" /> contains no pixel or outside the image.</exception><exception cref="T:System.ArgumentNullException">If <paramref name="image" /> is NULL.</exception><exception cref="T:System.InvalidOperationException">If this operator has no selected colors in its color collection.</exception></member><member name="T:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterTool"><summary>This class provides tool level access to the CogColorSegmenter operator. This class encapsulates all of the classes required to perform a color image segmentation.</summary></member><member name="M:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterTool.#ctor(Cognex.VisionPro.ColorSegmenter.CogColorSegmenterTool)"><param name="other">The CogColorSegmenterTool object to be copied. May not be NULL.</param><exception cref="T:System.NullReferenceException">If <paramref name="other" />t is NULL.</exception><summary>Construct a deep copy of the supplied CogColorSegmenterTool object.</summary></member><member name="M:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterTool.#ctor"><summary>Construct a default CogColorSegmenterTool object.</summary></member><member name="P:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterTool.OverlayColor"><summary>Gets or sets the overlay color which is used for creating the overlay graphic upon the last input image.</summary><value>The overlay color</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="P:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterTool.Result"><value>The resulting segment image</value><summary>Gets the result from the last invocation of the Run method. A new instance of CogImage8Grey is created for each segmentation.</summary></member><member name="P:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterTool.RunParams"><summary>Gets or sets the ColorSegmenter object for the run parameters. This embodies all the color ranges for segmentation.</summary><value>The run parameters</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="P:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterTool.InputImage"><value>The input image</value><summary>Gets or sets the input image used to perform color segmentation.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="P:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterTool.LastRunRecordDiagEnable"><summary>Enable creation of records by bitwise ORing the appropriate CogColorSegmenterLastRunRecordDiagConstants.</summary><value>This read/write property is a bitwise combination of CogColorSegmenterLastRunRecordDiagConstants. Options include None, InputImageByReference, InputImageDeepCopy,  All.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="P:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterTool.LastRunRecordEnable"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><value>This read/write property is a bitwise combination of CogColorSegmenterLastRunRecordConstants. Options include None, SegmentImage, Overlay, All.</value><summary>Enable creation of records by bitwise ORing the appropriate CogColorSegmenterLastRunRecordConstants.</summary></member><member name="P:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterTool.CurrentRecordEnable"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><summary>Enable creation of records by bitwise ORing the appropriate CogColorSegmenterCurrentRecordConstants.</summary><value>This read/write property is a bitwise combination of CogColorSegmenterCurrentRecordConstants. Options include None, InputImage, Region, All.</value></member><member name="P:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterTool.Region"><value>The region. If it is empty, segmentation will be performed on the whole InputImage.</value><summary>Gets or sets the region on the InputImage that will be used to perform color segmentation.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><remarks>The pixel aligned bounding box of the region is used to specify the portion of the input image for segmentation. If Region is NULL, the whole InputImage is used</remarks></member><member name="T:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterCurrentRecordConstants"><summary>Enumeration of data that can be included in the tool's CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterCurrentRecordConstants.None"><summary>Do not include any records in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterCurrentRecordConstants.InputImage"><summary>Include the input image in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterCurrentRecordConstants.Region"><summary>Include the region to be processed in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterCurrentRecordConstants.CogInternalUseBit1"><summary>For Cognex internal use.</summary></member><member name="F:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterCurrentRecordConstants.CogInternalUseBit2"><summary>For Cognex internal use.</summary></member><member name="F:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterCurrentRecordConstants.All"><summary>Include all possible records in the CurrentRecord.</summary></member><member name="T:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterLastRunRecordConstants"><summary>Enumeration of Non-Diagnostic data that can be included in the tool's LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterLastRunRecordConstants.None"><summary>Do not include any of the non-diagnostic data in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterLastRunRecordConstants.SegmentImage"><summary>Include a reference to the segment result image in LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterLastRunRecordConstants.Overlay"><summary>Add overlay graphic to the LastRun.InputImage Record.</summary></member><member name="F:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterLastRunRecordConstants.All"><summary>Include all of the non-diagnostic data in the LastRunRecord.</summary></member><member name="T:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterLastRunRecordDiagConstants"><summary>Enumeration of Diagnostic data that can be included in the tool's LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterLastRunRecordDiagConstants.None"><summary>Do not include any of the diagnostic data in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterLastRunRecordDiagConstants.InputImageByReference"><summary>Include a reference to the input image in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterLastRunRecordDiagConstants.InputImageDeepCopy"><summary>Include a deep copy of the input image in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterLastRunRecordDiagConstants.Region"><summary>Draw the region of the last run image.</summary></member><member name="F:Cognex.VisionPro.ColorSegmenter.CogColorSegmenterLastRunRecordDiagConstants.All"><summary>Include all of the diagnostic data in the LastRunRecord.</summary></member></members></doc>