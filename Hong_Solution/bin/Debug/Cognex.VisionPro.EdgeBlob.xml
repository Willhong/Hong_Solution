<?xml version="1.0"?><doc><assembly><name>Cognex.VisionPro.EdgeBlob</name></assembly><members><member name="T:Cognex.VisionPro.Exceptions.CogEdgeBlobNoSubtractionImageException"><summary>The exception that is thrown when the segmentation mode is 'SubtractionImage' and the subtraction image was null.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogEdgeBlobNoSubtractionImagePixelsException"><summary>The exception that is thrown when the segmentation mode is 'SubtractionImage' and the subtraction image has no pixels.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogEdgeBlobSubtractionImageAlignmentErrorException"><summary>The exception that is thrown when the segmentation mode is 'SubtractionImage' and the subtraction image does not completely overlap the processed region of the input image.  This exception usually occurs because the subtraction image is too small or because incorrect offset values were supplied.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogEdgeBlobSaveSegmentedImageErrorException"><summary>The exception that is thrown when <see cref="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SaveSegmentedImage" /> is set to False but the corresponding bit is set in the LastRunRecordDiagEnable property of the blob tool.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogEdgeBlobSaveSegmentedImageBeforeMaskingErrorException"><summary>The exception that is thrown when <see cref="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SaveSegmentedImageBeforeMasking" /> is set to False but the corresponding bit is set in the LastRunRecordDiagEnable property of the blob tool.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogEdgeBlobSaveSegmentedImageBeforeMorphologyErrorException"><summary>The exception that is thrown when <see cref="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SaveSegmentedImageBeforeMorphology" /> is set to False but the corresponding bit is set in the LastRunRecordDiagEnable property of the blob tool.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogEdgeBlobInvalidMeasureException"><summary>The exception that is thrown when the connectivity mode is 'WholeImageGreyScale' and you have requested one of the following measurements: BoundaryPixelLength, Acircularity, AcircularityRms, or Perimeter.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogEdgeBlobDuplicateMeasureException"><summary>The exception that is thrown when the <see cref="T:Cognex.VisionPro.Blob.CogBlobMeasure" /> you are adding to the collection of run-time measures has the same measure as an existing member of the collection.  Only one object per measure is allowed.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogEdgeBlobDynamicThresholdNotComputedException"><summary>The exception that is thrown when the segmentation mode is 'HardDynamicThreshold' but a dynamic threshold could not be computed, probably because you specified the same value for both the low and high tail percentages.  Or because the input image contains only a very small range of grey levels.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogEdgeBlobEntireBlobExcludedException"><summary>The exception that is thrown when the entire blob has been excluded because you specified an extrema exclusion setting greater than or equal to the area of the blob.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogEdgeBlobSobelEdgeCannotComputePolygonException"><summary>The exception that is thrown if you attempt to access the Sobel blob polygon collection when SobelEdgeBlobEnabled is false, or when the EdgeBlob tool has not run successfully.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobScene.#ctor(Cognex.VisionPro.EdgeBlob.CogEdgeBlobScene)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobScene.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobScene.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobScene.~CogEdgeBlobScene"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobScene.!CogEdgeBlobScene"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobScene.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="T:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult"><summary>Class for a single blob result.  Provides information for an individual feature found during blob analysis.  Features include both blobs and holes within blobs.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.#ctor(Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.NotClipped"><summary>This measure will be one if the blob was not clipped during processing.  It will be zero if the blob touches the edge of the Region, or the edge of the InputImage, or any Don't Care pixel in the InputImageMask.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.AcircularityRms"><summary>The acircularity of this blob as defined by the normalized RMS deviation of the boundary point radius values from r0, where r0 is the square root of the blob's area divided by PI.  This measure is not available when using whole-image connectivity.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.Acircularity"><summary>The acircularity of this blob as defined by the formula: Perimeter Squared / (4 x PI x Area).  This measure is not available when using whole-image connectivity.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.Angle"><summary>The angle of the principal axis of the blob, specified in units of the input image's selected space at run-time.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.Elongation"><summary>The ratio of InertiaMax to InertiaMin.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.InertiaMax"><summary>The blob's second moment of inertia about the second principal axis of the blob.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.InertiaMin"><summary>The blob's second moment of inertia about the principal axis of the blob.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.InertiaY"><summary>The second moment of inertia of the blob about an axis drawn through the blob's center of mass and parallel to the x axis of selected space of the input image.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.InertiaX"><summary>The second moment of inertia of the blob about an axis drawn through the blob's center of mass and parallel to the y axis of selected space of the input image.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.CenterOfMassY"><summary>The y-coordinate of the center of mass of the blob specified in units of the input image's selected space at run-time.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.CenterOfMassX"><summary>The x-coordinate of the center of mass of the blob specified in units of the input image's selected space at run-time.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.Perimeter"><summary>The perimeter of the blob specified in units of the input image's selected space at run-time.  Formula corrects for the tendency of the pixel aligned boundary of the blob to overstate the true blob perimeter.  Not available for whole-image connectivity.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.Area"><summary>The area of the blob specified in units of the input image's selected space at run-time.  The area measure, as do many other blob measures, takes into account the blob weight [0,1] of each pixel.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.SelectedSpaceName"><summary>Returns the name of the selected space of the input image at run-time.  All relevant blob measures are specified in units of the selected space.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.Label"><summary>The connectivity label.  For grey scale connectivity, the label will be cogBlobLabelBlob(1) for blobs and cogBlobLabelHole(0) for holes.  For labeled connectivity, this is the blob's label.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.NumUnfilteredChildren"><summary>The number of children of this blob before any filter criteria are applied.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.NumChildren"><summary>The number of children of this blob after all filter criteria are applied.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.FilteredOut"><summary>True if this blob was filtered out based on any of filter criteria specified in the RunTimeMeasures.  False, otherwise.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.ID"><summary>A unique ID used to identify this blob within the context of the CogEdgeBlobResults that this blob belongs.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.~CogEdgeBlobResult"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.!CogEdgeBlobResult"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.GetMedianX(Cognex.VisionPro.Blob.CogBlobAxisConstants)"><param name="axis">The axis to which the median is aligned.</param><summary>The x-coordinate of the point through which two orthogonal lines each divide the blob's area in half.  The orthogonal lines are aligned with the Axis specified.  MedianX is specified in units of the input image's selected space.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.GetMedianY(Cognex.VisionPro.Blob.CogBlobAxisConstants)"><param name="axis">The axis to which the median is aligned.</param><summary>The y-coordinate of the point through which two orthogonal lines each divide the blob's area in half.  The orthogonal lines are aligned with the Axis specified.  MedianY is specified in units of the input image's selected space.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.GetMeasure(Cognex.VisionPro.Blob.CogBlobMeasureConstants)"><param name="measure">The measure to return.</param><summary>Returns the value of the blob measure requested.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.GetBoundingBox(Cognex.VisionPro.Blob.CogBlobAxisConstants)"><param name="axis">The axis to which the bounding box is aligned.</param><summary>Gets a bounding box of the blob that is aligned with the specified axis.  The exclude extrema properties of the run parameters are used when calculating the bounding box, except when Axis is set to cogBlobAxisPixelAlignedNoExclude.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.GetBoundingBoxAtAngle(System.Double)"><param name="angle">The angle, specified in the selected space of the input image.</param><summary>Gets a bounding box of the blob that is aligned with the angle specified.  The exclude extrema properties of the run parameters are used when calculating the bounding box.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.GetBoundary"><summary>Creates a closed polygon representing the boundary of the blob which completely encloses all pixels that are part of this blob, regardless of the blob weight associated with each pixel.  The boundary always falls directly between the edges of pixels.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.GetSobelBlobPolygonCollection(System.Double)"><param name="edgeletDistanceTolerance">An edgelet chain must be closer than this distance (to the binary blob) to be considered as part of the sub-pixel boundary.</param><summary>Creates a collection of closed polygons representing the boundary of the blob using Sobel edgelets for subpixel accuracy. Only edgelet chains that are within EdgeletDistanceTolerance will be considered in the matching algorithm.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult.CreateResultGraphics(Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultGraphicConstants)"><param name="graphicOptions">Specify which graphic(s) to create.</param><summary>Creates a composite result graphic containing child graphics specified by the GraphicOptions which is a bitwise combination of CogEdgeBlobResultGraphicConstants.</summary></member><member name="T:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultCollection"><summary>A collection of blob results.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultCollection.#ctor(Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultCollection)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultCollection.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultCollection.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultCollection.Item(System.Int32)"><param name="index">The index of the item to get.</param><summary>Gets the item at the specified index.  In C#, this property is the indexer for the collection.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultCollection.SyncRoot"><summary>Gets an object that can be used to synchronize access to this collection.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultCollection.IsSynchronized"><summary>Gets a value indicating whether access to this collection is synchronized (thread-safe).</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultCollection.Count"><summary>Gets the number of items contained in this collection.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultCollection.~CogEdgeBlobResultCollection"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultCollection.!CogEdgeBlobResultCollection"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultCollection.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultCollection.CopyTo(System.Array,System.Int32)"><param name="array">The array into which to copy.</param><param name="index">The index from which to start copying.</param><summary>Copies the contents of this collection to an array.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultCollection.IndexOf(Cognex.VisionPro.EdgeBlob.CogEdgeBlobResult)"><param name="value">The item whose index is desired.</param><summary>Gets the index of the given item.  If the item cannot be found -1 is returned.</summary></member><member name="T:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResults"><summary>Class which provides access to all of the results of a blob analysis.  Includes access to filtered and unfiltered collections of CogEdgeBlobResult objects.  Also provides access to intermediate and result images of the blob analysis.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResults.#ctor(Cognex.VisionPro.EdgeBlob.CogEdgeBlobResults)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResults.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResults.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResults.~CogEdgeBlobResults"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResults.!CogEdgeBlobResults"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResults.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResults.GetBlobs"><summary>Gets all of the blobs from the blob analysis after filtering and sorting have been applied.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResults.GetBlobs(System.Boolean)"><param name="filtered">If true, the blobs are filtered according to the defined CogBlobMeasure objects.  If false, blobs are not filtered.</param><summary>Gets all of the blobs from the blob analysis.  The Filtered argument indicates to get the blobs after filtering and sorting have been applied, or blobs without any filtering and sorting applied.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResults.GetTopLevelBlobs(System.Boolean)"><param name="filtered">If true, the blobs are filtered according to the defined CogBlobMeasure objects.  If false, blobs are not filtered.</param><summary>Gets all of the top level blobs, which are the blobs that do not have an enclosing parent blob.  The Filtered argument indicates to get the blobs after filtering and sorting have been applied, or blobs without any filtering and sorting applied.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResults.GetChildren(System.Int32,System.Boolean)"><param name="blobID">The ID of the blob.</param><param name="filtered">If true, the blobs are filtered according to the defined CogBlobMeasure objects.  If false, blobs are not filtered.</param><summary>Get either a filtered or unfiltered collection of children of the blob specified by ID.  The filtered blobs will also be sorted if sorting was enabled.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResults.GetSiblings(System.Int32,System.Boolean)"><param name="blobID">The ID of the blob.</param><param name="filtered">If true, the blobs are filtered according to the defined CogBlobMeasure objects.  If false, blobs are not filtered.</param><summary>Get either a filtered or unfiltered collection of the siblings of the blob specified by ID.  The filtered blobs will also be sorted if sorting was enabled.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResults.GetParent(System.Int32)"><param name="blobID">The ID of the blob.</param><summary>Get the parent of the blob specified by ID.  Returns Nothing for top level blobs which do not have parents.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResults.GetBlobByID(System.Int32)"><param name="blobID">The ID of the blob.</param><summary>Given a blob ID, return its blob result.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResults.CreateSegmentedImage(Cognex.VisionPro.Blob.CogBlobSegmentedImageConstants,System.Boolean)"><param name="whichImage">Which image to obtain.</param><param name="stretchIt">If True, the image is adjusted for maximum contrast; if False, the actual segmented image is returned.</param><summary>Gets the specified segmented image.  The image will be stretched for maximum viewing contrast if StretchIt is true, otherwise, the image will contain the actual segmented image data.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResults.CreateBlobImage(System.Boolean,System.Boolean,System.Int32)"><param name="filtered">If true, the blobs are filtered according to the defined CogBlobMeasure objects.  If false, blobs are not filtered.</param><param name="viewable">If False, the image background pixels are set to <paramref name="background" />, and feature pixels are set to their segmentation values.  If True, the image background pixels are set to 128, hole pixels are set to 0, and feature pixels are set to values from 192 through 255.  If True and labeled blob analysis is being used, blobs have their label values mapped to a range of values between 96 and 255.</param><param name="background">The pixel value to use for the image background. If <paramref name="viewable" /> is True this parameter is ignored.</param><summary>Create an image of the blobs &amp; holes in this collection.  Blobs &amp; holes will be painted using their segmentation values in an image pre-filled with Background.  If Viewable, Background is ignored, blobs &amp; holes are painted for maximum viewable contrast.</summary></member><member name="T:Cognex.VisionPro.EdgeBlob.CogEdgeBlob"><summary>Class for configuring and performing blob analysis.  The blob run-time parameters include, but are not limited to, settings for segmentation, connectivity, morphology, masking, filtering, and sorting.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.#ctor(Cognex.VisionPro.EdgeBlob.CogEdgeBlob)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfSegmentationParams"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by SegmentationParams may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfConnectivityMode"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ConnectivityMode may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfConnectivityCleanup"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ConnectivityCleanup may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfConnectivityMinPixels"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ConnectivityMinPixels may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfExtremaExcludeMode"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ExtremaExcludeMode may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfExtremaExcludeArea"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ExtremaExcludeArea may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfExtremaExcludeAreaPixels"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ExtremaExcludeAreaPixels may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfExtremaExcludeAreaPercent"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ExtremaExcludeAreaPercent may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfExtremaAngle"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ExtremaAngle may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfMorphologyOperations"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by MorphologyOperations may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfRunTimeMeasures"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by RunTimeMeasures may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfSaveSegmentedImage"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by SaveSegmentedImage may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfSaveSegmentedImageBeforeMasking"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by SaveSegmentedImageBeforeMasking may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfSaveSegmentedImageBeforeMorphology"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by SaveSegmentedImageBeforeMorphology may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfInputImageMask"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by InputImageMask may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfInputImageMaskOffsetX"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by InputImageMaskOffsetX may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfInputImageMaskOffsetY"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by InputImageMaskOffsetY may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfRegionMode"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by RegionMode may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfSortEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by SortEnabled may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfSortMeasure"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by SortMeasure may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfSortAscending"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by SortAscending may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfSobelEdgeBlobEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by SobelEdgeBlobEnabled may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfSobelEdgeMagnitudeScale"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by SobelEdgeMagnitudeScale may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfSobelEdgeMagnitudeThreshold"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by SobelEdgeMagnitudeThreshold may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfEdgeFilterBoundaryDistanceTolerance"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by EdgeFilterBoundaryDistanceTolerance may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfEdgeFilterBoundaryAngleTolerance"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by EdgeFilterBoundaryAngleTolerance may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfEdgeFilterBoundaryAngleIgnorePolarity"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by EdgeFilterBoundaryAngleIgnorePolarity may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfEdgeFilterHysteresisThresholdLow"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by EdgeFilterHysteresisThresholdLow may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfEdgeFilterHysteresisThresholdHigh"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by EdgeFilterHysteresisThresholdHigh may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SfEdgeFilterMinimumLength"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by EdgeFilterMinimumLength may have changed.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.EdgeFilterMinimumLength"><summary>Edgelet chains that are shorter than this minimum length will be filtered out.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.EdgeFilterHysteresisThresholdHigh"><summary>Edgelets with a magnitude greater than or equal to this threshold will always survive. Edgelets with magnitude less than this threshold but greater than or equal to the low threshold will survive if they are part of a surviving chain.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.EdgeFilterHysteresisThresholdLow"><summary>Edgelets with a magnitude less than this threshold will be filtered out.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.EdgeFilterBoundaryAngleIgnorePolarity"><summary>If set to True, angular differences between edgelets and the shape will be in the range of 0 to 180 degrees. Otherwise, it will be in the range of 0 to 360 degrees.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.EdgeFilterBoundaryAngleTolerance"><summary>Edgelet tangent angles not within this angular tolerance to the nearest shape edge tangent angle will be filtered out.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.EdgeFilterBoundaryDistanceTolerance"><summary>Only edgelets within this distance from the shape boundary will be considered for filtering.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SobelEdgeMagnitudeThreshold"><summary>Magnitude divided by SobelEdgeMagnitudeScale must greater than or equal to this threshold to be considered an edgelet.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SobelEdgeMagnitudeScale"><summary>Each magnitude image pixel value is set equal to the Sobel-computed grey value difference at the corresponding location multiplied by this scaling factor.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SobelEdgeBlobEnabled"><summary>A value of True will enable enhanced blob which uses Sobel edgelets.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SortAscending"><summary>A value of True will sort the blobs in ascending order.  SortAscending is only used if SortEnabled is true.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SortMeasure"><summary>The blob measure that will be used for sorting the filtered collection of blobs.  SortMeasure is only used if SortEnabled is true.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SortEnabled"><summary>Enables the sorting of the filtered collection of blobs.  The SortMeasure and SortAscending properties indicate how the blobs will be sorted.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.RegionMode"><summary>Specifies whether blob analysis will be performed strictly within the confines of the region specified or whether blob analysis will be performed within the image aligned bounding box of the region.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.InputImageMaskOffsetY"><summary>Y offset value in pixels.  The X &amp; Y offset values measure the offset from the upper-left corner of the InputImage to the upper-left corner of the InputImageMask, in image coordinates of the InputImage.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.InputImageMaskOffsetX"><summary>X offset value in pixels.  The X &amp; Y offset values measure the offset from the upper-left corner of the InputImage to the upper-left corner of the InputImageMask, in image coordinates of the InputImage.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.InputImageMask"><summary>Mask indicating areas of Care (Non-Zero Mask Pixels) and Don't Care (Zero).  Don't Care areas are treated as background/holes when performing grey scale connectivity.  The mask is aligned to the InputImage using the InputImageMaskOffsetX &amp; Y values.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SaveSegmentedImageBeforeMorphology"><summary>Save the segmented image, after masking but before morphology, as part of the blob results.  Otherwise, the image will be released once blob analysis has completed and the CreateSegmentedImage method will return Nothing when requesting this image.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SaveSegmentedImageBeforeMasking"><summary>Save the segmented image, before masking and morphology, as part of the blob results.  Otherwise, the image will be released once blob analysis has completed and the CreateSegmentedImage method will return Nothing when requesting this image.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SaveSegmentedImage"><summary>Save the segmented image as part of the blob results.  Otherwise, the image will be released once blob analysis has completed and the CreateSegmentedImage method of ICogEdgeBlobResults will return Nothing when requesting this image.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.RunTimeMeasures"><summary>A collection indicating how the specified measures will be used during execution of blob analysis.  Blob measures can either be used as filter criteria or precomputed such the time required to calculate the measure is part of the blob execution time.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.MorphologyOperations"><summary>A collection of CogBlobMorphologyConstants indicating which morphology operations are to be performed on the segmented image.  The operations are performed in the order in which they are added to the collection.  Operations can be added multiple times.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.ExtremaAngle"><summary>The angle at which the bounding box or median point is computed when the axis argument of MedianX, MedianY, or GetBoundingBox is cogBlobAxisExtremaAngle.  The extrema angle is specified in the selected space of the input image.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.ExtremaExcludeAreaPercent"><summary>The amount of area to exclude when computing either a bounding box or median point, only used when the ExtremaExcludeMode is set to cogBlobExtremaExcludeAreaPercent.  The area is specified in terms of percentage of pixels to exclude.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.ExtremaExcludeAreaPixels"><summary>The amount of area to exclude when computing either a bounding box or median point, only used when the ExtremaExcludeMode is set to cogBlobExtremaExcludeAreaPixels.  The area is specified in image pixel units.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.ExtremaExcludeArea"><summary>The amount of area to exclude when computing either a bounding box or median point, only used when the ExtremaExcludeMode is set to cogBlobExtremaExcludeArea.  The area is specified in units of the selected space of the InputImage.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.ExtremaExcludeMode"><summary>Indicates if some of the feature's area should be excluded when making the median and bounding box measures.  If area should be excluded, the mode also indicates which property specifies the area to be excluded.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.ConnectivityMinPixels"><summary>The minimum size, in pixels, of features that will not be cleaned up during connectivity cleanup.  ConnectivityCleanup is not available when connectivity mode is set to whole image, in which case the cleanup and minimum pixels settings are simply ignored.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.ConnectivityCleanup"><summary>Determines the cleanup method to use after performing connectivity analysis of the blobs.  ConnectivityCleanup is not available when connectivity mode is set to whole image, in which case the cleanup and minimum pixels settings are simply ignored.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.ConnectivityMode"><summary>Determines the connectivity to be used when analyzing blobs.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SegmentationParams"><summary>Interface which allows the user to select and configure the desired method of image segmentation.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.~CogEdgeBlob"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.!CogEdgeBlob"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.Execute(Cognex.VisionPro.CogImage8Grey,Cognex.VisionPro.ICogRegion)"><param name="inputImage">The image to analyze.</param><param name="region">An optional region.  If supplied, only the pixels within this region (after applying the RegionMode) will be analyzed.</param><summary>Performs blob analysis on the provided InputImage and optional Region, creating a CogEdgeBlobResults object which provides the results of the analysis.  If Region is nothing then blob analysis will be performed on the entire InputImage.</summary></member><member name="E:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.EdgeBlob.CogEdgeBlobTool"><summary>This is the class for the CogEdgeBlobTool.  The CogEdgeBlobTool encapsulates all of the classes required to perform a blob analysis inspection.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobTool.#ctor(Cognex.VisionPro.EdgeBlob.CogEdgeBlobTool)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobTool.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobTool.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobTool.SfLastRunRecordEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LastRunRecordEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobTool.SfLastRunRecordDiagEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LastRunRecordDiagEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobTool.SfCurrentRecordEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CurrentRecordEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobTool.SfRegion"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Region may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobTool.SfInputImage"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by InputImage may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobTool.SfRunParams"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by RunParams may have changed.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobTool.SfResults"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Results may have changed.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobTool.Results"><summary>Results from the last invocation of Run.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobTool.RunParams"><summary>The run parameters for this blob tool.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobTool.InputImage"><summary>Image used to perform blob analysis.  The Region property can be used to specify that blob analysis will be performed only on a portion of the InputImage.  Blob analysis is performed on the entire InputImage if Region is Nothing.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobTool.Region"><summary>Specifies the region of the InputImage that will be used to perform blob analysis.  The ICogEdgeBlobParams::RegionMode property specifies exactly how the ROI will be applied to the InputImage.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobTool.CurrentRecordEnable"><summary>Enable creation of records by bitwise ORing the appropriate CurrentRecordConstants.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobTool.LastRunRecordDiagEnable"><summary>Enable creation of records by bitwise ORing the appropriate LastRunRecordDiagConstants.  These are diagnostic records that may cause the Tool to have a longer execution time.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobTool.LastRunRecordEnable"><summary>Enable creation of records by bitwise ORing the appropriate LastRunRecordConstants.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobTool.RunStatus"><summary>Gets general information about the last call to Run.</summary></member><member name="P:Cognex.VisionPro.EdgeBlob.CogEdgeBlobTool.Name"><summary>Gets or sets the name of the tool.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobTool.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobTool.Run"><summary>Runs the tool using the current parameter settings.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobTool.~CogEdgeBlobTool"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.EdgeBlob.CogEdgeBlobTool.!CogEdgeBlobTool"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="T:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultGraphicConstants"><summary>Constants used to specify desired result graphics.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultGraphicConstants.None"><summary>Draw no result graphics.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultGraphicConstants.TipText"><summary>Turn on tip text for result graphics.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultGraphicConstants.CenterOfMass"><summary>Draw a cross hair at the center of mass of the blob.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultGraphicConstants.Boundary"><summary>Draw the boundary of the blob.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultGraphicConstants.BoundingBoxPixelAligned"><summary>Draw the smallest rectangle that completely encloses the blob and is aligned with the pixels of the image.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultGraphicConstants.BoundingBoxPrincipalAxis"><summary>Draw the smallest rectangle that completely encloses the blob and is aligned with the blob's principal axis.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultGraphicConstants.BoundingBoxExtremaAngle"><summary>Draw the smallest rectangle that completely encloses the blob and is aligned with the angle specified by ICogEdgeBlobParams::ExtremaAngle.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultGraphicConstants.BoundingBoxSelectedSpace"><summary>Draw the smallest rectangle that completely encloses the blob and is aligned with the selected space of the input image.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultGraphicConstants.MedianPixelAligned"><summary>Draw a cross at the point where the blob is divided in half by a pair of perpendicular lines which are aligned with the axes of the pixel space of the input image.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultGraphicConstants.MedianPrincipalAxis"><summary>Draw a cross at the point where the blob is divided in half by a pair of perpendicular lines, one of which is aligned with the principal axis of this blob.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultGraphicConstants.MedianExtremaAngle"><summary>Draw a cross at the point where the blob is divided in half by a pair of perpendicular lines, one of which is aligned with the angle specified by ICogEdgeBlobParams::ExtremaAngle.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultGraphicConstants.MedianSelectedSpace"><summary>Draw a cross at the point where the blob is divided in half by a pair of perpendicular lines which are aligned with the axes of the selected space of the input image.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobResultGraphicConstants.All"><summary>Draw all result graphics.</summary></member><member name="T:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordConstants"><summary>Enumeration of Non-Diagnostic data that can be provided in the Tool's LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordConstants.None"><summary>Do not include any of the non-diagnostic data in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordConstants.BlobImage"><summary>Include a synthetically created image of the filtered blobs &amp; holes in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordConstants.BlobImageUnfiltered"><summary>Include a synthetically created image of the unfiltered blobs &amp; holes in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordConstants.BlobImageAsGraphic"><summary>Include a partially transparent graphic over the blobs &amp; holes in the input image of the LastRunRecord.  The cogEdgeBlobLastRunRecordResultsUnfiltered bit determines whether the graphic is drawn over the unfiltered blobs.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordConstants.ResultsBoundingBoxPixelAligned"><summary>Include in the composite result graphics of the LastRunRecord, a graphic representing the smallest rectangle that completely encloses the blob and is aligned with the pixels of the image.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordConstants.ResultsBoundingBoxPrincipalAxis"><summary>Include in the composite result graphics of the LastRunRecord, a graphic representing the smallest rectangle that completely encloses the blob and is aligned with the blob's principal axis.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordConstants.ResultsBoundingBoxExtremaAngle"><summary>Include in the composite result graphics of the LastRunRecord, a graphic representing the smallest rectangle that completely encloses the blob and is aligned with the angle specified by ICogEdgeBlobParams::ExtremaAngle.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordConstants.ResultsBoundingBoxSelectedSpace"><summary>Include in the composite result graphics of the LastRunRecord, a graphic representing the smallest rectangle that completely encloses the blob and is aligned with the selected space of the input image.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordConstants.ResultsMedianPixelAligned"><summary>Include in the composite result graphics of the LastRunRecord, a cross at the point where the blob is divided in half by a pair of perpendicular lines which are aligned with the axes of the pixel space of the input image.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordConstants.ResultsMedianPrincipalAxis"><summary>Include in the composite result graphics of the LastRunRecord, a cross at the point where the blob is divided in half by a pair of perpendicular lines, one of which is aligned with the principal axis of this blob.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordConstants.ResultsMedianExtremaAngle"><summary>Include in the composite result graphics of the LastRunRecord, a cross at the point where the blob is divided in half by a pair of perpendicular lines, one of which is aligned with the angle specified by ICogEdgeBlobParams::ExtremaAngle.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordConstants.ResultsMedianSelectedSpace"><summary>Include in the composite result graphics of the LastRunRecord, a cross at the point where the blob is divided in half by a pair of perpendicular lines which are aligned with the axes of the selected space of the input image.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordConstants.ResultsBoundary"><summary>Include in the composite result graphics of the LastRunRecord, a graphic representing the boundary of the blob.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordConstants.ResultsCenterOfMass"><summary>Include in the composite result graphics of the LastRunRecord, a cross hair at the center of mass of the blob.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordConstants.ResultsUnfiltered"><summary>Include graphics for all unfiltered blobs in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordConstants.All"><summary>Include all of the non-diagnostic data in the LastRunRecord.</summary></member><member name="T:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordDiagConstants"><summary>Enumeration of Diagnostic data that can be provided in the Tool's LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordDiagConstants.None"><summary>Do not include any of the diagnostic data in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordDiagConstants.InputImageByReference"><summary>Include a reference to the input image in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordDiagConstants.InputImageDeepCopy"><summary>Include a deep copy of the input image in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordDiagConstants.SegmentedImage"><summary>Include a viewable version of the segmented image in the LastRunRecord.  The SaveSegmentedImage property of the run parameters must also be true in order to include this record.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordDiagConstants.SegmentedImageBeforeMorphology"><summary>Include a viewable version of the segmented image, before morphology, in the LastRunRecord.  The SaveSegmentedImageBeforeMorphology property of the run parameters must also be true in order to include this record.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordDiagConstants.SegmentedImageBeforeMasking"><summary>Include a viewable version of the segmented image, before morphology and masking, in the LastRunRecord.  The SaveSegmentedImageBeforeMasking property of the run parameters must also be true in order to include this record.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordDiagConstants.SubtractionImageByReference"><summary>Include the subtraction image in the LastRunRecord.  This record is only included if the segmentation mode is cogBlobSegmentationModeSubtractionImage.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordDiagConstants.Histogram"><summary>Include a histogram of the input image in the LastRunRecord.  The histogram also provides a graphical representation of the segmentation parameters used for the blob analysis.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordDiagConstants.Region"><summary>Include the region used for blob analysis in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordDiagConstants.InputImageMask"><summary>Include a graphic representing the input image mask in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobLastRunRecordDiagConstants.All"><summary>Include all of the diagnostic data in the LastRunRecord.</summary></member><member name="T:Cognex.VisionPro.EdgeBlob.CogEdgeBlobCurrentRecordConstants"><summary>Enumeration of data that can be provided in the Tool's CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobCurrentRecordConstants.None"><summary>Do not include any records in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobCurrentRecordConstants.InputImage"><summary>Include the input image in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobCurrentRecordConstants.Region"><summary>Include the (interactive) region to be used for blob analysis in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobCurrentRecordConstants.Histogram"><summary>Include a histogram of the input image in the CurrentRecord.  The histogram also provides a graphical representation of the segmentation parameters.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobCurrentRecordConstants.InputImageMask"><summary>Include a graphic representing the input image mask in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobCurrentRecordConstants.SubtractionImage"><summary>Include the subtraction image in the CurrentRecord.  This record is only included if the segmentation mode is cogBlobSegmentationModeSubtractionImage.</summary></member><member name="F:Cognex.VisionPro.EdgeBlob.CogEdgeBlobCurrentRecordConstants.All"><summary>Include all possible records in the CurrentRecord.</summary></member><member name="T:Cognex.VisionPro.EdgeBlob.CogEdgeBlob.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member></members></doc>