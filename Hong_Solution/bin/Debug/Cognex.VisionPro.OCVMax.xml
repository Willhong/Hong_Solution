<?xml version="1.0"?><doc><assembly><name>Cognex.VisionPro.OCVMax</name></assembly><members><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams"><summary>This class encapsulates properties typically used to control rendering, or rendering-based processing of text in a particular font. These are the properties that allow one to fine-tune the correspondence between a CogOCVMaxFont and what is actually observed by a camera.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams.SfForegroundGrey"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ForegroundGrey may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams.SfBackgroundGrey"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by BackgroundGrey may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams.SfImagePelPadding"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ImagePelPadding may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams.SfSpotSizeScale"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by SpotSizeScale may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams.SfSpotSpacingScaleX"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by SpotSpacingScaleX may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams.SfSpotSpacingScaleY"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by SpotSpacingScaleY may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams.SfStrokeWidthAdded"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by StrokeWidthAdded may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams.SfCharacterSpacingAddedX"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CharacterSpacingAddedX may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams.SfCharacterSpacingAddedY"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CharacterSpacingAddedY may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams.SfLineSpacingAddedX"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LineSpacingAddedX may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams.SfLineSpacingAddedY"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LineSpacingAddedY may have changed.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams.LineSpacingAddedY"><value>This read/write property of type Double may be positive, negative, or zero.</value><summary>Add to the Y-Axis distance between one line origin and the origin of the next line in the same paragraph. A positive value increases inter-line spacing, a negative value decreases inter-line spacing, and the default value 0.0 produces no change in rendered text.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams.LineSpacingAddedX"><value>This read/write property of type Double may be positive, negative, or zero.</value><summary>Add to the X-axis distance between one line origin and the origin of the next line in the same paragraph. A non-zero value produces a paragraph with lines staggered like a staircase, while the default value 0.0 produces no change in rendered text. This property is rarely used.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams.CharacterSpacingAddedY"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><summary>Add to the Y-axis distance between one character origin and the origin of the next character on the same line. A non-zero value produces a staircase-like line of text, while the default value 0.0 produces no change in rendered text.  This property is rarely used.</summary><value>This read/write property of type Double may be positive, negative, or zero.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams.CharacterSpacingAddedX"><summary>Add to the X-axis distance between one character origin and the origin of the next character on the same line. A positive value increases inter-character spacing, a negative value decreases inter-character spacing, and the default value 0.0 produces no change in rendered text.</summary><value>This read/write property of type Double may be positive, negative, or zero.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams.StrokeWidthAdded"><value>This read/write property of type Double may be positive, negative, or zero.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><summary>Add to the nominal stroke width of text for a given font using morphology. A positive value increases stroke width, a negative value decreases it, and the default value 0.0 produces no change in rendered text. This property is typically only useful with fonts for which SpotSizeScale does not apply, such as outline fonts.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams.SpotSpacingScaleY"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><summary>Scale (multiply) the spacing along the Y axis of rendered text spots by this value. Ignored by fonts for which SpotSpacingUsed is false (e.g. outline fonts). The default value of 1.0 produces no change in rendered text.</summary><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set this to a value less than or equal to zero.</exception><value>This read/write property of type Double must be greater than zero.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams.SpotSpacingScaleX"><summary>Scale (multiply) the spacing along the X axis of rendered text spots by this value. Ignored by fonts for which SpotSpacingUsed is false (e.g. outline fonts). The default value of 1.0 produces no change in rendered text.</summary><value>This read/write property of type Double must be greater than zero.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set this to a value less than or equal to zero.</exception></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams.SpotSizeScale"><summary>Scale (multiply) the rendered text spot size by this value. Ignored by fonts for which SpotSizeUsed is false (e.g. outline fonts). The default value of 1.0 produces no change in rendered text.</summary><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set this to a value less than or equal to zero.</exception><value>This read/write property of type Double must be greater than zero.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams.ImagePelPadding"><summary>The number of pels of background to add to each side of some rendered text image. A value of zero means do not pad.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set this to a value less than zero.</exception><value>This read/write property of type Int32 must be greater than or equal to zero.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams.BackgroundGrey"><summary>The background greyscale value to be used in rendering the space surrounding some text. This property is ignored by those operations that do not actually draw into a pelbuffer.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><value>This read/write property of type Byte will have a value between 0 (black) and 255 (white) inclusive.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams.ForegroundGrey"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><value>This read/write property of type Byte will have a value between 0 (black) and 255 (white) inclusive.</value><summary>The foreground greyscale value to be used in rendering text. This property is ignored by those operations that do not actually draw into a pelbuffer.</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxFont"><summary>This class represents the set of geometric character descriptions associated with a single font. We read the geometric description data from a predefined font file. In general a user does not create a font file. We can, however, adjust certain characteristics of a font such as its size and line spacing.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFont.SfImported"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Imported may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFont.SfFontType"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by FontType may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFont.SfProportional"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Proportional may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFont.SfFontName"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by FontName may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFont.SfSpotSpacingUsed"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by SpotSpacingUsed may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFont.SfSpotSizeUsed"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by SpotSizeUsed may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFont.SfSpotSize"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by SpotSize may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFont.SfLineSpacingX"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LineSpacingX may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFont.SfLineSpacingY"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LineSpacingY may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFont.SfGetAvailableCharacters"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetAvailableCharacters may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFont.SfHasBlank"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by HasBlank may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFont.SfGetDefaultBlankCharacter"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetDefaultBlankCharacter may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFont.SfGetCharacterPoses"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetCharacterPoses may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFont.SfGetCharacterMarkBounds"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetCharacterMarkBounds may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFont.SfGetCharacterFullBounds"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetCharacterFullBounds may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFont.SfImportFileName"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ImportFileName may have changed.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxFont.HasBlank"><summary>Whether or not this font has a blank character. Not all fonts have a blank character.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><value>This read-only property is of type Boolean.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxFont.LineSpacingY"><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><summary>This is the (vertical) spacing between adjacent line origins in this font.</summary><value>This read/write property of type Double is typically a positive number.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxFont.LineSpacingX"><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><summary>This is the (horizontal) spacing between adjacent line origins in this font.</summary><value>This read/write property of type Double is typically zero. A non-zero value will stagger one line with respect to the next.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxFont.SpotSize"><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set this to a value less than or equal to zero.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><summary>In a laser printer, a laser beam is swept across a photo-sensitive drum. The diameter, in microns, of the laser beam at the drum surface is the spot size. Other printing processes have their own intrinsic spot size definition. Note that not all fonts use spot size. Please check the SpotSizeUsed property first before attempting to access the SpotSize property.</summary><value>This read/write property of type Double must be greater than zero.</value><exception cref="T:System.InvalidOperationException">If this font does not use spot size.</exception></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxFont.SpotSizeUsed"><summary>Whether or not this font uses spot size. If this property is false, you may not get or set spot size (an exception will be thrown if you try). Like most font properties, an exception will be generated if this read-only property is accessed before importing a font file.</summary><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><value>This read-only property is of type Boolean.</value><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxFont.SpotSpacingUsed"><summary>Whether or not this font uses spot spacing. Typically, raster and stroke fonts can use spot spacing, while outline and image fonts cannot. Like most font properties, an exception will be generated if this read-only property is accessed before importing a font file.</summary><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><value>This read-only property is of type Boolean.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxFont.ImportFileName"><summary>The name of the file from which this font was imported. An exception is generated if this read-only property is accessed before importing a font file.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><value>This read-only property is of type String.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxFont.FontName"><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><value>This read-only property is of type String.</value><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><summary>The name of this font, as defined in the imported font file. An exception is generated if this read-only property is accessed before importing a font file.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxFont.CharacterOriginsSettable"><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><summary>Whether the font is an image font whose characters can have their origins moved using SetCharacterOrigins.</summary><value>This read-only property is of type Boolean.</value><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxFont.ImageFont"><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><value>This read-only property is of type Boolean.</value><summary>Whether or not this font is an image font, i.e. whether it is based on stored bitmaps of characters rather than on synthetic descriptions of characters.</summary><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxFont.Proportional"><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><value>This read-only property is of type Boolean.</value><summary>Whether or not this font is proportional. A font is proportional if the characters do not all have the same advance value.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxFont.FontType"><summary>The intrinsic style of this font: Raster, Stroke, Outline, or Image.</summary><exception cref="T:System.InvalidOperationException">If the font has not yet been imported, of if an internal error occurs.</exception><value>This read-only property of type CogOCVMaxFontTypeConstants may be one of Raster, Stroke, Outline, or Image. This value is defined in the imported font file.</value><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxFont.Imported"><value>This read-only property is of type Boolean.</value><summary>Whether or not this font has been imported from a font file. True if it has, false if it has not. Most other CogOCVMaxFont properties and methods require that this be true.</summary><exception cref="T:System.InvalidOperationException">If an internal error occurs.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.Import(System.String)"><param name="fileName">The name of the font file to be imported.</param><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires with all defined state flags set.</event><exception cref="T:System.ArgumentNullException">If the fileName argument is NULL.</exception><summary>Read in the first font description in the specified file. This font description will replace any previously imported font description. If you have modified SpotSize and/or LineSpacing in the currently loaded font, those settings will be lost.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.Import(System.String,System.String)"><param name="fileName">The name of the font file to be imported.</param><param name="fontName">The name of the font to be imported.</param><exception cref="T:System.ArgumentNullException">If the fontName argument is NULL.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires with all defined state flags set.</event><summary>Read in a new font description with the specified name from the specified file. This font description will replace any previously  imported font description. If you have modified SpotSize and/or LineSpacing in the currently loaded font, those settings will be lost.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.GetAvailableCharacterKeys"><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><summary>Provide a list of each character key available in this font.</summary><returns>A System::Array of System::Int32 corresponding to each available character key.</returns></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.GetAvailableCharacterKeys(System.Boolean)"><param name="includeAllBlanks">A boolean indicating whether all blanks in the font should be included in the returned array.</param><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><returns>A System::Array of System::Int32 corresponding to each available character key.</returns><summary>Provide a list of each character key available in this font.</summary><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.GetAvailableCharacters"><summary>Provide a list of each character available in this font.</summary><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><returns>A System::String in which each character corresponds to one of the available characters. Note that this assumes that the character keys in this font correspond to Unicode code point values.</returns></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.GetDefaultBlankCharacterKey"><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if this font has no blank character.</exception><returns>A System::Int32 corresponding to the key of the default blank character.</returns><summary>Provide the key of the default blank character for this font. Since many fonts have multiple blank characters, this method identifies the one to be used as the default blank.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.GetDefaultBlankCharacter"><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><summary>Provide the default blank character for this font. Since many fonts have multiple blank characters, this method identifies the one to be used as the default blank.</summary><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if this font has no blank character.</exception><returns>A System::Char corresponding to default blank character. Note that this assumes that the character keys in this font correspond to Unicode code point values.</returns></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.IsBlank(System.Int32)"><param name="iVal">The character key to be evaluated.</param><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><summary>Determine whether or not the character corresponding to the supplied character key is considered a blank in this font. Remember that many fonts have multiple blank characters.</summary><returns>A System::Boolean, True if the character corresponding to the supplied character key is considered a blank in this font, and False otherwise.</returns></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.IsBlank(System.Char)"><param name="cVal">The character to be evaluated.</param><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><returns>A System::Boolean, True if the supplied character is considered a blank in this font, and False otherwise.</returns><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><summary>Determine whether or not the supplied character is considered a blank in this font. Remember that many fonts have multiple blank characters.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.GetAvailableFontNames(System.String)"><param name="fileName">The name of the file to be examined.</param><exception cref="T:System.InvalidOperationException">If an error occurs, including not finding or being able to open the specified file.</exception><returns>A System::Array of System::String in which each string is the name of a font that is defined within the specified file.</returns><summary>List the names of every font available within the specified font file.</summary><exception cref="T:System.ArgumentNullException">If the fileName argument is NULL.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.GetLineSpacingX(Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams)"><param name="renderParams">A CogOCVMaxFontRenderParams object that will be used to interpret the cached LineSpacingX value.</param><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><exception cref="T:System.ArgumentNullException">If the renderParams argument is NULL.</exception><summary>This is the (horizontal) spacing between adjacent line origins in this font, as interpreted using the supplied CogOCVMaxFontRenderParams object. Generally this will be the same as the value returned by the LineSpacingX property getter. If, however, SpotSpacingUsed is true for this font, then the value returned by this method will be the value returned by the LineSpacingX getter multiplied by the supplied render params object's SpotSpacingScaleX property.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><returns>A System::Double, this is typically zero. A non-zero value means that a line will be staggered with respect to the next line.</returns></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.GetLineSpacingY(Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams)"><param name="renderParams">A CogOCVMaxFontRenderParams object that will be used to interpret the cached LineSpacingY value.</param><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><returns>A System::Double, this is typically a positive number.</returns><summary>This is the (vertical) spacing between adjacent line origins in this font, as interpreted using the supplied CogOCVMaxFontRenderParams object. Generally this will be the same as the value returned by the LineSpacingY property getter. If, however, SpotSpacingUsed is true for this font, then the value returned by this method will be the value returned by the LineSpacingY getter multiplied by the supplied render params object's SpotSpacingScaleY property.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><exception cref="T:System.ArgumentNullException">If the renderParams argument is NULL.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.RenderImage(System.Int32[],Cognex.VisionPro.CogTransform2DLinear,Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams)"><param name="srcText">The text to be drawn. This array of integers is interpreted as a sequence of character keys and the corresponding text is interpreted as a single line within a single paragraph.</param><param name="selectedFromFont">A linear mapping from the imported font description to the selected space. Typically used to specify scaling.</param><param name="renderParams">The CogOCVMaxFontRenderParams to use in rendering this text.</param><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><summary>Create an image in which the supplied text is drawn using this font and the supplied parameters.</summary><exception cref="T:System.ArgumentNullException">If any of the arguments are NULL.</exception><exception cref="T:System.ArgumentOutOfRangeException">If the srcText argument does not describe at least one character.</exception><returns>A CogImage8Grey that contains the rendered text.</returns><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.RenderImage(System.String,Cognex.VisionPro.CogTransform2DLinear,Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams)"><param name="srcText">The text to be drawn. This string is interpreted as a single line within a single paragraph.</param><param name="selectedFromFont">A linear mapping from the imported font description to the selected space. Typically used to specify scaling.</param><param name="renderParams">The CogOCVMaxFontRenderParams to use in rendering this text.</param><summary>Create an image in which the supplied text is drawn using this font and the supplied parameters.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><returns>A CogImage8Grey that contains the rendered text.</returns><exception cref="T:System.ArgumentOutOfRangeException">If the srcText argument does not describe at least one character.</exception><exception cref="T:System.ArgumentNullException">If any of the arguments are NULL.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.RenderImage(System.String[],Cognex.VisionPro.CogTransform2DLinear,Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams)"><param name="srcText">The text to be drawn. Each array element is interpreted as a separate line within a single paragraph.</param><param name="selectedFromFont">A linear mapping from the imported font description to the selected space. Typically used to specify scaling.</param><param name="renderParams">The CogOCVMaxFontRenderParams to use in rendering this text.</param><exception cref="T:System.ArgumentNullException">If any of the arguments are NULL.</exception><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><summary>Create an image in which the supplied text is drawn using this font and the supplied parameters.</summary><returns>A CogImage8Grey that contains the rendered text.</returns><exception cref="T:System.ArgumentOutOfRangeException">If the srcText argument does not describe at least one character.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.RenderCompositeShape(System.Int32[],Cognex.VisionPro.CogTransform2DLinear,Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams)"><param name="srcText">The text to be drawn. This array of integers is interpreted as a sequence of character keys and the corresponding text is interpreted as a single line within a single paragraph.</param><param name="selectedFromFont">A linear mapping from the imported font description to the selected space. Typically used to specify scaling.</param><param name="renderParams">The CogOCVMaxFontRenderParams to use in rendering this text.</param><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><exception cref="T:System.ArgumentNullException">If any of the arguments are NULL.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><summary>Create a CogCompositeShape in which the supplied text is represented graphically by its outline. This outline is derived from the text as drawn using this font and the supplied parameters.</summary><exception cref="T:System.ArgumentOutOfRangeException">If the srcText argument does not describe at least one character.</exception><returns>A CogCompositeShape that represents the rendered text.</returns></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.RenderCompositeShape(System.String,Cognex.VisionPro.CogTransform2DLinear,Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams)"><param name="srcText">The text to be drawn. This string is interpreted as a single line within a single paragraph.</param><param name="selectedFromFont">A linear mapping from the imported font description to the selected space. Typically used to specify scaling.</param><param name="renderParams">The CogOCVMaxFontRenderParams to use in rendering this text.</param><summary>Create a CogCompositeShape in which the supplied text is represented graphically by its outline. This outline is derived from the text as drawn using this font and the supplied parameters.</summary><exception cref="T:System.ArgumentOutOfRangeException">If the srcText argument does not describe at least one character.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><exception cref="T:System.ArgumentNullException">If any of the arguments are NULL.</exception><returns>A CogCompositeShape that represents the rendered text.</returns></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.RenderCompositeShape(System.String[],Cognex.VisionPro.CogTransform2DLinear,Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams)"><param name="srcText">The text to be drawn. Each array element is interpreted as a separate line within a single paragraph.</param><param name="selectedFromFont">A linear mapping from the imported font description to the selected space. Typically used to specify scaling.</param><param name="renderParams">The CogOCVMaxFontRenderParams to use in rendering this text.</param><summary>Create a CogCompositeShape in which the supplied text is represented graphically by its outline. This outline is derived from the text as drawn using this font and the supplied parameters.</summary><exception cref="T:System.ArgumentOutOfRangeException">If the srcText argument does not describe at least one character.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><exception cref="T:System.ArgumentNullException">If any of the arguments are NULL.</exception><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><returns>A CogCompositeShape that represents the rendered text.</returns></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.GetCharacterPoses(System.Int32[],Cognex.VisionPro.CogTransform2DLinear,Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams)"><param name="srcText">The text to be evaluated. This array of integers is interpreted as a sequence of character keys and the corresponding text is interpreted as a single line within a single paragraph.</param><param name="selectedFromFont">A linear mapping from the imported font description to the selected space. Typically used to specify scaling.</param><param name="renderParams">The CogOCVMaxFontRenderParams to use in evaluating this text.</param><exception cref="T:System.ArgumentNullException">If any of the arguments are NULL.</exception><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><exception cref="T:System.ArgumentOutOfRangeException">If the srcText argument does not describe at least one character.</exception><returns>A System::Array of CogTransform2DLinear, each of which corresponds to the individual selected space pose of a character in the supplied text.</returns><summary>Create a System::Array of CogTransform2DLinear that correspond to the individual selected space poses of each character in the supplied text. These poses are determined using this font and the supplied parameters.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.GetCharacterPoses(System.String,Cognex.VisionPro.CogTransform2DLinear,Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams)"><param name="srcText">The text to be evaluated. This string is interpreted as a single line within a single paragraph.</param><param name="selectedFromFont">A linear mapping from the imported font description to the selected space. Typically used to specify scaling.</param><param name="renderParams">The CogOCVMaxFontRenderParams to use in evaluating this text.</param><exception cref="T:System.ArgumentNullException">If any of the arguments are NULL.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><returns>A System::Array of CogTransform2DLinear, each of which corresponds to the individual selected space pose of a character in the supplied text.</returns><exception cref="T:System.ArgumentOutOfRangeException">If the srcText argument does not describe at least one character.</exception><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><summary>Create a System::Array of CogTransform2DLinear that correspond to the individual selected space poses of each character in the supplied text. These poses are determined using this font and the supplied parameters.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.GetCharacterPoses(System.String[],Cognex.VisionPro.CogTransform2DLinear,Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams)"><param name="srcText">The text to be evaluated. Each array element is interpreted as a separate line within a single paragraph.</param><param name="selectedFromFont">A linear mapping from the imported font description to the selected space. Typically used to specify scaling.</param><param name="renderParams">The CogOCVMaxFontRenderParams to use in evaluating this text.</param><returns>A System::Array of CogTransform2DLinear, each of which corresponds to the individual selected space pose of a character in the supplied text.</returns><exception cref="T:System.ArgumentNullException">If any of the arguments are NULL.</exception><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><summary>Create a System::Array of CogTransform2DLinear that correspond to the individual selected space poses of each character in the supplied text. These poses are determined using this font and the supplied parameters.</summary><exception cref="T:System.ArgumentOutOfRangeException">If the srcText argument does not describe at least one character.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.GetCharacterMarkBounds(System.Int32[],Cognex.VisionPro.CogTransform2DLinear,Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams)"><param name="srcText">The text to be evaluated. This array of integers is interpreted as a sequence of character keys and the corresponding text is interpreted as a single line within a single paragraph.</param><param name="selectedFromFont">A linear mapping from the imported font description to the selected space. Typically used to specify scaling.</param><param name="renderParams">The CogOCVMaxFontRenderParams to use in evaluating this text.</param><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><exception cref="T:System.ArgumentOutOfRangeException">If the srcText argument does not describe at least one character.</exception><exception cref="T:System.ArgumentNullException">If any of the arguments are NULL.</exception><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><summary>Create a System::Array of CogRectangleAffine that correspond to the individual selected space bounds of each character mark in the supplied text. These mark bounds are determined using this font and the supplied parameters.</summary><returns>A System::Array of CogTransform2DLinear, each of which corresponds to the individual selected space mark bounds of a character in the supplied text.</returns></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.GetCharacterMarkBounds(System.String,Cognex.VisionPro.CogTransform2DLinear,Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams)"><param name="srcText">The text to be evaluated. This string is interpreted as a single line within a single paragraph.</param><param name="selectedFromFont">A linear mapping from the imported font description to the selected space. Typically used to specify scaling.</param><param name="renderParams">The CogOCVMaxFontRenderParams to use in evaluating this text.</param><returns>A System::Array of CogTransform2DLinear, each of which corresponds to the individual selected space mark bounds of a character in the supplied text.</returns><exception cref="T:System.ArgumentNullException">If any of the arguments are NULL.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><summary>Create a System::Array of CogRectangleAffine that correspond to the individual selected space bounds of each character mark in the supplied text. These mark bounds are determined using this font and the supplied parameters.</summary><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><exception cref="T:System.ArgumentOutOfRangeException">If the srcText argument does not describe at least one character.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.GetCharacterMarkBounds(System.String[],Cognex.VisionPro.CogTransform2DLinear,Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams)"><param name="srcText">The text to be evaluated. Each array element is interpreted as a separate line within a single paragraph.</param><param name="selectedFromFont">A linear mapping from the imported font description to the selected space. Typically used to specify scaling.</param><param name="renderParams">The CogOCVMaxFontRenderParams to use in evaluating this text.</param><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><returns>A System::Array of CogRectangleAffine, each of which corresponds to the individual selected space mark bounds of a character in the supplied text.</returns><exception cref="T:System.ArgumentNullException">If any of the arguments are NULL.</exception><summary>Create a System::Array of CogRectangleAffine that correspond to the individual selected space bounds of each character mark in the supplied text. These mark bounds are determined using this font and the supplied parameters.</summary><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><exception cref="T:System.ArgumentOutOfRangeException">If the srcText argument does not describe at least one character.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.GetCharacterFullBounds(System.Int32[],Cognex.VisionPro.CogTransform2DLinear,Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams)"><param name="srcText">The text to be evaluated. This array of integers is interpreted as a sequence of character keys and the corresponding text is interpreted as a single line within a single paragraph.</param><param name="selectedFromFont">A linear mapping from the imported font description to the selected space. Typically used to specify scaling.</param><param name="renderParams">The CogOCVMaxFontRenderParams to use in evaluating this text.</param><returns>A System::Array of CogTransform2DLinear, each of which corresponds to the individual selected space bounds of a character in the supplied text.</returns><summary>Create a System::Array of CogRectangleAffine that correspond to the individual selected space bounds of each character in the supplied text. These full bounds are determined using this font and the supplied parameters.</summary><exception cref="T:System.ArgumentNullException">If any of the arguments are NULL.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><exception cref="T:System.ArgumentOutOfRangeException">If the srcText argument does not describe at least one character.</exception><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.GetCharacterFullBounds(System.String,Cognex.VisionPro.CogTransform2DLinear,Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams)"><param name="srcText">The text to be evaluated. This string is interpreted as a single line within a single paragraph.</param><param name="selectedFromFont">A linear mapping from the imported font description to the selected space. Typically used to specify scaling.</param><param name="renderParams">The CogOCVMaxFontRenderParams to use in evaluating this text.</param><exception cref="T:System.ArgumentNullException">If any of the arguments are NULL.</exception><exception cref="T:System.ArgumentOutOfRangeException">If the srcText argument does not describe at least one character.</exception><summary>Create a System::Array of CogRectangleAffine that correspond to the individual selected space bounds of each character in the supplied text. These full bounds are determined using this font and the supplied parameters.</summary><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><returns>A System::Array of CogTransform2DLinear, each of which corresponds to the individual selected space bounds of a character in the supplied text.</returns><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.GetCharacterFullBounds(System.String[],Cognex.VisionPro.CogTransform2DLinear,Cognex.VisionPro.OCVMax.CogOCVMaxFontRenderParams)"><param name="srcText">The text to be evaluated. Each array element is interpreted as a separate line within a single paragraph.</param><param name="selectedFromFont">A linear mapping from the imported font description to the selected space. Typically used to specify scaling.</param><param name="renderParams">The CogOCVMaxFontRenderParams to use in evaluating this text.</param><returns>A System::Array of CogRectangleAffine, each of which corresponds to the individual selected space bounds of a character in the supplied text.</returns><summary>Create a System::Array of CogRectangleAffine that correspond to the individual selected space bounds of each character in the supplied text. These full bounds are determined using this font and the supplied parameters.</summary><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><exception cref="T:System.ArgumentNullException">If any of the arguments are NULL.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><exception cref="T:System.ArgumentOutOfRangeException">If the srcText argument does not describe at least one character.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxFont.SetCharacterOrigins(Cognex.VisionPro.OCVMax.CogOCVMaxFontOriginConstants)"><param name="origin">n/a</param><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxFont object has already been disposed.</exception><summary>Set the origins as specified if the font is an image font.</summary><exception cref="T:System.InvalidOperationException">If a font has not yet been imported, or if an internal error occurs.</exception><returns>True if the move request could be fulfilled, i.e. if the font was an image font.</returns></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxPoseHelper"><summary>This class provides help in defining a pose for a text paragraph. The general usage model assumes that you have: a) An image depicting the actual text in question, b) A font object, and c) The text (one or more strings), and from these you wish to determine a pose at which the CogOCVMax operator or tool might process the image. There are five basic steps. First, set up the CogOCVMaxPoseHelper object by setting the Font and Text properties (and optionally modifying the FontRenderParams property). Second, call the InitialPoseEstimate() method to get a first guess at what the desired pose might be. Third, call the FinalPosePrepare() method to create a CogCompositeShape graphic using the estimated initial pose. Fourth, add the graphic to the interactive display and allow the user to dynamically adjust the position, rotation, size, scale, or skew of this graphic so as to superimpose the graphic on the corresponding text in the image. Fifth, call the FinalPoseComplete() method with the (user modified) CogCompositeShape graphic. This final step will yield a CogTransform2DLinear that describes the user specified pose.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPoseHelper.SfFont"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Font may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPoseHelper.SfFontRenderParams"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by FontRenderParams may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPoseHelper.SfText"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Text may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPoseHelper.SfInitialPose"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by InitialPose may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPoseHelper.SfFinalPosePrepared"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by FinalPosePrepared may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPoseHelper.SfFinalPoseData"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by FinalPoseData may have changed.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPoseHelper.FinalPosePrepared"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><value>This read only property is of type Boolean.</value><summary>Get the validity of cached internal data describing the initial state of the graphical object that will be manipulated by the user to specify the final pose. This property is set to True by successfully calling FinalPosePrepare(). This property is set to False whenever Font is changed or modified, whenever FontRenderParams is changed or modified, whenever Text is changed, and whenever InitialPose is changed or modified. This property must be True before calling FinalPoseComplete().</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPoseHelper.InitialPose"><value>This read/write property is of type CogTransform2DLinear and may never be NULL.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><summary>Get or set the cached InitialPose. Note that in addition to setting this value directly, one might more typically set this property by calling the InitialPoseEstimate() method.</summary><exception cref="T:System.ArgumentNullException">If you attempt to set this to NULL.</exception></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPoseHelper.Text"><exception cref="T:System.ArgumentNullException">If you attempt to set this to NULL.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ArgumentException">If there is an unspecified structural problem with this argument.</exception><value>This read/write property must be an ArrayList of one or more ArrayList(s) of Int32s. There must be at least one Int32 entry.</value><exception cref="T:System.ArgumentOutOfRangeException">If the number of lines represented by the input argument is less than one.</exception><summary>Get or set the actual text used to compute the desired pose. Note that this text is represented as an ArrayList of ArrayList(s) of Int32. The outer array list holds one or more entries, each of which corresponds to a line of text within a single paragraph. Each such entry is itself an ArrayList. Every inner ArrayList holds zero or more Int32s. Each Int32 entry is the key value of a character. While a single line may have zero entries (that is, be empty), there must be at least one character in the paragraph. Note that there are several SetText methods that serve the same function as this setter but accept more convenient representations of the desired text (e.g. an array of strings, a single string, or an array of Int32s).</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPoseHelper.FontRenderParams"><summary>Get or set the CogOCVMaxFontRenderParams used to compute the desired pose.</summary><value>This read/write property may not be NULL.</value><exception cref="T:System.ArgumentNullException">If you attempt to set this to NULL.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPoseHelper.Font"><exception cref="T:System.ArgumentNullException">If you attempt to set this to NULL.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><value>This read/write property may not be NULL.</value><summary>Get or set the font used to compute the desired pose.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPoseHelper.SetText(System.Int32[])"><param name="srcText">The text to be used in determining a pose. This array of integers is interpreted as a sequence of character keys and the corresponding text is interpreted as a single line within a single paragraph.</param><exception cref="T:System.ArgumentOutOfRangeException">If there is not at least one character represented.</exception><exception cref="T:System.ArgumentNullException">If you attempt to set Text to NULL.</exception><summary>Set the Text property using the supplied string. Note that this assumes that the character keys in the font correspond to Unicode code point values.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this method causes the Text property to change.</event></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPoseHelper.SetText(System.String)"><param name="srcText">The text to be used in determining a pose. Must have at least one character.</param><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this method causes the Text property to change.</event><exception cref="T:System.ArgumentNullException">If you attempt to set Text to NULL.</exception><summary>Set the Text property using the supplied string. Note that this assumes that the character keys in the font correspond to Unicode code point values.</summary><exception cref="T:System.ArgumentOutOfRangeException">If there is not at least one character represented.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPoseHelper.SetText(System.String[])"><param name="srcText">The text to be used in determining a pose. Each array element is interpreted as a separate line within a single paragraph.</param><summary>Set the Text property using the supplied array of strings. Here each array element corresponds to a line in the paragraph. Note that this assumes that the character keys in the font correspond to Unicode code point values.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this method causes the Text property to change.</event><exception cref="T:System.ArgumentOutOfRangeException">If there is not at least one character represented.</exception><exception cref="T:System.ArgumentNullException">If you attempt to set Text to NULL.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPoseHelper.InitialPoseEstimate(Cognex.VisionPro.CogImage8Grey)"><param name="pImage">The image used to compute this pose. This should be the CogImage8Grey upon which you will display the interactive graphic created by FinalPosePrepare or FinalPosePrepareRectangleAffine.</param><exception cref="T:System.InvalidOperationException">If the Text property has not yet been set.</exception><returns>A CogTransform2DLinear that will size and position the graphic created by either FinalPosePrepare or FinalPosePrepareRectangleAffine in the center of the supplied image.</returns><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this method changes the InitialPose and/or FinalPosePrepared properties.</event><exception cref="T:System.ArgumentNullException">If the supplied image argument is NULL.</exception><summary>Compute an initial estimate of the desired pose using the currently set Font, FontRenderParams, and Text. This estimated pose will size and position the current text to fit easily within the center of the supplied image. The computed pose will be cached internally as well as returned by this method.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPoseHelper.FinalPosePrepare"><exception cref="T:System.InvalidOperationException">If the Font has not (yet) been imported.</exception><returns>A CogCompositeShape the depicts the outline of the Text property, as rendered using the current Font and FontRenderParams properties. This graphic is sized and positioned in accordance with the InitialPose property.</returns><summary>Prepare to compute the final pose by creating an appropriate interactive graphic and caching certain data describing its initial state.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this method changes the cached data describing the initial state of the interactive graphic and/or the FinalPosePrepared property.</event></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPoseHelper.FinalPosePrepareRectangleAffine"><returns>A CogRectangleAffine that depicts the bounds of the Text property, as rendered using the current Font and FontRenderParams properties. This graphic is sized and positioned in accordance with the InitialPose property.</returns><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this method changes the cached data describing the initial state of the interactive graphic and/or the FinalPosePrepared property.</event><exception cref="T:System.InvalidOperationException">If the Font has not (yet) been imported.</exception><summary>Prepare to compute the final pose by creating an interactive affine rectangle graphic and caching certain data describing its initial state.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPoseHelper.FinalPoseComplete(Cognex.VisionPro.CogRectangleAffine)"><param name="pUpdatedGraphic">The CogRectangleAffine generated by a call to FinalPosePrepareRectangleAffine() and then graphically manipulated by the user.</param><exception cref="T:System.InvalidOperationException">If the FinalPosePrepared property is False.</exception><exception cref="T:System.ArgumentNullException">If the pUpdatedGraphic argument is NULL.</exception><summary>Compute the final pose based upon the differences between the cached initial state of the interactive graphic and the current state of the supplied graphic. The presumption is that you are calling this method after the user has finished graphically manipulating the input CogRectangleAffine.</summary><returns>A CogTransform2DLinear that is the final pose to be used in sizing and positioning the text in the image.</returns></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPoseHelper.FinalPoseComplete(Cognex.VisionPro.CogCompositeShape)"><param name="pUpdatedGraphic">The CogCompositeShape generated by a call to FinalPosePrepare() and then graphically manipulated by the user.</param><returns>A CogTransform2DLinear that is the final pose to be used in sizing and positioning the text in the image.</returns><exception cref="T:System.InvalidOperationException">If the FinalPosePrepared property is False.</exception><summary>Compute the final pose based upon the differences between the cached initial state of the interactive graphic and the current state of the supplied graphic. The presumption is that you are calling this method after the user has finished graphically manipulating the input CogCompositeShape.</summary><exception cref="T:System.ArgumentNullException">If the pUpdatedGraphic argument is NULL.</exception></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxPatternCharacterRemovedEventArgs"><summary>This class holds data provided by the CharacterRemoved event. The CharacterRemoved event fires in addition to the standard Changed event after one or more characters in the arrangement have been removed.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPatternCharacterRemovedEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)"><param name="iP">The System::Int32 paragraph index.</param><param name="iL">The System::Int32 line index.</param><param name="iC">The System::Int32 character index.</param><param name="nC">The System::Int32 count of removed characters.</param><summary>Construct the CogOCVMaxPatternCharacterRemovedEventArgs object with the supplied paragraph index, line index, character index, and count of removed characters.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternCharacterRemovedEventArgs.NumCharacters"><summary>The number of characters that were removed.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternCharacterRemovedEventArgs.CharacterPosition"><summary>The zero-based character index of the first of the removed character(s).</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternCharacterRemovedEventArgs.LinePosition"><summary>The zero-based line index of the removed character(s).</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternCharacterRemovedEventArgs.ParagraphPosition"><summary>The zero-based paragraph index of the removed character(s).</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxPatternCharacterChangedEventArgs"><summary>This class holds data provided by the CharacterChanged event. The CharacterChanged event fires in addition to the standard Changed event after some aspect of a character in the arrangement has been changed.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPatternCharacterChangedEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean)"><param name="iP">The System::Int32 paragraph index.</param><param name="iL">The System::Int32 line index.</param><param name="iC">The System::Int32 character index.</param><param name="posValid">Whether or not the position reported by this event is valid.</param><summary>Construct the CogOCVMaxPatternCharacterChangedEventArgs object with the supplied paragraph index, line index, character index, and position valid value.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternCharacterChangedEventArgs.PositionValid"><summary>Whether or not the position reported by this event is valid.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternCharacterChangedEventArgs.CharacterPosition"><summary>The zero-based character index of the changed character.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternCharacterChangedEventArgs.LinePosition"><summary>The zero-based line index of the changed character.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternCharacterChangedEventArgs.ParagraphPosition"><summary>The zero-based paragraph index of the changed character.</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxPatternCharacterAddedEventArgs"><summary>This class holds data provided by the CharacterAdded event. The CharacterAdded event fires in addition to the standard Changed event after one or more characters are added to the arrangement.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPatternCharacterAddedEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)"><param name="iP">The System::Int32 paragraph index.</param><param name="iL">The System::Int32 line index.</param><param name="iC">The System::Int32 character index.</param><param name="nC">The System::Int32 count of added characters.</param><summary>Construct the CogOCVMaxPatternCharacterAddedEventArgs object with the supplied paragraph index, line index, character index, and count of added characters.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternCharacterAddedEventArgs.NumCharacters"><summary>The number of characters that were added.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternCharacterAddedEventArgs.CharacterPosition"><summary>The zero-based character index of the first of the added character(s).</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternCharacterAddedEventArgs.LinePosition"><summary>The zero-based line index of the added character(s).</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternCharacterAddedEventArgs.ParagraphPosition"><summary>The zero-based paragraph index of the added character(s).</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxPatternLineRemovedEventArgs"><summary>This class holds data provided by the LineRemoved event. The LineRemoved event fires in addition to the standard Changed event after one or more lines in the arrangement have been removed.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPatternLineRemovedEventArgs.#ctor(System.Int32,System.Int32,System.Int32)"><param name="iP">The System::Int32 paragraph index.</param><param name="iL">The System::Int32 line index.</param><param name="nL">The System::Int32 count of removed lines.</param><summary>Construct the CogOCVMaxPatternLineRemovedEventArgs object with the supplied paragraph index, line index, and count of removed lines.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternLineRemovedEventArgs.NumLines"><summary>The number of lines that were removed.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternLineRemovedEventArgs.LinePosition"><summary>The zero-based line index of the first of the removed line(s).</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternLineRemovedEventArgs.ParagraphPosition"><summary>The zero-based paragraph index of the removed line(s).</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxPatternLineChangedEventArgs"><summary>This class holds data provided by the LineChanged event. The LineChanged event fires in addition to the standard Changed event after some aspect of a line in the arrangement has been changed.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPatternLineChangedEventArgs.#ctor(System.Int32,System.Int32,System.Boolean)"><param name="iP">The System::Int32 paragraph index.</param><param name="iL">The System::Int32 line index.</param><param name="posValid">Whether or not the position reported by this event is valid.</param><summary>Construct the CogOCVMaxPatternLineChangedEventArgs object with the supplied paragraph index, line index, and position valid value.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternLineChangedEventArgs.PositionValid"><summary>Whether or not the position reported by this event is valid.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternLineChangedEventArgs.LinePosition"><summary>The zero-based line index of the changed line.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternLineChangedEventArgs.ParagraphPosition"><summary>The zero-based paragraph index of the changed line.</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxPatternLineAddedEventArgs"><summary>This class holds data provided by the LineAdded event. The LineAdded event fires in addition to the standard Changed event after one or more lines are added to the arrangement.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPatternLineAddedEventArgs.#ctor(System.Int32,System.Int32,System.Int32)"><param name="iP">The System::Int32 paragraph index.</param><param name="iL">The System::Int32 line index.</param><param name="nL">The System::Int32 count of added lines.</param><summary>Construct the CogOCVMaxPatternLineAddedEventArgs object with the supplied paragraph index, line index, and count of added lines.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternLineAddedEventArgs.NumLines"><summary>The number of lines that were added.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternLineAddedEventArgs.LinePosition"><summary>The zero-based line index of the first of the added line(s).</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternLineAddedEventArgs.ParagraphPosition"><summary>The zero-based paragraph index of the added line(s).</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxPatternParagraphRemovedEventArgs"><summary>This class holds data provided by the ParagraphRemoved event. The ParagraphRemoved event fires in addition to the standard Changed event after one or more paragraphs in the arrangement have been removed.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPatternParagraphRemovedEventArgs.#ctor(System.Int32,System.Int32)"><param name="iP">The System::Int32 paragraph index.</param><param name="nP">The System::Int32 count of removed paragraphs.</param><summary>Construct the CogOCVMaxPatternParagraphRemovedEventArgs object with the supplied paragraph index and count of removed paragraphs.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternParagraphRemovedEventArgs.NumParagraphs"><summary>The number of paragraphs that were removed.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternParagraphRemovedEventArgs.ParagraphPosition"><summary>The zero-based paragraph index of the first of the removed paragraph(s).</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxPatternParagraphChangedEventArgs"><summary>This class holds data provided by the ParagraphChanged event. The ParagraphChanged event fires in addition to the standard Changed event after some aspect of a paragraph in the arrangement has been changed.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPatternParagraphChangedEventArgs.#ctor(System.Int32,System.Boolean)"><param name="iP">The System::Int32 paragraph index.</param><param name="posValid">Whether or not the position reported by this event is valid.</param><summary>Construct the CogOCVMaxPatternParagraphChangedEventArgs object with the supplied paragraph index and position valid value.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternParagraphChangedEventArgs.PositionValid"><summary>Whether or not the position reported by this event is valid.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternParagraphChangedEventArgs.ParagraphPosition"><summary>The zero-based paragraph index of the changed paragraph.</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxPatternParagraphAddedEventArgs"><summary>This class holds data provided by the ParagraphAdded event. The ParagraphAdded event fires in addition to the standard Changed event after one or more paragraphs are added to the arrangement.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPatternParagraphAddedEventArgs.#ctor(System.Int32,System.Int32)"><param name="iP">The System::Int32 paragraph index.</param><param name="nP">The System::Int32 count of added paragraphs.</param><summary>Construct the CogOCVMaxPatternParagraphAddedEventArgs object with the supplied paragraph index and count of added paragraphs.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternParagraphAddedEventArgs.NumParagraphs"><summary>The number of paragraphs that were added.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternParagraphAddedEventArgs.ParagraphPosition"><summary>The zero-based paragraph index of the first of the added paragraph(s).</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxPatternTrainProgressEventArgs"><summary>This class holds data provided by the TrainProgress event. The TrainProgess event fires periodically during training.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPatternTrainProgressEventArgs.#ctor(System.Double)"><param name="fractionComplete">The System::Double progress value. This should be in the range from zero to one inclusive.</param><summary>Construct the CogOCVMaxPatternTrainProgressEventArgs object with the supplied progress value.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternTrainProgressEventArgs.Progress"><summary>The progress of training to date. This System::Double will be in the range from zero to one inclusive, where zero means no training yet complete and one means all training complete.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPatternTrainProgressEventArgs.CancelRequested"><summary>Whether or not cancellation has been requested for this training.</summary><returns>A System::Boolean. True if cancellation has been requested, false otherwise.</returns></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPatternTrainProgressEventArgs.RequestCancel"><summary>Request that training be cancelled.</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxPatternTuneProgressEventArgs"><summary>This class holds data provided by the TuneProgress event. The TuneProgress event fires periodically during tuning.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPatternTuneProgressEventArgs.#ctor(System.Double)"><param name="fractionComplete">The System::Double progress value. This should be in the range from zero to one inclusive.</param><summary>Construct the CogOCVMaxPatternTuneProgressEventArgs object with the supplied progress value.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPatternTuneProgressEventArgs.Progress"><summary>The progress of tuning to date. This System::Double will be in the range from zero to one inclusive, where zero means no tuning yet complete and one means all tuning complete.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPatternTuneProgressEventArgs.CancelRequested"><summary>Whether or not cancellation has been requested for this tuning.</summary><returns>A System::Boolean. True if cancellation has been requested, false otherwise.</returns></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPatternTuneProgressEventArgs.RequestCancel"><summary>Request that tuning be cancelled.</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxPattern"><summary><para>This class is the workhorse of the <see cref="N:Cognex.VisionPro.OCVMax" /> assembly; it does the actual optical character verification. This class contains the training parameters and trained state information. You can use this class to perform character verifcation, or you can use the tool, <see cref="T:Cognex.VisionPro.OCVMax.CogOCVMaxTool" />.</para><para>Unlike other vision tools that require training, <see cref="T:Cognex.VisionPro.OCVMax" /> does not use a training image or training region. This class's training is based on synthetically generated images produced by <see cref="T:Cognex.VisionPro.OCVMax.CogOCVMaxFont" />.</para></summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfTrained"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Trained may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfTrainTransform"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TrainTransform may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfTrainTimeoutEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TrainTimeoutEnabled may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfTrainTimeout"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TrainTimeout may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfTuned"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Tuned may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfTuneImage"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TuneImage may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfTuneRegion"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TuneRegion may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfTuneRunParams"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TuneRunParams may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfTuneResult"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TuneResult may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfGetTunedRunParams"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetTunedRunParams may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfTunedRunTimeout"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TunedRunTimeout may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfOrigin"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Origin may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfCharacterRegistration"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CharacterRegistration may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfScoreMode"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ScoreMode may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfExpectedDeformationRate"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ExpectedDeformationRate may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfCustomization"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Customization may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfGetCharacterCount"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetCharacterCount may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfGetLineCount"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetLineCount may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfGetParagraphCount"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetParagraphCount may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfCreateCharacterIterator"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CreateCharacterIterator may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfCreateLineIterator"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CreateLineIterator may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfCreateParagraphIterator"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CreateParagraphIterator may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfDOFEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by DOFEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfGetDOFRotation"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetDOFRotation may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfGetDOFScale"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetDOFScale may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfGetDOFScaleX"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetDOFScaleX may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfGetDOFScaleY"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetDOFScaleY may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SfGetDOFShear"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetDOFShear may have changed.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.DOFEnable"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><value>This read/write property is either 0 (no DOFs enabled) or a bitwise OR of the enumeration values CogOCVMaxDOFConstants::Rotation, ::Scale, ::ScaleX, ::ScaleY, and ::Shear.</value><summary>The degrees of freedom (DOFs) to be searched. There are five degrees of freedom: Rotation, (uniform) Scale, ScaleX, ScaleY, and Shear. Any combination of these (including None) may be searched. If a particular DOF is enabled, the search will be performed between that DOF's LowerLimit and UpperLimit values, otherwise the search will be performed with that DOF's Nominal value.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ExpectedDeformationRate"><summary>Gets or sets the expected deformation rate of the nonlinear fit used for registration.</summary><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set this to a value less than zero or greater than one.</exception><value>The expected deformation rate of the nonlinear fit used for registration.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><remarks><para>
		Large values model more "deformation within each character, but can result in more
		confusion between characterse and longer run times. A value of "zero still allows some deformation.
		</para><para>
			This property has no effect if 
				<see cref="P:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.CharacterRegistration" />
			is
				<see cref="F:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterRegistrationConstants.Nonlinear" />.
		</para><para>
			If the characters are small in the synthetically generated training image,
			of if they are very simple in structure, this property may have little or no effect.
			A large kanji character might benefit from an increased deformation rate,
			the the letter "I" would probably not.
		</para></remarks></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ScoreMode"><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><value>The mode used to compute the score for each character.</value><summary>Gets or sets the mode used to compute the score for each character.</summary><remarks><para>When the mode is <see cref="F:Cognex.VisionPro.OCVMax.CogOCVMaxScoreModeConstants.ScoreUsingClutter" />,
    		the score is reduces if extra features (clutter) are present.</para><para>When the mode is <see cref="F:Cognex.VisionPro.OCVMax.CogOCVMaxScoreModeConstants.ScoreUsingOptimizedClutter" />,
    		the score is reduced if extra features are present, but the score is optimized for relatively low-contrast clutter.</para><para>When the mode is <see cref="F:Cognex.VisionPro.OCVMax.CogOCVMaxScoreModeConstants.ScoreWithoutClutter" />,
    		the score is based only on the presence of expected features and any extra features (clutter) are ignored.</para><para><see cref="F:Cognex.VisionPro.OCVMax.CogOCVMaxScoreModeConstants.ScoreUsingClutter" />
    		is usually preferable to allow confusion to be computed more reliable. However, 
    		<see cref="F:Cognex.VisionPro.OCVMax.CogOCVMaxScoreModeConstants.ScoreWithoutClutter" />
    		may be necessary in noisy images.
    		</para></remarks></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.CharacterRegistration"><summary>Gets or sets the type of registration (fitting) done for each character found.</summary><value>The type of registration (fitting) done for each character found.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><remarks><para>If the registration type is <see cref="F:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterRegistrationConstants.Standard" />,
			the registration is done with five degrees of freedom (affine, without skew).  This registration type takes the shortest amount of time to run.</para><para>If the registration type is <see cref="F:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterRegistrationConstants.Bent" />,
			the registration is done with an affine transformation and is then further refined to model small amounts of warping to the limits
			set by the <see cref="P:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.Refinement">runtime refinement value</see> .</para><para>If the registration type is <see cref="F:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterRegistrationConstants.Nonlinear" />,
			the registration is done with a nonlinear transformation that can model significant deformations of the runtime characters.
			This registration type takes the longest amount of time to run.</para><para>If the registration type is <see cref="F:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterRegistrationConstants.Correlation" />,
			the registration is done using correlation technology with at most translation, rotation, and uniform scale. The maximum possible runtime ranges for rotation and uniform scale must be specified at training time.</para></remarks></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Origin"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ArgumentNullException">If you attempt to set this to a NULL value.</exception><summary>Gets or sets the origin of the arrangement.</summary><value>The origin of the arrangement.</value><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.TunedRunTimeout"><summary>Gets the run timeout value in milliseconds generated during the most recent call to to <see cref="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Tune" />.</summary><value>The run timeout value in milliseconds generated during the most recent call to to <see cref="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Tune" />.</value><remarks><para>If <see cref="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Tune" /> has not been called, the value of this property the default run timeout.
    	</para></remarks></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.TuneResult"><value>The final <see cref="T:Cognex.VisionPro.OCVMax.CogOCVMaxResult" /> generated during the most recent call to <see cref="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Tune" />.</value><summary>Gets the final <see cref="T:Cognex.VisionPro.OCVMax.CogOCVMaxResult" /> generated during the most recent call to <see cref="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Tune" />.</summary><remarks><para>If <see cref="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Tune" /> has not been called, the value of this property is NULL.
    	</para></remarks></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.TuneRunParams"><summary>Gets or sets the <see cref="T:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams">run parameters</see>  used for tuning.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><value>The <see cref="T:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams">run parameters</see>  used for tuning.</value><remarks><para>Tuning is an iterative process of adjusting, training, and running the pattern.</para></remarks></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.TuneRegion"><summary>Gets or sets the optional region that specifies which portion of the <see cref="P:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.TuneImage" /> is used during tuning. If this property is NULL, the entire <see cref="P:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.TuneImage" /> is used.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><value>The optional region that specifies which portion of the <see cref="P:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.TuneImage" /> is used during tuning.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.TuneImage"><value>The image used during tuning.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><summary>Gets the image used during tuning.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Tuned"><value>True if the pattern has been tuned.</value><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><summary>True if the pattern has been tuned.</summary><remarks><para>This is a convenience property that tells you whether a non-NULL
    			<see cref="P:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.TuneResult" /> exists.
    		</para></remarks></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.TrainTimeout"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.ArgumentOutOfRangeException">The timeout value is less than or equal to zero.</exception><summary>If <see cref="P:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.TrainTimeoutEnabled" /> is True, this is the maximum amount of time in milliseconds that <see cref="P:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.TrainTimeoutEnabled" />can run.</summary><value>The maximum amount of time in milliseconds to train the pattern.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.TrainTimeoutEnabled"><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><summary>Gets or sets whether the pattern is allowed to time out during training.</summary><value>True if the pattern is allowed to time out during training.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.TrainTransform"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ObjectDisposedException">This object has already been disposed.</exception><exception cref="T:System.ArgumentNullException">You attempted to set this to a NULL value.</exception><summary>Gets or sets the transformation that specifies the mapping from the synthetically generated training images</summary><value>The transformation that specifies the mapping from the synthetically generated training images.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Trained"><summary>Gets whether this pattern has been trained.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><value>True if the pattern has been trained.</value></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.AddText(System.Int32[],Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator)"><param name="srcText">An System::Array of System::Int32. May not be NULL. Each element in this array is the key value of a character in the text to be inserted.</param><param name="pNext">A CogOCVMaxCharacterIterator which specifies the character position at which the new characters should be inserted. May not be NULL.</param><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when the pattern object is modified.</event><summary>Inserts one or more characters at the character position specified by the supplied character iterator.</summary><exception cref="T:System.InvalidOperationException">If the character iterator does not specify a valid position.</exception><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.CharacterAdded">Fires when a character is added to the pattern object.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.ArgumentNullException">If srcText argument is NULL.</exception><exception cref="T:System.ArgumentException">If the supplied character iterator does not reference this CogOCVMaxPattern object.</exception><remarks><para>	The characters have key values supplied by the input array of integers.</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.AddText(System.String,Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator)"><param name="srcText">A string containing the characters to be inserted. May not be NULL. This assumes that the character keys in the associated font correspond to Unicode code point values.</param><param name="pNext">A CogOCVMaxCharacterIterator which specifies the character position at which the new characters should be inserted. May not be NULL.</param><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when the pattern object is modified.</event><summary>Inserts one or more characters at the character position specified by the character iterator.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.CharacterAdded">Fires when a character is added to the pattern object.</event><exception cref="T:System.ArgumentNullException">If srcText argument is NULL.</exception><exception cref="T:System.ArgumentException">If the supplied character iterator does not reference this CogOCVMaxPattern object.</exception><exception cref="T:System.InvalidOperationException">If the character iterator does not specify a valid position.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.AddText(System.Int32[],Cognex.VisionPro.OCVMax.CogOCVMaxLineIterator)"><param name="srcText">An System::Array of System::Int32. May not be NULL. Each element in this array is the key value of a character in the text that makes up the single line to be inserted.</param><param name="pNext">A CogOCVMaxLineIterator which specifies the line position at which the new line should be inserted. May not be NULL.</param><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.LineAdded">Fires when a line is added to the pattern object.</event><exception cref="T:System.ArgumentNullException">If pNext argument is NULL.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when the pattern object is modified.</event><exception cref="T:System.ArgumentException">If the supplied line iterator does not reference this CogOCVMaxPattern object.</exception><exception cref="T:System.InvalidOperationException">If the line iterator does not specify a valid position.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><summary>Creates a new line and inserts it at the line position specified by the line iterator.</summary><remarks><para>
				This new line contains characters whose key values are supplied by the <parmref name="srcText" /> array.
				An empty input array of integers is interpreted as a blank line.
			</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.AddText(System.String,Cognex.VisionPro.OCVMax.CogOCVMaxLineIterator)"><param name="srcText">A single string corresponding to the single line to be inserted. May not be NULL. This assumes that the character keys in the associated font correspond to Unicode code point values.</param><param name="pNext">A CogOCVMaxLineIterator which specifies the line position at which the new line should be inserted. May not be NULL.</param><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.LineAdded">Fires when a line is added to the pattern object.</event><summary>Creates a new line and inserts it at the line position specified by the line iterator.</summary><exception cref="T:System.InvalidOperationException">If the line iterator does not specify a valid position.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when the pattern object is modified.</event><exception cref="T:System.ArgumentNullException">If pNext argument is NULL.</exception><exception cref="T:System.ArgumentException">If the supplied line iterator does not reference this CogOCVMaxPattern object.</exception><remarks><para>
				 This new line contains characters specified by <paramref name="srcText" />.
				 An empty string (length zero) is interpreted as a blank line.
			</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.AddText(System.String[],Cognex.VisionPro.OCVMax.CogOCVMaxLineIterator)"><param name="srcText">An array of strings, each of which corresponds to a line of text. May not be NULL. This assumes that the character keys in the associated font correspond to Unicode code point values.</param><param name="pNext">A CogOCVMaxLineIterator which specifies the line position at which the new line(s) should be inserted. May not be NULL.</param><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.ArgumentNullException">If srcText argument is NULL.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when the pattern object is modified.</event><exception cref="T:System.ArgumentException">If the supplied line iterator does not reference this CogOCVMaxPattern object.</exception><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.LineAdded">Fires when a line is added to the pattern object.</event><exception cref="T:System.InvalidOperationException">If the line iterator does not specify a valid position.</exception><summary>Creates one or more new lines and inserts them at the line position specified by the line iterator.</summary><remarks><para>
				 Each string in the <paramref name="srcText" /> array corresponds to an individual line.
				 An empty string (length zero) is interpreted as a blank line.
			</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.AddText(System.Int32[],Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator)"><param name="srcText">An System::Array of System::Int32. May not be NULL. Each element in this array is the key value of a character in the text that makes up the single line of the new paragraph to be appended to the arrangement.</param><param name="pNext">A CogOCVMaxParagraphIterator which specifies where in the current arrangement the new paragraph should be inserted. May not be NULL.</param><exception cref="T:System.ArgumentNullException">If srcText argument is NULL.</exception><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ParagraphAdded">Fires when a paragraph is added to the pattern object.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><summary>Creates a new paragraph and inserts it in the arrangement at the position specified by the  paragraph iterator.</summary><exception cref="T:System.ArgumentException">If the supplied paragraph iterator does not reference this CogOCVMaxPattern object.</exception><exception cref="T:System.InvalidOperationException">If the paragraph iterator does not specify a valid position.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when the pattern object is modified.</event><remarks><para>
				This new paragraph has a single line composed of characters whose key
				values are supplied by the input array of integers. An empty input
				array of integers is interpreted as a blank line.
				</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.AddText(System.String,Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator)"><param name="srcText">A single string corresponding to the single line in the new paragraph. May not be NULL. This assumes that the character keys in the associated font correspond to Unicode code point values.</param><param name="pNext">A CogOCVMaxParagraphIterator which specifies where in the current arrangement the new paragraph should be inserted. May not be NULL.</param><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ParagraphAdded">Fires when a paragraph is added to the pattern object.</event><exception cref="T:System.ArgumentNullException">If pNext argument is NULL.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If the paragraph iterator does not specify a valid position.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when the pattern object is modified.</event><summary>Creates a new paragraph and inserts it in the arrangement at the position specified by the paragraph iterator.</summary><exception cref="T:System.ArgumentException">If the supplied paragraph iterator does not reference this CogOCVMaxPattern object.</exception><remarks><para>
					This new paragraph has a single line as supplied by <paramref name="srcText" />. 
					An empty string (length zero) is interpreted as a blank line.
				</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.AddText(System.String[],Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator)"><param name="srcText">An array of strings, each of which corresponds to a line in the new paragraph. May not be NULL. This assumes that the character keys in the associated font correspond to Unicode code point values.</param><param name="pNext">A CogOCVMaxParagraphIterator which specifies where in the current arrangement the new paragraph should be inserted. May not be NULL.</param><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when the pattern object is modified.</event><summary>Creates a new paragraph and inserts it in the arrangement at the position specified by the paragraph iterator.</summary><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ParagraphAdded">Fires when a paragraph is added to the pattern object.</event><exception cref="T:System.InvalidOperationException">If the paragraph iterator does not specify a valid position.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.ArgumentNullException">If pNext argument is NULL.</exception><exception cref="T:System.ArgumentException">If the supplied paragraph iterator does not reference this CogOCVMaxPattern object.</exception><remarks><para>
				Each string in <paramref name="srcText" />  array of strings corresponds to an individual
				line in this new paragraph. An empty string (length zero) is interpreted as a blank line.
			</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.AddText(System.Int32[])"><param name="srcText">An System::Array of System::Int32. May not be NULL. Each element in this array is the key value of a character in the text that makes up the single line of the new paragraph to be appended to the arrangement.</param><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ParagraphAdded">Fires when a paragraph is added to the pattern object.</event><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when the pattern object is modified.</event><summary>Creates a new paragraph and appends it to the end of the current arrangement.</summary><exception cref="T:System.ArgumentNullException">If srcText argument is NULL.</exception><remarks><para>
				    This new paragraph will have a single line composed of characters whose key values are supplied by
				    the <paramref name="srcText" /> array of integers. An empty input array of integers is interpreted as a blank line.
			</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.AddText(System.String)"><param name="srcText">A single string corresponding to the single line in the new paragraph. May not be NULL. This assumes that the character keys in the associated font correspond to Unicode code point values.</param><summary>Creates a new paragraph and appends it to the end of the current arrangement.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when the pattern object is modified.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ParagraphAdded">Fires when a paragraph is added to the pattern object.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.ArgumentNullException">If srcText argument is NULL.</exception><remarks><para>
    		    The new paragraph will have a single line, as supplied by <paramref name="srcText" />.
    		    An empty string (length zero) is interpreted as a blank line.
    		</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.AddText(System.String[])"><param name="srcText">An array of strings, each of which corresponds to a line in the new paragraph. May not be NULL. This assumes that the character keys in the associated font correspond to Unicode code point values.</param><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when the pattern object is modified.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ParagraphAdded">Fires when a paragraph is added to the pattern object.</event><summary>Creates a new paragraph and appends it to the end of the current arrangement.</summary><exception cref="T:System.ArgumentNullException">If srcText argument is NULL.</exception><remarks><para>
    		    Each string in the supplied array of strings corresponds to an individual line in the new paragraph.
    		    An empty string (length zero) is interpreted as a blank line.
    	</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.RemoveParagraph(Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator)"><param name="pTarget">A CogOCVMaxParagraphIterator that specifies the paragraph to remove. May not be NULL.</param><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when the pattern object is modified.</event><exception cref="T:System.ArgumentException">If the supplied paragraph iterator does not reference this CogOCVMaxPattern object.</exception><exception cref="T:System.ArgumentNullException">If pTarget argument is NULL.</exception><summary>Removes the paragraph specified by the paragraph iterator from the arrangement.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If the paragraph iterator does not specify a valid position.</exception><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ParagraphRemoved">Fires when a paragraph is removed from the pattern object.</event></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.RemoveLine(Cognex.VisionPro.OCVMax.CogOCVMaxLineIterator)"><param name="pTarget">A CogOCVMaxLineIterator that specifies the line to remove. May not be NULL.</param><exception cref="T:System.ArgumentNullException">If pTarget argument is NULL.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when the pattern object is modified.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.LineRemoved">Fires when a line is removed from the pattern object.</event><summary>Removes the line specified by the supplied line iterator from the arrangement.</summary><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ParagraphRemoved">Fires when a paragraph is removed from the pattern object.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.ArgumentException">If the supplied line iterator does not reference this CogOCVMaxPattern object.</exception><exception cref="T:System.InvalidOperationException">If the line iterator does not specify a valid position.</exception><remarks><para>
				If line iterator references the only line in a paragraph,  the entire paragraph is removed from the arrangement.
			</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.RemoveCharacter(Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator)"><param name="pTarget">A CogOCVMaxCharacterIterator that specifies the character to remove. May not be NULL.</param><exception cref="T:System.InvalidOperationException">If the character iterator does not specify a valid position.</exception><exception cref="T:System.ArgumentNullException">If pTarget argument is NULL.</exception><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.LineRemoved">Fires when a line is removed from the pattern object.</event><summary>Removes  the character specified by the supplied character iterator from the arrangement.</summary><exception cref="T:System.ArgumentException">If the supplied character iterator does not reference this CogOCVMaxPattern object.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when the pattern object is modified.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ParagraphRemoved">Fires when a paragraph is removed from the pattern object.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.CharacterRemoved">Fires when a character is removed from the pattern object.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><remarks>
			 If the character iterator references the only character in a line, the line is removed from the arrangement. 
			 If that line was the only line in its paragraph,  that paragraph is removed from the arrangement.
		</remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.GetParagraphCount"><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><returns>The number of paragraphs in the arrangement.</returns><summary>Gets the number of paragraphs in the arrangement.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.GetLineCount(System.Int32)"><param name="paragraphPosition">A zero-based index that specifies which paragraph to use.</param><returns>The number of lines in the specified paragraph.</returns><exception cref="T:System.ArgumentOutOfRangeException">If the suppled paragraphPosition argument is less than zero or greater than or equal to the number of paragraphs.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><summary>Gets the number of lines in a paragraph.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.GetCharacterCount(System.Int32,System.Int32)"><param name="paragraphPosition">A zero-based index that specifies which paragraph to use.</param><param name="linePosition">A zero-based index that specifies which line in the paragraph to use.</param><exception cref="T:System.ArgumentOutOfRangeException">If the suppled paragraphPosition argument is less than zero or greater than or equal to the number of paragraphs.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><summary>Gets the number of characters in a line.</summary><returns>The number of characters in the specified line.</returns></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.CreateCharacterIterator(System.Int32,System.Int32)"><param name="paragraphPosition">A  zero-based index that specifies the paragraph.</param><param name="linePosition">A zero-based index that specifies the line.</param><summary>Creates a character iterator that corresponds to the initial character position in the specified line in the specified paragraph.</summary><returns>A character iterator that corresponds to the specified character.</returns><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><remarks>It is legal to call this method with the index of a line that contains no characters. The IsInvalid, IsEnd, and IsFirst properties of the resulting iterator will all be True. Attempts to access any other property on this iterator will cause an exception to be thrown. This iterator may be supplied as an argument in a subsequent call to AddText.</remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.CreateCharacterIterator(System.Int32,System.Int32,System.Int32)"><param name="paragraphPosition">A zero-based index that specifies the paragraph.</param><param name="linePosition">A zero-based index that specifies the line.</param><param name="characterPosition">A zero-based index that specifies the character. The special value -1 is interpreted to mean the end of the line.</param><returns>A character iterator that corresponds to the specified character.</returns><remarks>It is legal to call this method with the index of a line that contains no characters and with a characterPosition argument of either 0 or -1. The IsInvalid, IsEnd, and IsFirst properties of the resulting iterator will all be True. Attempts to access any other property on this iterator will cause an exception to be thrown. This iterator may be supplied as an argument in a subsequent call to AddText.</remarks><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.ArgumentOutOfRangeException">If the suppled characterPosition argument does not reference a valid character position.</exception><summary>Creates a character iterator corresponding to the specified character in the specified line in the specified paragraph of the arrangement.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.CreateLineIterator(System.Int32)"><param name="paragraphPosition">A zero-based index that specifies the  paragraph.</param><remarks>It is legal to call this method with the index of a paragraph that contains no lines. The IsInvalid, IsEnd, and IsFirst properties of the resulting iterator will all be True. Attempts to access any other property on this iterator will cause an exception to be thrown. This iterator may be supplied as an argument in a subsequent call to AddText.</remarks><returns>A line iterator that corresponds to the specified line.</returns><summary>Creates a line iterator that corresponds to the initial line position in the specified paragraph of the arrangement.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.CreateLineIterator(System.Int32,System.Int32)"><param name="paragraphPosition">A zero-based index that specifies the paragraph.</param><param name="linePosition">A zero-based index that specifies the line. The special value -1 is interpreted to mean the end of the paragraph.</param><summary>Creates a line iterator that corresponds to the specified line in the specified paragraph of the arrangement.</summary><remarks>It is legal to call this method with the index of a paragraph that contains no lines and with a linePosition argument of either 0 or -1. The IsInvalid, IsEnd, and IsFirst properties of the resulting iterator will all be True. Attempts to access any other property on this iterator will cause an exception to be thrown. This iterator may be supplied as an argument in a subsequent call to AddText.</remarks><returns>A line iterator that corresponds to the specified line.</returns><exception cref="T:System.ArgumentOutOfRangeException">If the suppled linePosition argument does not reference a valid line position.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.CreateParagraphIterator"><summary>Create a paragraph iterator corresponding to the initial paragraph in the arrangement.</summary><returns>A paragraph iterator that corresponds to the initial paragraph.</returns><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><remarks>It is legal to call this method on an empty pattern (that is, on a pattern whose GetParagraphCount method returns zero). The IsInvalid, IsEnd, and IsFirst properties of the resulting iterator will all be True. Attempts to access any other property on this iterator will cause an exception to be thrown.  This iterator may be supplied as an argument in a subsequent call to AddText.</remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.CreateParagraphIterator(System.Int32)"><param name="paragraphPosition">A System::Int32 zero-based index that specifies which paragraph. The special value -1 is interpreted to mean "at the end of this arrangement".</param><summary>Creates a paragraph iterator that corresponds to the specified paragraph of the arrangement.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><remarks>It is legal to call this method on a pattern that contains no paragraphs with a paragraphPosition argument of either 0 or -1. The IsInvalid, IsEnd, and IsFirst properties of the resulting iterator will all be True. Attempts to access any other property on this iterator will cause an exception to be thrown. This iterator may be supplied as an argument in a subsequent call to AddText.</remarks><returns>A paragraph iterator that corresponds to the specified paragraph.</returns><exception cref="T:System.ArgumentOutOfRangeException">If the suppled paragraphPosition argument does not reference a valid paragraph position.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.GetDOFRotation(Cognex.VisionPro.OCVMax.CogOCVMaxDOFAttributeConstants)"><param name="selector">The desired attribute. May be one of: CogOCVMaxDOFAttributeConstants::LowerLimit, ::Nominal, or ::UpperLimit</param><returns>A System::Double representing the specified Rotation attribute in radians.</returns><summary>Get a particular attribute (LowerLimit, Nominal, or UpperLimit) of the Rotation degree of freedom (DOF). Use the selector argument to specify which attribute. The units of all Rotation attributes are radians.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SetDOFRotation(Cognex.VisionPro.OCVMax.CogOCVMaxDOFAttributeConstants,System.Double)"><param name="selector">The desired attribute. May be one of: CogOCVMaxDOFAttributeConstants::LowerLimit, ::Nominal, or ::UpperLimit</param><param name="dNewVal">The new attribute value, in radians.</param><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set Rotation Overlap to a negative value.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><summary>Set a particular attribute (LowerLimit, Nominal, or UpperLimit) of the Rotation degree of freedom (DOF). Use the selector argument to specify which attribute. The units of all Rotation attributes are radians.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.GetDOFScale(Cognex.VisionPro.OCVMax.CogOCVMaxDOFAttributeConstants)"><param name="selector">The desired attribute. May be one of: CogOCVMaxDOFAttributeConstants::LowerLimit, ::Nominal, ::UpperLimit, or ::Overlap.</param><returns>A System::Double representing the specified (uniform) Scale attribute.</returns><summary>Get a particular attribute (LowerLimit, Nominal, or UpperLimit) of the (uniform) Scale degree of freedom (DOF). Use the selector argument to specify which attribute.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SetDOFScale(Cognex.VisionPro.OCVMax.CogOCVMaxDOFAttributeConstants,System.Double)"><param name="selector">The desired attribute. May be one of: CogOCVMaxDOFAttributeConstants::LowerLimit, ::Nominal, or ::UpperLimit.</param><param name="dNewVal">The new attribute value. Note that Scale Overlap must be greater than or equal to one. Note that Scale LowerLimit, Nominal, and UpperLimit must all be greater than zero.</param><summary>Set a particular attribute (LowerLimit, Nominal, or UpperLimit) of the (uniform) Scale degree of freedom (DOF). Use the selector argument to specify which attribute.</summary><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set Scale LowerLimit, Nominal, or UpperLimit to a value less than or equal to zero.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.GetDOFScaleX(Cognex.VisionPro.OCVMax.CogOCVMaxDOFAttributeConstants)"><param name="selector">The desired attribute. May be one of: CogOCVMaxDOFAttributeConstants::LowerLimit, ::Nominal, or ::UpperLimit.</param><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><summary>Get a particular attribute (LowerLimit, Nominal, or UpperLimit) of the ScaleX degree of freedom (DOF). Use the selector argument to specify which attribute.</summary><returns>A System::Double representing the specified ScaleXattribute.</returns></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SetDOFScaleX(Cognex.VisionPro.OCVMax.CogOCVMaxDOFAttributeConstants,System.Double)"><param name="selector">The desired attribute. May be one of: CogOCVMaxDOFAttributeConstants::LowerLimit, ::Nominal, or ::UpperLimit.</param><param name="dNewVal">The new attribute value. Note that ScaleX Overlap must be greater than or equal to one. Note that ScaleX LowerLimit, Nominal, and UpperLimit must all be greater than zero.</param><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set ScaleX LowerLimit, Nominal, or UpperLimit to a value less than or equal to zero.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><summary>Set a particular attribute (LowerLimit, Nominal, or UpperLimit) of the ScaleX degree of freedom (DOF). Use the selector argument to specify which attribute.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.GetDOFScaleY(Cognex.VisionPro.OCVMax.CogOCVMaxDOFAttributeConstants)"><param name="selector">The desired attribute. May be one of: CogOCVMaxDOFAttributeConstants::LowerLimit, ::Nominal, or ::UpperLimit.</param><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><returns>A System::Double representing the specified ScaleYattribute.</returns><summary>Get a particular attribute (LowerLimit, Nominal, or UpperLimit) of the ScaleY degree of freedom (DOF). Use the selector argument to specify which attribute.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SetDOFScaleY(Cognex.VisionPro.OCVMax.CogOCVMaxDOFAttributeConstants,System.Double)"><param name="selector">The desired attribute. May be one of: CogOCVMaxDOFAttributeConstants::LowerLimit, ::Nominal, or ::UpperLimit.</param><param name="dNewVal">The new attribute value. Note that ScaleY Overlap must be greater than or equal to one. Note that ScaleY LowerLimit, Nominal, and UpperLimit must all be greater than zero.</param><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set ScaleY Overlap to a value less than one.</exception><summary>Set a particular attribute (LowerLimit, Nominal, or UpperLimit) of the ScaleY degree of freedom (DOF). Use the selector argument to specify which attribute.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.GetDOFShear(Cognex.VisionPro.OCVMax.CogOCVMaxDOFAttributeConstants)"><param name="selector">The desired attribute. May be one of: CogOCVMaxDOFAttributeConstants::LowerLimit, ::Nominal, or ::UpperLimit</param><returns>A System::Double representing the specified Shear attribute in radians.</returns><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><summary>Get a particular attribute (LowerLimit, Nominal, or UpperLimit) of the Shear degree of freedom (DOF). Use the selector argument to specify which attribute. The units of all Shear attributes are radians.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SetDOFShear(Cognex.VisionPro.OCVMax.CogOCVMaxDOFAttributeConstants,System.Double)"><param name="selector">The desired attribute. May be one of: CogOCVMaxDOFAttributeConstants::LowerLimit, ::Nominal, or ::UpperLimit.</param><param name="dNewVal">The new attribute value, in radians.</param><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set Shear Overlap to a negative value.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><summary>Set a particular attribute (LowerLimit, Nominal, or UpperLimit) of the Shear degree of freedom (DOF). Use the selector argument to specify which attribute. The units of all Shear attributes are radians.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Untrain"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when the pattern object is modified.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><summary>Discards any trained data.</summary><remarks><para><see cref="P:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Trained" /> is set to False after this
				method is invoked.
				This method has no effect is <see cref="P:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Trained" /> is False.
			</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Train"><exception cref="T:Cognex.VisionPro.Exceptions.CogSecurityViolationException">If licensing for this operator cannot be confirmed.</exception><exception cref="T:Cognex.VisionPro.Exceptions.CogTimeoutExpiredException">If TrainTimeoutEnabled is true and the operator does not complete training within TrainTimeout milliseconds, this exception is generated. Note that this exception will also be generated if training is cancelled via the TrainProgress event.</exception><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.TrainProgress">Fires periodically during training to report training progress and to facilitate optional cancellation of training.</event><summary>Trains the current arrangement.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when the pattern object is modified.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If an internal error occurs during training.</exception><remarks>
			You must train this pattern before you can call 
			<see cref="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Execute(Cognex.VisionPro.CogImage8Grey,Cognex.VisionPro.ICogRegion,Cognex.VisionPro.OCVMax.CogOCVMaxRunParams)" />.
		</remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Tune(System.Collections.ArrayList)"><param name="paragraphIndices">n/a</param><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If this operator is not already trained.</exception><exception cref="T:Cognex.VisionPro.Exceptions.CogSecurityViolationException">If licensing for this operator cannot be confirmed.</exception><summary>Tunes only the paragraphs specified by the supplied array list of zero based paragraph indices.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when the pattern object is modified.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.CharacterChanged">Fires when a character is changed.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.TuneProgress">Fires periodically during tuning to report tuning progress and to facilitate optional cancellation of tuning.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ParagraphChanged">Fires when a paragraph is modified.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.LineChanged">Fires when a line is modified.</event><remarks><para>
				This optional step consists of iteratively training, running, and adjusting both 
				the arrangement (trained properties) as well as the run parameters.
			</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Tune(System.Int32[])"><param name="paragraphIndices">n/a</param><exception cref="T:Cognex.VisionPro.Exceptions.CogSecurityViolationException">If licensing for this operator cannot be confirmed.</exception><exception cref="T:System.InvalidOperationException">If the TuneImage property is NULL.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when the pattern object is modified.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ParagraphChanged">Fires when a paragraph is modified.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.TuneProgress">Fires periodically during tuning to report tuning progress and to facilitate optional cancellation of tuning.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.LineChanged">Fires when a line is modified.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.CharacterChanged">Fires when a character is changed.</event><summary>Tunes just the paragraphs specified by the supplied array of zero based paragraph indices.</summary><remarks><para>
				This optional step consists of iteratively training, running, and adjusting both 
				the arrangement (trained properties) as well as the run parameters.
			</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Tune(System.Int32)"><param name="paragraphIndex">n/a</param><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.CharacterChanged">Fires when a character is changed.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.LineChanged">Fires when a line is modified.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If an internal error occurs during training.</exception><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.TuneProgress">Fires periodically during tuning to report tuning progress and to facilitate optional cancellation of tuning.</event><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when the pattern object is modified.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ParagraphChanged">Fires when a paragraph is modified.</event><exception cref="T:Cognex.VisionPro.Exceptions.CogSecurityViolationException">If licensing for this operator cannot be confirmed.</exception><summary>Tune only the paragraph specified by the supplied zero based paragraph index.</summary><remarks><para>
				This optional step consists of iteratively training, running, and adjusting both 
				the arrangement (trained properties) as well as the run parameters.
			</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Tune(Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator)"><param name="pTarget">n/a</param><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.LineChanged">Fires when a line is modified.</event><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when the pattern object is modified.</event><exception cref="T:System.ArgumentNullException">If the supplied paragraph iterator argument is NULL.</exception><exception cref="T:System.InvalidOperationException">If this operator is not already trained.</exception><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ParagraphChanged">Fires when a paragraph is modified.</event><exception cref="T:Cognex.VisionPro.Exceptions.CogSecurityViolationException">If licensing for this operator cannot be confirmed.</exception><summary>Tunes only the paragraph specified by the paragraph iterator.</summary><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.TuneProgress">Fires periodically during tuning to report tuning progress and to facilitate optional cancellation of tuning.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.CharacterChanged">Fires when a character is changed.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><remarks><para>
				This optional step consists of iteratively training, running, and adjusting both 
				the arrangement (trained properties) as well as the run parameters.
			</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Tune"><summary>Tunes the entire arrangement.</summary><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ParagraphChanged">Fires when a paragraph is modified.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If an internal error occurs during training.</exception><exception cref="T:Cognex.VisionPro.Exceptions.CogTimeoutExpiredException">If TuneRunParams.TimeoutEnabled is true and the operator does not complete tuning within TuneRunParams.Timeout milliseconds, this exception is generated. Note that this exception will also be generated if tuning is cancelled via the TuneProgress event.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when the pattern object is modified.</event><exception cref="T:Cognex.VisionPro.Exceptions.CogSecurityViolationException">If licensing for this operator cannot be confirmed.</exception><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.LineChanged">Fires when a line is modified.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.TuneProgress">Fires periodically during tuning to report tuning progress and to facilitate optional cancellation of tuning.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.CharacterChanged">Fires when a character is changed.</event><remarks><para>
				This optional step consists of iteratively training, running, and adjusting both 
				the arrangement (trained properties) as well as the run parameters.
			</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.GetTunedRunParams"><returns>The run parameters generated by the most recent call to Tune. May be NULL.</returns><summary>Gets the tuned run parameters.</summary><remarks><para>The run parameters are the ones generated by the most recent
			call to <see cref="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Tune" />.
			If <see cref="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Tune" /> has not been called,
			this method may return NULL.
			</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Execute(Cognex.VisionPro.CogImage8Grey,Cognex.VisionPro.ICogRegion,Cognex.VisionPro.OCVMax.CogOCVMaxRunParams)"><param name="pImg">The image to inspect. May not be NULL.</param><param name="pRegion">An optional region. May be NULL. If supplied, this region is used to limit the amount of processing performed on the input image. This is done in conjunction with the run parameter RegionMode, which may be either PixelAlignedBoundingBox or AffineTransform. If RegionMode is AffineTransform, then this region must correspond to a CogRectangleAffine. If no Region is supplied, the entire input image is processed.</param><param name="pRunParams">The run parameters that specify how to perform this inspection.</param><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.ArgumentNullException">If the supplied CogOCVMaxRunParams argument is NULL.</exception><exception cref="T:System.InvalidOperationException">If an internal error occurs during training.</exception><exception cref="T:Cognex.VisionPro.Exceptions.CogSecurityViolationException">If licensing for this operator cannot be confirmed.</exception><summary>Performs an inspection upon the specified image with the specified run parameters.</summary><returns>The results of this inspection. Note that this may be a partial result if inspection has timed out. Be sure to check the CogOCVMaxResult.TimedOut property.</returns><remarks><para>
				The optional region limits the portion of the image to use. Note that the pattern must be trained before you can call this method.
			</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.RenderImage(Cognex.VisionPro.CogTransform2DLinear,System.Byte,System.Byte)"><param name="pPose">A CogTransform2DLinear that defines the mapping from arrangement space to selected space.</param><param name="foregroundGrey">The nominal greyscale value of the text.</param><param name="backgroundGrey">The nominal greyscale value of everything but the text.</param><returns>An image that contains a graphical rendering of the current arrangement. This image is sized to contain the entire rendering.</returns><summary>Creates an image that contains a graphical rendering of the entire arrangement.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.GetCustomization(Cognex.VisionPro.OCVMax.CogOCVMaxCustomizationTypeConstants)"><param name="type">A CogOCVMaxCustomizationTypeConstants that specifies the desired type of customization string. Options include KeySearch, ImageSearch, and OCVMaxTool</param><returns>The string that contains the customization information of the requested type.</returns><summary>Gets the customization string of the specified type.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SetCustomization(System.String,Cognex.VisionPro.OCVMax.CogOCVMaxCustomizationTypeConstants)"><param name="customization">A System::String containing the desired customization information.</param><param name="type">A CogOCVMaxCustomizationTypeConstants that specifies the desired type of customization. Options include KeySearch, ImageSearch, and OCVMaxTool.</param><returns>The new customization string for the specified type. If there has been no change, then "No change" is returned.</returns><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when the pattern object is modified.</event><exception cref="T:System.InvalidOperationException">If an internal error occurs.</exception><exception cref="T:System.ArgumentException">If the customization string format is not valid.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><summary>Sets the customization string for the specified customization type.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.SetCustomizationFromFile(System.String,Cognex.VisionPro.OCVMax.CogOCVMaxCustomizationTypeConstants)"><param name="filename">A System::String holding the name of the file containing the desired customization information.</param><param name="type">A CogOCVMaxCustomizationTypeConstants that specifies the desired type of customization. Options include KeySearch, ImageSearch, and OCVMaxTool.</param><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.ArgumentException">If the file cannot be opened or the customization string format is not valid.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when the pattern object is modified.</event><summary>Sets the customization string for the specified customization type from the specified file.</summary><exception cref="T:System.InvalidOperationException">If an internal error occurs.</exception><returns>The new customization string for the specified type.</returns></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator"><summary>This class provides easy access to character-level properties and methods of the CogOCVMaxPattern object. With this class you can navigate amongst all of the character positions within a single line within a single paragraph. You may NOT directly construct this object. Instead, use the CreateCharacterIterator method on either the containing line's iterator or on the top level CogOCVMaxPattern object. Also note that this class can not be persisted.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator.VerificationType"><exception cref="T:System.ArgumentOutOfRangeException">If this character iterator does not reference a valid character position.</exception><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.CharacterChanged">Fires when this property changes, provides more detailed information than the Changed event.</event><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><value>This read/write property of type CogOCVMaxVerificationTypeConstants may be one of Normal, AlwaysVerified, or Ignore.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><summary>Get or set the type of verification to be performed on the associated character position. Possible values are Normal, AlwaysVerified, and Ignore. Normal is standard OCV. In Normal mode a character may be judged Verified, or Confused, or Failed. In AlwaysVerified mode we score every key in the keyset associated with this character position and choose the highest scoring key, always judging the character as Verified. In Ignore mode we do no processing at all for the subject character. In Ignore mode the character is always judged Verified. Note that while this may be viewed as a train-time property, there is an analogous run-time property accessible via the CogOCVMaxRunParams::GetVerificationType(...) and CogOCVMaxRunParams::SetVerificationType(...) methods. While one would typically set the train-time and the run-time values to the same value, that is not always required. One may NOT set the train-time value (this value) to Ignore and then set the run-time value to anything other than Ignore; doing so will cause a run-time error.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator.IsInvalid"><value>This read-only property is of type System::Boolean.</value><exception cref="T:System.InvalidOperationException">If the associated CogOCVMaxPattern object does not recognize this iterator.</exception><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><summary>Whether or not this iterator is NOT positioned at a valid character. If true, attempting to access character-level properties or methods will produce an error.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator.IsEnd"><summary>Whether or not this iterator is positioned past the last character in the containing line.</summary><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If the associated CogOCVMaxPattern object does not recognize this iterator.</exception><value>This read-only property is of type System::Boolean.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator.IsFirst"><exception cref="T:System.InvalidOperationException">If the associated CogOCVMaxPattern object does not recognize this iterator.</exception><value>This read-only property is of type System::Boolean.</value><summary>Whether or not this character position is the initial character position within the containing line.</summary><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator.Position"><value>This read-only property is of type System::Int32.</value><exception cref="T:System.InvalidOperationException">If the associated CogOCVMaxPattern object does not recognize this iterator.</exception><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><summary>Indicates the relative position of this character within the containing line. Numbering is zero based, so a value of zero indicates that this is the initial character of the containing line.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator.LinePosition"><exception cref="T:System.InvalidOperationException">If the associated CogOCVMaxPattern object does not recognize this iterator.</exception><value>This read-only property is of type System::Int32.</value><summary>Indicates the relative position of the containing line within the containing paragraph. Numbering is zero based, so a value of zero indicates that this character resides in the initial line of the containing paragraph.</summary><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator.ParagraphPosition"><value>This read-only property is of type System::Int32.</value><summary>Indicates the relative position of the containing paragraph within the CogOCVMaxPattern object. Numbering is zero based, so a value of zero indicates that this character resides in the initial paragraph of the CogOCVMaxPattern object.</summary><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If the associated CogOCVMaxPattern object does not recognize this iterator.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator.MoveToNext"><exception cref="T:System.InvalidOperationException">If this character iterator cannot be found.</exception><summary>Move the character iterator to the next character position within the containing line. If the iterator is already at the end position before this call, MoveToNext generates an exception. You may wish to check the IsEnd property before calling MoveToNext in order to avoid errors.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator.MoveToPrevious"><exception cref="T:System.InvalidOperationException">If this character iterator cannot be found.</exception><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><summary>Move the character iterator to the previous character position within the containing line. If the iterator is already at the initial position before this call, MoveToPrevious generates an exception. You may wish to check the IsFirst property before calling MoveToPrevious in order to avoid errors.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator.MoveToPosition(System.Int32)"><param name="Position">A System::Int32 index into the enclosing line.</param><exception cref="T:System.ArgumentOutOfRangeException">If the argument is less than zero or greater than the number of characters in the enclosing line.</exception><exception cref="T:System.InvalidOperationException">If this character iterator cannot be found.</exception><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><summary>Move the character iterator to the specified position within the containing line. If the argument is zero, move to the first character position in the line. If the argument is -1, move to the end character position in the line. An exception is generated if the argument is not valid.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator.CreateLineIterator"><returns>A CogOCVMaxLineIterator corresponding to the containing line.</returns><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If this character iterator cannot be found.</exception><summary>Return a newly created line iterator corresponding to the containing line. This provides access to this character iterator's parent.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator.Copy"><returns>A CogOCVMaxCharacterIterator with the same character position, line position, and paragraph position as this character iterator.</returns><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If this character iterator cannot be found.</exception><summary>Return a newly created character iterator that is functionally identical to this one - it will have the same character position within the same enclosing line within the same enclosing paragraph.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator.Copy(System.Int32)"><param name="PositionOffset">A System::Int32 that is added to the character position index of this character iterator to yield a new character position index within the enclosing line. If this computation results in a character position index that is not valid, an exception is generated.</param><exception cref="T:System.ArgumentOutOfRangeException">If the character position index computed from the supplied argument is less than zero or greater than the number of characters in the enclosing line.</exception><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><returns>A CogOCVMaxCharacterIterator corresponding to the specified character position with the containing line within the containing paragraph.</returns><summary>Return a newly created character iterator corresponding to the specified character position within the same enclosing line and the same enclosing paragraph as this character iterator. The argument is a positional offset from the current character position, so a value of zero will yield a new character iterator that is functionally identical to this one.</summary><exception cref="T:System.InvalidOperationException">If this character iterator cannot be found.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator.GetKeysetCharacters"><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><returns>A System::String in which each character corresponds to a member of the (train time) key set for this position. That is, any one of the characters in the returned string may be observed at this position. Note that this assumes that the character keys in the font correspond to Unicode code point values.</returns><summary>Get a String corresponding to the (train time) key set for the character position specified by this character iterator. Each individual character in this string may occur at this position.</summary><exception cref="T:System.InvalidOperationException">If this character iterator cannot be found.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator.GetKeysetCharacterKeys"><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If this character iterator cannot be found.</exception><summary>Get an array of System::Int32 corresponding to the (train time) key set for the character position specified by this character iterator. Each element of this array is the key value of a character that may occur at this position.</summary><returns>An array of System::Int32. The size of this array matches the number of different possible character that may occur at this position.</returns></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator.SetKeyset(System.Int32[])"><param name="NewValue">An array of System::Int32. Each element of this array is the key value of a character that may occur at this position.</param><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><summary>Set the (train time) key set for the character position specified by this character iterator. The key values are passed in as an array of System::Int32 in which each element is the key value of a character that may occur at this position.</summary><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.CharacterChanged">Fires when this property changes, provides more detailed information than the Changed event.</event><exception cref="T:System.InvalidOperationException">If this character iterator cannot be found.</exception><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator.SetKeyset(System.String)"><param name="NewValue">A System::String in which each character corresponds to a member of the (train time) key set for this position. Note that this assumes that the character keys in the font correspond to Unicode code point values.</param><summary>Set the (train time) key set for the character position specified by this character iterator. The key values are passed in as a System::String in which each character corresponds to a member of the key set for this position. Note that this assumes that the character keys in the font correspond to Unicode code point values.</summary><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.InvalidOperationException">If this character iterator cannot be found.</exception><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.CharacterChanged">Fires when this property changes, provides more detailed information than the Changed event.</event></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator.GetDisplayCharacter"><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><returns>A System::Char. The character key identified as the display value for this character position is converted to a System::Char based upon the assumption that the character keys in the font correspond to Unicode code point values.</returns><exception cref="T:System.InvalidOperationException">If this character iterator cannot be found.</exception><summary>Get the character that should be displayed on a graphical user interface for the position specified by this character iterator. This is useful for character positions for which the (train time) key set has more than one value. Note that this assumes that the character keys in the font correspond to Unicode code point values.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator.GetDisplayCharacterKey"><exception cref="T:System.InvalidOperationException">If this character iterator cannot be found.</exception><summary>Get the key of the character that should be displayed on a graphical user interface for the position specified by this character iterator. This is useful for character positions for which the (train time) key set has more than one value.</summary><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><returns>A System::Int32. The character key identified as the display value for this character position.</returns></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator.SetDisplay(System.Int32)"><param name="NewValue">A System::Int32. This is the key of the character that should be displayed for this character position.</param><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If this character iterator cannot be found.</exception><summary>Set the key of the character that should be displayed on a graphical user interface for the position specified by this character iterator. This is useful for character positions for which the (train time) key set has more than one value.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.CharacterChanged">Fires when this property changes, provides more detailed information than the Changed event.</event></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator.SetDisplay(System.Char)"><param name="NewValue">A System::Char. This is the character that should be displayed for this character position. Note that this assumes that the character keys in the font correspond to Unicode code point values.</param><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.CharacterChanged">Fires when this property changes, provides more detailed information than the Changed event.</event><exception cref="T:System.InvalidOperationException">If this character iterator cannot be found.</exception><summary>Set the character that should be displayed on a graphical user interface for the position specified by this character iterator. This is useful for character positions for which the (train time) key set has more than one value. Note that this assumes that the character keys in the font correspond to Unicode code point values.</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxLineIterator"><summary>This class provides easy access to line-level properties and methods of the CogOCVMaxPattern object. With this class you can navigate amongst all of the lines within a single paragraph. You may NOT directly construct this object. Instead, use the CreateLineIterator method on either the containing paragraph's iterator or on the top level CogOCVMaxPattern object. Also note that this class can not be persistedo.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxLineIterator.CharacterCount"><exception cref="T:System.InvalidOperationException">If the associated CogOCVMaxPattern object does not recognize this iterator.</exception><exception cref="T:System.ArgumentOutOfRangeException">If this line iterator does not currently reference a valid line.</exception><summary>The number of characters currently contained in the line referenced by this iterator.</summary><value>This read-only property is of type System::Int32.</value><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxLineIterator.IsInvalid"><exception cref="T:System.InvalidOperationException">If the associated CogOCVMaxPattern object does not recognize this iterator.</exception><value>This read-only property is of type System::Boolean.</value><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><summary>Whether or not this iterator is NOT positioned at a valid line. If true, attempting to access line-level properties or methods will produce an error.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxLineIterator.IsEnd"><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If the associated CogOCVMaxPattern object does not recognize this iterator.</exception><value>This read-only property is of type System::Boolean.</value><summary>Whether or not this iterator is positioned past the last line in the containing paragraph.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxLineIterator.IsFirst"><value>This read-only property is of type System::Boolean.</value><summary>Whether or not this line position is the initial line position within the containing paragraph.</summary><exception cref="T:System.InvalidOperationException">If the associated CogOCVMaxPattern object does not recognize this iterator.</exception><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxLineIterator.Position"><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><value>This read-only property is of type System::Int32.</value><exception cref="T:System.InvalidOperationException">If the associated CogOCVMaxPattern object does not recognize this iterator.</exception><summary>Indicates the relative position of this line within the containing paragraph. Numbering is zero based, so a value of zero indicates that this is the initial line of the containing paragraph.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxLineIterator.ParagraphPosition"><exception cref="T:System.InvalidOperationException">If the associated CogOCVMaxPattern object does not recognize this iterator.</exception><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><value>This read-only property is of type System::Int32.</value><summary>Indicates the relative position of the containing paragraph within the CogOCVMaxPattern object. Numbering is zero based, so a value of zero indicates that this line resides in the initial paragraph of the CogOCVMaxPattern object.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxLineIterator.MoveToNext"><exception cref="T:System.InvalidOperationException">If attempting to increment this line iterator past End.</exception><summary>Move the line iterator to the next line position within the containing paragraph. If the iterator is already at the end position before this call, MoveToNext generates an exception. You may wish to check the IsEnd property before calling MoveToNext in order to avoid errors.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxLineIterator.MoveToPrevious"><exception cref="T:System.InvalidOperationException">If attempting to decrement this line iterator past First.</exception><summary>Move the line iterator to the previous line position within the containing paragraph. If the iterator is already at the initial position before this call, MoveToPrevious generates an exception. You may wish to check the IsFirst property before calling MoveToPrevious in order to avoid errors.</summary><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxLineIterator.MoveToPosition(System.Int32)"><param name="Position">A System::Int32 index into the enclosing paragraph.</param><exception cref="T:System.InvalidOperationException">If this line iterator cannot be found.</exception><summary>Move the line iterator to the specified position within the containing paragraph. If the argument is zero, move to the first line position in the paragraph. If the argument is -1, move to the end line position in the paragraph. An exception is generated if the argument is not valid.</summary><exception cref="T:System.ArgumentOutOfRangeException">If the argument is less than zero or greater than the number of lines in the enclosing paragraph.</exception><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxLineIterator.CreateCharacterIterator"><exception cref="T:System.InvalidOperationException">If this line iterator cannot be found.</exception><returns>A CogOCVMaxCharacter iterator corresponding to the initial character position in this line.</returns><summary>Return a newly created character iterator corresponding to the initial character position of this line.</summary><remarks>It is legal to call this method on a valid line iterator that corresponds to a line that contains no characters. The IsInvalid, IsEnd, and IsFirst properties of the resulting iterator will all be True. Attempts to access any other property on this iterator will cause an exception to be thrown. This iterator may be supplied as an argument in a subsequent call to AddText.</remarks><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxLineIterator.CreateParagraphIterator"><summary>Return a newly created paragraph iterator corresponding to the containing paragraph. This provides access to this line iterator's parent.</summary><returns>A CogOCVMaxParagraphIterator corresponding to the containing paragraph.</returns><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If this line iterator cannot be found.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxLineIterator.Copy"><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If this line iterator cannot be found.</exception><summary>Return a newly created line iterator that is functionally identical to this one - it will have the same line position within the same enclosing paragraph.</summary><returns>A CogOCVMaxLineIterator with the same line position and paragraph position as this line iterator.</returns></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxLineIterator.Copy(System.Int32)"><param name="PositionOffset">A System::Int32 that is added to the line position index of this line iterator to yield a new line position index within the enclosing paragraph. If this computation results in a line position index that is not valid, an exception is generated.</param><exception cref="T:System.InvalidOperationException">If this line iterator cannot be found.</exception><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><returns>A CogOCVMaxLineIterator corresponding to the specified line position within the containing paragraph.</returns><summary>Return a newly created line iterator corresponding to the specified line position within the same enclosing paragraph as this line iterator. The argument is a positional offset from the current line position, so a value of zero will yield a new line iterator that is functionally identical to this one.</summary><exception cref="T:System.ArgumentOutOfRangeException">If the line position index computed from the supplied argument is less than zero or greater than the number of lines in the enclosing paragraph.</exception></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator"><summary>This class provides easy access to paragraph-level properties and methods of the CogOCVMaxPattern object. With this class you can navigate amongst all of the paragraphs within the arrangement. You may NOT directly construct this object. Instead, use the CreateParagraphIterator method on the top level CogOCVMaxPattern object. Also note that this class can not be persisted.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.ConfusionThreshold"><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If this paragraph iterator does not currently reference a valid paragraph.</exception><value>This read/write property of type System::Double  must be within the range of zero to one inclusive.</value><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set this to a value less than zero or greater than one.</exception><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ParagraphChanged">Fires when this property changes, provides more detailed information than the Changed event.</event><summary>Get or set the confusion threshold for this paragraph. Every paragraph builds a confusion matrix when it is trained. This two dimensional array has one dimension with as many elements as there are unique keys to be searched for within this paragraph - we will call these the search keys. The other dimension has as many elements as there are in the (current) alphabet - we will call these the alphabet keys. For any combination of search key and alphabet key there is an associated confusion value. That value indicates how confusable the two keys are, with values near one being very confusable (e.g. '5' and 'S') and values near zero being not confusable (e.g. '5' and '1'). The ConfusionThreshold property specifies the value below which other keys are not considered by the operator for confusion purposes. So, with a ConfusionThreshold of zero, all keys will be tried.</summary><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Changed">Fires when this property changes.</event></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.Polarity"><value>This read/write property of type CogOCVMaxPolarityConstants  may be one of DarkOnLight, LightOnDark, or Unknown.</value><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ParagraphChanged">Fires when this property changes, provides more detailed information than the Changed event.</event><summary>Get or set the polarity for this paragraph.</summary><exception cref="T:System.InvalidOperationException">If the associated CogOCVMaxPattern object does not recognize this iterator.</exception><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Changed">Fires when this property changes.</event></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.TuneParams"><exception cref="T:System.ArgumentNullException">If you attempt to set this property to NULL.</exception><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Changed">Fires when this property changes.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ParagraphChanged">Fires when this property changes, provides more detailed information than the Changed event.</event><exception cref="T:System.InvalidOperationException">If this paragraph iterator does not currently reference a valid paragraph.</exception><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><summary>Get or set the tune parameters for this paragraph.</summary><value>This read/write property of type CogOCVMaxTuneParams may NOT be NULL.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.FontRenderParams"><summary>Get or set the font render parameters for this paragraph.</summary><exception cref="T:System.ArgumentNullException">If you attempt to set this property to NULL.</exception><exception cref="T:System.InvalidOperationException">If the associated CogOCVMaxPattern object does not recognize this iterator.</exception><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><value>This read/write property of type CogOCVMaxFontRenderParams may NOT be NULL.</value><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Changed">Fires when this property changes.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ParagraphChanged">Fires when this property changes, provides more detailed information than the Changed event.</event></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.Pose"><exception cref="T:System.InvalidOperationException">If the associated CogOCVMaxPattern object does not recognize this iterator.</exception><value>This read/write property of type CogTransform2DLinear may NOT be NULL.</value><exception cref="T:System.ArgumentNullException">If you attempt to set this property to NULL.</exception><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><summary>Get or set the pose for this paragraph.</summary><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Changed">Fires when this property changes.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ParagraphChanged">Fires when this property changes, provides more detailed information than the Changed event.</event></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.Origin"><exception cref="T:System.ArgumentNullException">If you attempt to set this property to NULL.</exception><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><value>This read/write property of type CogTransform2DLinear may NOT be NULL.</value><exception cref="T:System.InvalidOperationException">If this paragraph iterator does not currently reference a valid paragraph.</exception><summary>Get or set the origin for this paragraph.</summary><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Changed">Fires when this property changes.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ParagraphChanged">Fires when this property changes, provides more detailed information than the Changed event.</event></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.Font"><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><summary>Get or set the font for this paragraph.</summary><exception cref="T:System.InvalidOperationException">If the associated CogOCVMaxPattern object does not recognize this iterator.</exception><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Changed">Fires when this property changes.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ParagraphChanged">Fires when this property changes, provides more detailed information than the Changed event.</event><value>This read/write property of type CogOCVMaxFont may be NULL.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.LineCount"><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><value>This read-only property is of type System::Int32.</value><exception cref="T:System.InvalidOperationException">If the associated CogOCVMaxPattern object does not recognize this iterator.</exception><summary>The number of lines currently contained in the paragraph referenced by this iterator.</summary><exception cref="T:System.ArgumentOutOfRangeException">If this paragraph iterator does not currently reference a valid paragraph.</exception></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.IsInvalid"><exception cref="T:System.InvalidOperationException">If the associated CogOCVMaxPattern object does not recognize this iterator.</exception><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><value>This read-only property is of type System::Boolean.</value><summary>Whether or not this iterator is NOT positioned at a valid paragraph. If true, attempting to access paragraph-level properties or methods will produce an error.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.IsEnd"><exception cref="T:System.InvalidOperationException">If the associated CogOCVMaxPattern object does not recognize this iterator.</exception><summary>Whether or not this iterator is positioned past the last paragraph in the containing CogOCVMaxPattern object.</summary><value>This read-only property is of type System::Boolean.</value><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.IsFirst"><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If the associated CogOCVMaxPattern object does not recognize this iterator.</exception><value>This read-only property is of type System::Boolean.</value><summary>Whether or not this paragraph position is the initial paragraph position within the containing CogOCVMaxPattern object.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.Position"><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If the associated CogOCVMaxPattern object does not recognize this iterator.</exception><value>This read-only property is of type System::Int32.</value><summary>Indicates the relative position of this paragraph within the CogOCVMaxPattern object. Numbering is zero based, so a value of zero indicates that this paragraph is the initial paragraph of the CogOCVMaxPattern object.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.MoveToNext"><exception cref="T:System.InvalidOperationException">If attempting to increment this paragraph iterator past End.</exception><summary>Move the paragraph iterator to the next paragraph position within the containing CogOCVMaxPattern object. If the iterator is already at the end position before this call, MoveToNext generates an exception. You may wish to check the IsEnd property before calling MoveToNext in order to avoid errors.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.MoveToPrevious"><exception cref="T:System.InvalidOperationException">If this paragraph iterator cannot be found.</exception><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><summary>Move the paragraph iterator to the previous paragraph position within the containing CogOCVMaxPattern object. If the iterator is already at the initial position before this call, MoveToPrevious generates an exception. You may wish to check the IsFirst property before calling MoveToPrevious in order to avoid errors.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.MoveToPosition(System.Int32)"><param name="Position">A System::Int32 index into the enclosing CogOCVMaxPattern object.</param><exception cref="T:System.InvalidOperationException">If this paragraph iterator cannot be found.</exception><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><summary>Move the paragraph iterator to the specified position within the containing CogOCVMaxPattern object. If the argument is zero, move to the first paragraph position in the CogOCVMaxPattern object. If the argument is -1, move to the end paragraph position in the CogOCVMaxPattern object. An exception is generated if the argument is not valid.</summary><exception cref="T:System.ArgumentOutOfRangeException">If the argument is less than -1 or greater than the number of paragraphs in the enclosing CogOCVMaxPattern object.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.CreateLineIterator"><returns>A CogOCVMaxLine iterator corresponding to the initial line position in this paragraph.</returns><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If this paragraph iterator cannot be found.</exception><remarks>It is legal to call this method on a valid paragraph iterator that corresponds to a paragraph that contains no lines. The IsInvalid, IsEnd, and IsFirst properties of the resulting iterator will all be True. Attempts to access any other property on this iterator will cause an exception to be thrown. This iterator may be supplied as an argument in a subsequent call to AddText.</remarks><summary>Return a newly created line iterator corresponding to the initial line position of this paragraph.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.Copy"><summary>Return a newly created paragraph iterator that is functionally identical to this one - it will have the same paragraph position within the same enclosing CogOCVMaxPattern object.</summary><exception cref="T:System.InvalidOperationException">If this paragraph iterator cannot be found.</exception><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><returns>A CogOCVMaxParagraphIterator with the same paragraph position as this paragraph iterator.</returns></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.Copy(System.Int32)"><param name="PositionOffset">A System::Int32 that is added to the paragraph position index of this paragraph iterator to yield a new paragraph position index within the enclosing CogOCVMaxPattern object. If this computation results in a paragraph position index that is not valid, an exception is generated.</param><exception cref="T:System.ArgumentOutOfRangeException">If the paragraph position index computed from the supplied argument is less than zero or greater than the number of paragraphs in the enclosing CogOCVMaxPattern object.</exception><exception cref="T:System.InvalidOperationException">If this paragraph iterator cannot be found.</exception><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><returns>A CogOCVMaxParagraphIterator corresponding to the specified paragraph position within the containing CogOCVMaxPattern object.</returns><summary>Return a newly created paragraph iterator corresponding to the specified paragraph position within the same enclosing CogOCVMaxPattern object as this paragraph iterator. The argument is a positional offset from the current paragraph position, so a value of zero will yield a new paragraph iterator that is functionally identical to this one.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.GetAlphabetCharacters"><exception cref="T:System.InvalidOperationException">If this paragraph iterator cannot be found.</exception><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><returns>A System::String in which each character corresponds to one of the alphabet characters for this paragraph. Note that this assumes that the character keys in the associated font correspond to Unicode code point values.</returns><summary>Provide a list of every character within the current font that may, either correctly or incorrectly, be observed within this paragraph. Confusion will be computed for every unique searched character versus this set of characters. Note that if this list is empty, then EVERY character in the font will be used.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.GetAlphabetCharacterKeys"><returns>A System::Array of System::Int32 corresponding to each alphabet character key defined for this paragraph.</returns><exception cref="T:System.InvalidOperationException">If this paragraph iterator cannot be found.</exception><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><summary>Provide a list of every character key within the current font that may, either correctly or incorrectly, be observed within this paragraph. Confusion will be computed for every unique searched character versus this set of character keys. Note that if this list is empty, then EVERY character in the font will be used.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.SetAlphabet(System.Int32[])"><param name="NewValue">A System::Array of System::Int32. These are the desired character keys.</param><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If the associated CogOCVMaxPattern object does not recognize this iterator.</exception><summary>Set the list of every character within the current font that may, either correctly or incorrectly, be observed within this paragraph. Specifically, set the list to correspond to those characters whose keys are in the supplied array of System::Int32. If this array has no elements, then the resulting empty alphabet list will be interpreted to mean use all available characters.</summary><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Changed">Fires when this property changes.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ParagraphChanged">Fires when this property changes, provides more detailed information than the Changed event.</event></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.SetAlphabet(System.String)"><param name="NewValue">A System::String whose individual characters constitute the desired alphabet.</param><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Changed">Fires when this property changes.</event><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If this paragraph iterator does not currently reference a valid paragraph.</exception><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ParagraphChanged">Fires when this property changes, provides more detailed information than the Changed event.</event><summary>Set the list of every character within the current font that may, either correctly or incorrectly, be observed within this paragraph. Specifically, set the list to correspond to those characters in the supplied string argument. If the string argument is an empty string, the resulting empty alphabet list will be interpreted as meaning use all available characters. This method assumes that the character keys in the associated font are Unicode code point values.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.SetAlphabet(Cognex.VisionPro.OCVMax.CogOCVMaxCharacterTypeConstants)"><param name="NewValue">A bitwise OR of CogOCVMaxCharacterTypeConstants. This may be any combination of DecimalDigitNumber, LowercaseLetter, or UppercaseLetter; or this may be All; or this may be None.</param><exception cref="T:System.InvalidOperationException">If this paragraph does not currently reference a valid font.</exception><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ParagraphChanged">Fires when this property changes, provides more detailed information than the Changed event.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Changed">Fires when this property changes.</event><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><summary>Set the list of every character within the current font that may, either correctly or incorrectly, be observed within this paragraph. Specifically, set the list to correspond to those characters in the current font that match the categories specified by input bitfield. Categories include DecimalDigitNumber, LowercaseLetter, UppercaseLetter, All, and None. Note that the empty alphabet list created via the None setting will be interpreted as meaning use all available characters. This method assumes that the character keys in the associated font are Unicode code point values.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.SetAlphabet"><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><summary>Set the list of every character within the current font that may, either correctly or incorrectly, be observed within this paragraph to be EVERY character available in the font. Confusion will be computed for every unique searched character versus this set of characters.</summary><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Changed">Fires when this property changes.</event><event cref="E:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.ParagraphChanged">Fires when this property changes, provides more detailed information than the Changed event.</event><exception cref="T:System.InvalidOperationException">If the associated CogOCVMaxPattern object does not recognize this iterator.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.GetConfusionSearchCharacters"><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If this paragraph iterator cannot be found.</exception><summary>Get the confusion search characters. This is the set of unique characters that make up the text in this paragraph - the characters for which we are searching. These characters form one dimension of the confusion matrix for this paragraph. Note that this method assumes that the character keys in the associated font correspond to Unicode code point values.</summary><returns>A System::String in which each character corresponds to one of the confusion search characters for this paragraph. Note that this assumes that the character keys in the associated font correspond to Unicode code point values.</returns></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.GetConfusionSearchCharacterKeys"><returns>A System::Array of System::Int32 in which each element corresponds to one of the confusion search character keys for this paragraph.</returns><exception cref="T:System.InvalidOperationException">If this paragraph iterator cannot be found.</exception><summary>Get the confusion search character keys. This is the set of unique character keys that make up the text in this paragraph - the character keys for which we are searching. These character keys form one dimension of the confusion matrix for this paragraph.</summary><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.GetConfusionAlphabetCharacters"><returns>A System::String in which each character corresponds to one of the confusion alphabet characters for this paragraph. Note that this assumes that the character keys in the associated font correspond to Unicode code point values.</returns><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><exception cref="T:System.InvalidOperationException">If this paragraph iterator cannot be found.</exception><summary>Get the confusion alphabet characters. This is the same as the alphabet for this paragraph. These characters form one dimension of the confusion matrix for this paragraph. Note that this method assumes that the character keys in the associated font correspond to Unicode code point values.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.GetConfusionAlphabetCharacterKeys"><summary>Get the confusion alphabet character keys. This is the same as the alphabet keys for this paragraph. These character keys form one dimension of the confusion matrix for this paragraph.</summary><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><returns>A System::Array of System::Int32 in which each element corresponds to one of the confusion alphabet character keys for this paragraph.</returns><exception cref="T:System.InvalidOperationException">If this paragraph iterator cannot be found.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.GetConfusion(System.Int32,System.Int32)"><param name="searchKey">The search character key of interest. This character key must be one of the character keys in the text of this paragraph.</param><param name="alphabetKey">The alphabet character key of interest. This character key must be one of the alphabet character keys for this paragraph.</param><summary>Get the computed confusion between the specified search character key and the specified alphabet character key.</summary><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><returns>A System::Double in the range from zero to one. This is the computed confusion value between the specified search character key and the specified alphabet character key. This value will be negative if the operator did not compute the requested confusion score. A value near one means very confusable (e.g. '5' and 'S') while a value near zero means not confusable (e.g. '5' and '1').</returns><exception cref="T:System.InvalidOperationException">If this paragraph iterator cannot be found.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.GetConfusion(System.Char,System.Char)"><param name="searchCharacter">The search character of interest. This character must be one of the characters in the text of this paragraph. This assumes that the character keys in the associated font correspond to Unicode code point values.</param><param name="alphabetCharacter">The alphabet character of interest. This character must be one of the alphabet characters for this paragraph. This assumes that the character keys in the associated font correspond to Unicode code point values.</param><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><summary>Get the computed confusion between the specified search character and the specified alphabet character. This method assumes that the character keys in the associated font correspond to Unicode code point values.</summary><exception cref="T:System.InvalidOperationException">If the CogOCVMaxPattern object is not yet trained.</exception><returns>A System::Double in the range from zero to one. This is the computed confusion value between the specified search character and the specified alphabet character. This value will be negative if the operator did not compute the requested confusion score. A value near one means very confusable (e.g. '5' and 'S') while a value near zero means not confusable (e.g. '5' and '1').</returns></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.AreConfusable(System.Int32,System.Int32)"><param name="searchKey">The search character key of interest. This character key must be one of the character keys in the text of this paragraph.</param><param name="alphabetKey">The alphabet character key of interest. This character key must be one of the alphabet character keys for this paragraph.</param><exception cref="T:System.InvalidOperationException">If this paragraph iterator cannot be found.</exception><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><summary>If the computed confusion score between the specified search character key and the specified alphabet character key is below the confusion threshold for this paragraph, then return false (i.e. this pair is NOT considered confusable). Otherwise return true (i.e. this pair IS considered confusable).</summary><returns>A System::Boolean, true if the characters are confusable and false if the characters are not confusable.</returns></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.AreConfusable(System.Char,System.Char)"><param name="searchCharacter">The search character of interest. This character must be one of the characters in the text of this paragraph. This assumes that the character keys in the associated font correspond to Unicode code point values.</param><param name="alphabetCharacter">The alphabet character of interest. This character must be one of the alphabet characters for this paragraph. This assumes that the character keys in the associated font correspond to Unicode code point values.</param><exception cref="T:System.InvalidOperationException">If the CogOCVMaxPattern object is not yet trained.</exception><returns>A System::Boolean, true if the characters are confusable and false if the characters are not confusable.</returns><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><summary>If the computed confusion score between the specified search character and the specified alphabet character is below the confusion threshold for this paragraph, then return false (i.e. this pair is NOT considered confusable). Otherwise return true (i.e. this pair IS considered confusable). This method assumes that the character keys in the associated font correspond to Unicode code point values.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.GetNextLineOrigin"><returns>A CogTransform2DLinear that specifies the origin of the next line in paragraph space.</returns><summary>Get the expected location, in paragraph coordinates, of the line after the last line in this paragraph. That is, if you were to append a line to this paragraph, this is where it would go.</summary><exception cref="T:System.InvalidOperationException">If this paragraph iterator cannot be found.</exception><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator.GetNextParagraphOrigin"><exception cref="T:System.InvalidOperationException">If this paragraph iterator cannot be found.</exception><summary>Get the expected location, in paragraph coordinates, of the next paragraph after this one. This will be located so that the first line in each paragraph is aligned (vertically) and the second paragraph will not overwrite the first (that is, the second paragraph will be positioned horizontally beyond the end of the longest line in the first paragraph.</summary><exception cref="T:System.ObjectDisposedException">If the associated CogOCVMaxPattern object has already been disposed.</exception><returns>A CogTransform2DLinear that specifies the origin of the next paragraph in paragraph space.</returns></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams"><summary>This class encapsulates all of the parameters used to run the arrangement and/or character searches.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.SfAcceptThreshold"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by AcceptThreshold may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.SfContrastThreshold"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ContrastThreshold may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.SfUncertaintyX"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by UncertaintyX may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.SfUncertaintyY"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by UncertaintyY may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.SfXYOverlap"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by XYOverlap may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.SfDeformationRate"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by DeformationRate may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.SfRefinement"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Refinement may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.SfDOFEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by DOFEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.SfGetDOFRotation"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetDOFRotation may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.SfGetDOFScale"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetDOFScale may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.SfGetDOFScaleX"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetDOFScaleX may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.SfGetDOFScaleY"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetDOFScaleY may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.SfGetDOFShear"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetDOFShear may have changed.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.DOFEnable"><value>This read/write property is either 0 (no DOFs enabled) or a bitwise OR of the enumeration values CogOCVMaxDOFConstants::Rotation, ::Scale, ::ScaleX, ::ScaleY, and ::Shear.</value><summary>The degrees of freedom (DOFs) to be searched. There are five degrees of freedom: Rotation, (uniform) Scale, ScaleX, ScaleY, and Shear. Any combination of these (including None) may be searched. If a particular DOF is enabled, the search will be performed between that DOF's LowerLimit and UpperLimit values, otherwise the search will be performed with that DOF's Nominal value.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxSearchParams object has already been disposed.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.Refinement"><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxSearchParams object has already been disposed.</exception><summary>The amount of refinement done on the transform that represents the deformation for a particular character. If None is selected, there may be small amounts of error in the deformation. If Coarse is selected, the transform will be refined to the limit of accuracy of the coarse grain limit used. If Stretch is selected, the transform will also be refined to resolve high-level inaccuracies (extreme warping of a character) that can occur in some applications. If Fine is selected, the transform will additionally be refined to the limit of accuracy of the fine grain limit used, which is probably more than is necessary for OCV in most cases, unless the character size in the image is very small. Less refinement means the tool runs faster.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><value>This read/write property of type CogOCVMaxRefinementConstants may be one of: None (least refinement), Coarse, Stretch, or Fine (most refinement).</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.DeformationRate"><summary>The maximum deformation rate to be accommodated in flexible alignment of characters. Note that larger values may increase running time, and will make it easier for the tool to become confused between characters with similar appearance. For example, a U could be flexed into a V, or a 5 into an S, when allowing a sufficiently high deformation rate. Set this to the smallest value that works for your application's particular deformation. A value of 0 still allows some deformation.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set this to a value less than zero or more than one.</exception><value>This read/write property of type Double must be between zero and one inclusive.</value><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxSearchParams object has already been disposed.</exception></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.XYOverlap"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set this to a value less than zero or greater than one.</exception><summary>This is the amount of XY overlap above which two results are considered to be the same.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxSearchParams object has already been disposed.</exception><value>This read/write property of type Double must be greater than or equal to zero and less than or equal to one.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.UncertaintyY"><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxSearchParams object has already been disposed.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set this to a value less than zero.</exception><value>This read/write property of type Double must be greater than or equal to zero.</value><summary>This is the uncertainty of the starting pose in the Y dimension, in selected space coordinates. This value is used by both CogOCVMaxRunParams::KeySearchParams and CogOCVMaxRunParams::StartPoseSearchParams. This value is ignored in CogOCVMaxRunParams::ImageSearchParams.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.UncertaintyX"><summary>This is the uncertainty of the starting pose in the X dimension, in selected space coordinates. This value is used by both CogOCVMaxRunParams::KeySearchParams and CogOCVMaxRunParams::StartPoseSearchParams. This value is ignored in CogOCVMaxRunParams::ImageSearchParams.</summary><value>This read/write property of type Double must be greater than or equal to zero.</value><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set this to a value less than zero.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxSearchParams object has already been disposed.</exception></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.ContrastThreshold"><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxSearchParams object has already been disposed.</exception><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set this to a value less than zero.</exception><summary>The ContrastThreshold applies to individual characters, and in theory if the threshold is higher than the grey level contrast of a character in the run-time image, the character will not be found. When CogOCVMaxPattern.CharacterRegistration is set to Standard, the measure of contrast is exactly that used by CogPMAlignPattern. When CogOCVMaxPattern.CharacterRegistration is set to Correlation, the measure of contrast is an approximation of that used by CogPMAlignPattern: it is approximately the average edge contrast of the character.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><value>This read/write property of type Double must be greater than or equal to zero.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.AcceptThreshold"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><value>This read/write property of type Double must have a value between 0 and 1 inclusive.</value><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set this to a value less than zero or greater than one.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxSearchParams object has already been disposed.</exception><summary>This threshold is used to locate character shapes in the runtime image.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.GetDOFRotation(Cognex.VisionPro.OCVMax.CogOCVMaxDOFAttributeConstants)"><param name="selector">The desired attribute. May be one of: CogOCVMaxDOFAttributeConstants::LowerLimit, ::Nominal, ::UpperLimit, or ::Overlap.</param><summary>Get a particular attribute (LowerLimit, Nominal, UpperLimit, or Overlap) of the Rotation degree of freedom (DOF). Use the selector argument to specify which attribute. The units of all Rotation attributes are radians.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxSearchParams object has already been disposed.</exception><returns>A System::Double representing the specified Rotation attribute in radians.</returns></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.SetDOFRotation(Cognex.VisionPro.OCVMax.CogOCVMaxDOFAttributeConstants,System.Double)"><param name="selector">The desired attribute. May be one of: CogOCVMaxDOFAttributeConstants::LowerLimit, ::Nominal, ::UpperLimit, or ::Overlap.</param><param name="dNewVal">The new attribute value, in radians.</param><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxSearchParams object has already been disposed.</exception><summary>Set a particular attribute (LowerLimit, Nominal, UpperLimit, or Overlap) of the Rotation degree of freedom (DOF). Use the selector argument to specify which attribute. The units of all Rotation attributes are radians.</summary><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set Rotation Overlap to a negative value.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.GetDOFScale(Cognex.VisionPro.OCVMax.CogOCVMaxDOFAttributeConstants)"><param name="selector">The desired attribute. May be one of: CogOCVMaxDOFAttributeConstants::LowerLimit, ::Nominal, ::UpperLimit, or ::Overlap.</param><summary>Get a particular attribute (LowerLimit, Nominal, UpperLimit, or Overlap) of the (uniform) Scale degree of freedom (DOF). Use the selector argument to specify which attribute.</summary><returns>A System::Double representing the specified (uniform) Scale attribute.</returns><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxSearchParams object has already been disposed.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.SetDOFScale(Cognex.VisionPro.OCVMax.CogOCVMaxDOFAttributeConstants,System.Double)"><param name="selector">The desired attribute. May be one of: CogOCVMaxDOFAttributeConstants::LowerLimit, ::Nominal, ::UpperLimit, or ::Overlap.</param><param name="dNewVal">The new attribute value. Note that Scale Overlap must be greater than or equal to one. Note that Scale LowerLimit, Nominal, and UpperLimit must all be greater than zero.</param><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set Scale LowerLimit, Nominal, or UpperLimit to a value less than or equal to zero.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxSearchParams object has already been disposed.</exception><summary>Set a particular attribute (LowerLimit, Nominal, UpperLimit, or Overlap) of the (uniform) Scale degree of freedom (DOF). Use the selector argument to specify which attribute.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.GetDOFScaleX(Cognex.VisionPro.OCVMax.CogOCVMaxDOFAttributeConstants)"><param name="selector">The desired attribute. May be one of: CogOCVMaxDOFAttributeConstants::LowerLimit, ::Nominal, ::UpperLimit, or ::Overlap.</param><summary>Get a particular attribute (LowerLimit, Nominal, UpperLimit, or Overlap) of the ScaleX degree of freedom (DOF). Use the selector argument to specify which attribute.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxSearchParams object has already been disposed.</exception><returns>A System::Double representing the specified ScaleXattribute.</returns></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.SetDOFScaleX(Cognex.VisionPro.OCVMax.CogOCVMaxDOFAttributeConstants,System.Double)"><param name="selector">The desired attribute. May be one of: CogOCVMaxDOFAttributeConstants::LowerLimit, ::Nominal, ::UpperLimit, or ::Overlap.</param><param name="dNewVal">The new attribute value. Note that ScaleX Overlap must be greater than or equal to one. Note that ScaleX LowerLimit, Nominal, and UpperLimit must all be greater than zero.</param><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxSearchParams object has already been disposed.</exception><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set ScaleX Overlap to a value less than one.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><summary>Set a particular attribute (LowerLimit, Nominal, UpperLimit, or Overlap) of the ScaleX degree of freedom (DOF). Use the selector argument to specify which attribute.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.GetDOFScaleY(Cognex.VisionPro.OCVMax.CogOCVMaxDOFAttributeConstants)"><param name="selector">The desired attribute. May be one of: CogOCVMaxDOFAttributeConstants::LowerLimit, ::Nominal, ::UpperLimit, or ::Overlap.</param><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxSearchParams object has already been disposed.</exception><summary>Get a particular attribute (LowerLimit, Nominal, UpperLimit, or Overlap) of the ScaleY degree of freedom (DOF). Use the selector argument to specify which attribute.</summary><returns>A System::Double representing the specified ScaleYattribute.</returns></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.SetDOFScaleY(Cognex.VisionPro.OCVMax.CogOCVMaxDOFAttributeConstants,System.Double)"><param name="selector">The desired attribute. May be one of: CogOCVMaxDOFAttributeConstants::LowerLimit, ::Nominal, ::UpperLimit, or ::Overlap.</param><param name="dNewVal">The new attribute value. Note that ScaleY Overlap must be greater than or equal to one. Note that ScaleY LowerLimit, Nominal, and UpperLimit must all be greater than zero.</param><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set ScaleY LowerLimit, Nominal, or UpperLimit to a value less than or equal to zero.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><summary>Set a particular attribute (LowerLimit, Nominal, UpperLimit, or Overlap) of the ScaleY degree of freedom (DOF). Use the selector argument to specify which attribute.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxSearchParams object has already been disposed.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.GetDOFShear(Cognex.VisionPro.OCVMax.CogOCVMaxDOFAttributeConstants)"><param name="selector">The desired attribute. May be one of: CogOCVMaxDOFAttributeConstants::LowerLimit, ::Nominal, ::UpperLimit, or ::Overlap.</param><returns>A System::Double representing the specified Shear attribute in radians.</returns><summary>Get a particular attribute (LowerLimit, Nominal, UpperLimit, or Overlap) of the Shear degree of freedom (DOF). Use the selector argument to specify which attribute. The units of all Shear attributes are radians.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxSearchParams object has already been disposed.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxSearchParams.SetDOFShear(Cognex.VisionPro.OCVMax.CogOCVMaxDOFAttributeConstants,System.Double)"><param name="selector">The desired attribute. May be one of: CogOCVMaxDOFAttributeConstants::LowerLimit, ::Nominal, ::UpperLimit, or ::Overlap.</param><param name="dNewVal">The new attribute value, in radians.</param><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxSearchParams object has already been disposed.</exception><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set Shear Overlap to a negative value.</exception><summary>Set a particular attribute (LowerLimit, Nominal, UpperLimit, or Overlap) of the Shear degree of freedom (DOF). Use the selector argument to specify which attribute. The units of all Shear attributes are radians.</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams"><summary>This class encapsulates the run time parameters used by <see cref="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Execute(Cognex.VisionPro.CogImage8Grey,Cognex.VisionPro.ICogRegion,Cognex.VisionPro.OCVMax.CogOCVMaxRunParams)" />.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SfTimeoutEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TimeoutEnabled may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SfTimeout"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Timeout may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SfRegionMode"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by RegionMode may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SfRunPose"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by RunPose may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SfImageSearchParams"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ImageSearchParams may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SfKeySearchParams"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by KeySearchParams may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SfStartPoseSearchParams"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by StartPoseSearchParams may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SfGetParagraphCount"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetParagraphCount may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SfGetLineCount"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetLineCount may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SfGetCharacterCount"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetCharacterCount may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SfGetKeysetCharacterKeys"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetKeysetCharacterKeys may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SfGetVerificationType"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetVerificationType may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SfGetConfidenceThreshold"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetConfidenceThreshold may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SfGetConfusionThreshold"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetConfusionThreshold may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SfEarlyAcceptThreshold"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by EarlyAcceptThreshold may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SfEarlyFailThreshold"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by EarlyFailThreshold may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SfComputePoses"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ComputePoses may have changed.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.StartPoseSearchParams"><exception cref="T:System.ArgumentNullException">If you attempt to set this property to NULL.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><value>The search parameters used for pattern alignment in the image when a run pose is being used.</value><summary>Gets or sets the search parameters used for pattern alignment in the image when a run pose is being used.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.KeySearchParams"><exception cref="T:System.ArgumentNullException">If you attempt to set this property to NULL.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><summary>Gets or sets the search parameters used for alignment of each keyset relative to its neighbor.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><value>The search parameters used for alignment of each keyset relative to its neighbor.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.ImageSearchParams"><exception cref="T:System.ArgumentNullException">If you attempt to set this property to NULL.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><value>The search parameters used for pattern alignment in the image.</value><summary>Gets or sets the search parameters used for pattern alignment in the image.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.RunPose"><summary>When this property is not NULL, the search process assumes that the strings will be found very close to this pose.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><value>The pose that is very close to the strings.</value><remarks><para>
				If you provide a run pose, the OCVMax tool can run much faster
				since it does not need to search the entire image first.
			</para></remarks></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.RegionMode"><summary>Gets or sets how the <paramref name="pRegion" /> parameter to <see cref="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Execute(Cognex.VisionPro.CogImage8Grey,Cognex.VisionPro.ICogRegion,Cognex.VisionPro.OCVMax.CogOCVMaxRunParams)" /> is applied to the input image.</summary><value>This read/write property of type CogRegionModeConstants may be either PixelAlignedBoundingBox or AffineTransform.</value><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set this to a value other than PixelAlignedBounding or AffineTransform.</exception><remarks><para>
    		The region mode may be either
    		<see cref="T:Cognex.VisionPro.CogRegionModeConstants">PixelAlignedBoundingBox</see> or
    		<see cref="T:Cognex.VisionPro.CogRegionModeConstants">AffineTransform</see>.
    	</para><para>
    		This property is ignored if the region is NULL.
    	</para></remarks></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.ComputePoses"><summary>Gets or sets the result poses to be computed.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><value>The result poses to be computed.</value><remarks><para>
    			The poses to compute are specified as a bitwise-OR
    			or <see cref="T:Cognex.VisionPro.OCVMax.CogOCVMaxComputePosesConstants" /> values.
    			Character positions are always computed.
    		</para><para>
    			Computing poses takes additional execution time and may not
    			be needed in all applications.
    		</para><para>
    			Poses that are not computed cause the corresponding
    			"PoseValid" property to return False.
      		</para></remarks></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.EarlyFailThreshold"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><value>The threshold for early failure of a potential line match as the true instance of the line in the image.</value><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><summary>Gets or sets the threshold for early failure of a potential line match as the true instance of the line in the image.</summary><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set this to a value less than zero or greater than one.</exception><remarks><para>
	    		If the percentage
			of keys in the line that match (that are verified or confused) is 
			below this threshold, the section of the image containing the
			potential line is be considered any further. This speeds "
			up the search process
			if you know that the image is clean and has no missing
			or badly damaged characters.
    		</para><para>This value must be in the rage 0.0 to 1.0.</para></remarks></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.EarlyAcceptThreshold"><summary>Gets or sets the threshold for early acceptance of a potential line match as the true instance of the line in the image.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set this to a value less than zero or greater than one.</exception><value>The threshold for early acceptance of a potential line match as the true instance of the line in the image.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><remarks><para>
    			 If the percentage 
			of keys in the line that match (that are verified or confused) is above 
			this threshold, no further searching for the line is performed. This
			speeds up the search process
			if you know that there will not be
			spurious characters in the runtime image, for example when you know
			known that the only text in the image is the string to be verified.
    		</para><para>This value must be in the rage 0.0 to 1.0.</para></remarks></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.Timeout"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set this to a value less than or equal to zero.</exception><value>The maximum amount of time in milliseconds that execution or tuning can take.</value><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><summary>Gets or sets the maximum amount of time in milliseconds that execution of tuning can take.</summary><remarks><para>
    		If <see cref="P:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.TimeoutEnabled" />
    		this is the maximum amount of time in milliseconds that
    			<see cref="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Execute(Cognex.VisionPro.CogImage8Grey,Cognex.VisionPro.ICogRegion,Cognex.VisionPro.OCVMax.CogOCVMaxRunParams)" />
		or
			<see cref="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Tune(System.Collections.ArrayList)" />
		tune will take before processing stops.
    	</para></remarks></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.TimeoutEnabled"><value>Whether the pattern is allowed to time out.</value><summary>Gets or sets whether the pattern is allowed to time out when executing or tuning with these run parameters.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><remarks><para>
    		If execution times out,
    			<see cref="M:Cognex.VisionPro.OCVMax.CogOCVMaxPattern.Execute(Cognex.VisionPro.CogImage8Grey,Cognex.VisionPro.ICogRegion,Cognex.VisionPro.OCVMax.CogOCVMaxRunParams)" />
		may return partial results.
    	</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SetArrangementFromPattern(Cognex.VisionPro.OCVMax.CogOCVMaxPattern)"><param name="pPattern">The pattern object to copy.</param><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><exception cref="T:System.ArgumentNullException">If the supplied argument is NULL.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this method is called.</event><summary>Copies the arrangement from the specified pattern into this run parameters object.</summary><remarks>
		Use this method early inthe process of setting up the
		run parameters. Any character-, line-, or paragraph-specific
		property that cannot be copied from the pattern
		(such as the per-paragraph confidence and confusion threshold values)
		will be set to default values.
		</remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.GetParagraphCount"><summary>Gets the number of paragraphs described by this run parameters object.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><returns>The number of paragraphs.</returns><remarks><para>
				The number of paragraphs is initially zero and is set by a call to 
					<see cref="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SetArrangementFromPattern(Cognex.VisionPro.OCVMax.CogOCVMaxPattern)" />.
			</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.GetLineCount(Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator)"><param name="pPI">A paragraph iterator that specifiesthe paragraph of interest.</param><exception cref="T:System.ArgumentNullException">If the supplied argument is NULL.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><returns>A System::Int32 representing the number of lines in the paragraph.</returns><summary>Gets the number of lines in the specified paragraph of this object's internal arrangement description.</summary><remarks><para>
				The number of lines is typically set  by a call to 
					<see cref="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SetArrangementFromPattern(Cognex.VisionPro.OCVMax.CogOCVMaxPattern)" />.
			</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.GetLineCount(System.Int32)"><param name="paragraphPosition">The zero-based index that specifies the position of the paragraph of interest.</param><returns>The number of lines in the paragraph.</returns><summary>Gets the number of lines in the specified paragraph of this object's internal arrangement description.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><exception cref="T:System.ArgumentOutOfRangeException">If the paragraphPosition argument is less than zero or greater than or equal to the number of paragraphs described in this CogOCVMaxRunParams object.</exception><remarks><para>
				The number of lines is typically set  by a call to 
					<see cref="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SetArrangementFromPattern(Cognex.VisionPro.OCVMax.CogOCVMaxPattern)" />.
			</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.GetCharacterCount(Cognex.VisionPro.OCVMax.CogOCVMaxLineIterator)"><param name="pLI">A line iterator that indicates the line of interest.</param><returns>The number of characters in the line.</returns><summary>Gets the number of characters in the specified line of the specified paragraph of this object's internal arrangement description.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><exception cref="T:System.ArgumentNullException">If the supplied argument is NULL.</exception><remarks><para>
				This value is typically set  by a call to 
					<see cref="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SetArrangementFromPattern(Cognex.VisionPro.OCVMax.CogOCVMaxPattern)" />.
			</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.GetCharacterCount(System.Int32,System.Int32)"><param name="paragraphPosition">A zero-based index that specifies the position of the paragraph of interest.</param><param name="linePosition">A zero-based index that specifies the position of the line of interest within the paragraph of interest.</param><exception cref="T:System.ArgumentOutOfRangeException">If the linePosition argument is less than zero or greater than or equal to the number of lines in the specified paragraph as described in this CogOCVMaxRunParams object.</exception><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><returns>The number of characters in the line.</returns><summary>Gets the number of characters in the specified line of the specified paragraph of this object's internal arrangement description.</summary><remarks><para>
				This value is typically set  by a call to 
					<see cref="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SetArrangementFromPattern(Cognex.VisionPro.OCVMax.CogOCVMaxPattern)" />.
			</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.GetKeysetCharacterKeys(Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator)"><param name="pCI">A character iterator that specifies the character position of interest.</param><returns>An array of integers that correspond to the key set for the specified character position within the specified line within the specified paragraph. The size of this array matches the number of different possible characters that may occur at this position.</returns><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><exception cref="T:System.ArgumentNullException">If the supplied argument is NULL.</exception><summary>Gets an array of integers that correspond to the key set for the specified character position within the specified line within the specified paragraph. Each element of this array is the key value of a character that may occur at this position.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.GetKeysetCharacterKeys(System.Int32,System.Int32,System.Int32)"><param name="paragraphPosition">A zero-based index that specifies the position of the paragraph of interest.</param><param name="linePosition">A zero-based index that specifies the position of the line of interest within the paragraph of interest.</param><param name="characterPosition">A zero-based index that specifies the position of the character of interest within the line of interest within the paragraph of interest.</param><returns>An array of integers that correspond to the key set for the specified character position within the specified line within the specified paragraph. The size of this array matches the number of different possible characters that may occur at this position.</returns><exception cref="T:System.ArgumentOutOfRangeException">If the linePosition argument is less than zero or greater than or equal to the number of lines in the specified paragraph as described in this CogOCVMaxRunParams object.</exception><summary>Gets an array of integers that correspond to the key set for the specified character position within the specified line within the specified paragraph. Each element of this array is the key value of a character that may occur at this position.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.GetKeysetCharacters(Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator)"><param name="pCI">A character iterator that specifies the character position of interest.</param><returns>A string in which each character corresponds to a member of the key set for this position.</returns><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><exception cref="T:System.ArgumentNullException">If the supplied argument is NULL.</exception><summary>Gets a string that corresponds to the key set for the specified character position within the specified line within the specified paragraph. Each individual character in this string may occur at this position.</summary><remarks><para>
					Any one of the characters in the returned string may be observed at the specified position.
					 Note that this method assumes that the character keys in this font correspond to Unicode code point values.
				</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.GetKeysetCharacters(System.Int32,System.Int32,System.Int32)"><param name="paragraphPosition">A zero-based index that specifies the position of the paragraph of interest.</param><param name="linePosition">A zero-based index that specifies the position of the line of interest within the paragraph of interest.</param><param name="characterPosition">A zero-based index that specifies the position of the character of interest within the line of interest within the paragraph of interest.</param><exception cref="T:System.ArgumentOutOfRangeException">If the characterPosition argument is less than zero or greater than or equal to the number of characters in the specified line in the specified paragraph as described in this CogOCVMaxRunParams object.</exception><returns>A string in which each character corresponds to a member of the key set for this position.</returns><summary>Gets a string that corresponds to the key set for the specified character position within the specified line within the specified paragraph. Each individual character in this string may occur at this position.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><remarks><para>
					Any one of the characters in the returned string may be observed at the specified position.
					 Note that this method assumes that the character keys in this font correspond to Unicode code point values.
				</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SetKeyset(Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator,System.String)"><param name="pCI">A character iterator that specifies the character position of interest.</param><param name="NewValue">A string in which each character corresponds to a member of the key set for this position.</param><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this method changes the subject key set.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><summary>Sets the key set for the specified character position within the specified line within the specified paragraph.</summary><exception cref="T:System.ArgumentNullException">If the supplied character iterator argument is NULL.</exception><remarks><para>
					The key values are passed in the <paramref name="NewValue" />  string.
					Each character in this string is the key value of a character that may occur at the specified position.
					Note that this method assumes that the character keys in this font correspond to Unicode code point values.
				</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SetKeyset(System.Int32,System.Int32,System.Int32,System.String)"><param name="paragraphPosition">A zero-based index that specifies the position of the paragraph of interest.</param><param name="linePosition">A zero-based index that specifies the position of the line of interest within the paragraph of interest.</param><param name="characterPosition">A zero-based index that specifies the position of the character of interest within the line of interest within the paragraph of interest.</param><param name="NewValue">A string in which each character corresponds to a member of the key set for this position.</param><exception cref="T:System.ArgumentOutOfRangeException">If the paragraphPosition argument is less than zero or greater than or equal to the number of paragraphs described in this CogOCVMaxRunParams object.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this method changes the subject key set.</event><summary>Sets the key set for the specified character position within the specified line within the specified paragraph.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><remarks><para>
					The key values are passed in the <paramref name="NewValue" />  string.
					Each character in this string is the key value of a character that may occur at the specified position.
					Note that this method assumes tht the character keys in this font correspond to Unicode code point values.
				</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SetKeyset(Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator,System.Int32[])"><param name="pCI">A CogOCVMaxCharacterIterator that specifies the character position of interest.</param><param name="NewValue">Each element of this array is the key value of a character that may occur at this position.</param><exception cref="T:System.ArgumentNullException">If the supplied character iterator argument is NULL.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this method changes the subject key set.</event><summary>Sets the key set for the specified character position within the specified line within the specified paragraph.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><remarks><para>
					The key values are passed in the <paramref name="NewValue" />  array of integers.
					Each element of this array is the key value of a character that may occur at the specified position.
				</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SetKeyset(System.Int32,System.Int32,System.Int32,System.Int32[])"><param name="paragraphPosition">A zero-based index that specifies the position or index of the paragraph of interest.</param><param name="linePosition">A zero-based index that specifies the position or index of the line of interest within the paragraph of interest.</param><param name="characterPosition">A zero-based index that specifies the position  of the character of interest within the line of interest within the paragraph of interest.</param><param name="NewValue">Each element of this array is the key value of a character that may occur at this position.</param><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this method changes the subject key set.</event><exception cref="T:System.ArgumentOutOfRangeException">If the linePosition argument is less than zero or greater than or equal to the number of lines in the specified paragraph as described in this CogOCVMaxRunParams object.</exception><summary>Sets the key set for the specified character position within the specified line within the specified paragraph.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><remarks><para>
					The key values are passed in the <paramref name="NewValue" />  array of integers.
					Each element of this array is the key value of a character that may occur at the specified position.
				</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.GetVerificationType(Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator)"><param name="pCI">A character iterator that specifies the character position of interest.</param><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><exception cref="T:System.ArgumentNullException">If the supplied character iterator argument is NULL.</exception><summary>Gets the type of verification to be performed on the specified character position.</summary><returns>The verification type.</returns><remarks><para>In <see cref="T:Cognex.VisionPro.OCVMax.CogOCVMaxVerificationTypeConstants">Normal</see> mode
					a character may be judged Verified, or Confused, or Failed.
			</para><para>In <see cref="T:Cognex.VisionPro.OCVMax.CogOCVMaxVerificationTypeConstants">AlwaysVerified </see> mode
					OCVMax  scores every key in the keyset associated with the specified character position and chooses the highest scoring key,
					"always judging the character as Verified.
			</para><para>In <see cref="T:Cognex.VisionPro.OCVMax.CogOCVMaxVerificationTypeConstants">Ignore</see> mode
				OCVMax does no processing at all for the subject character, and the character is always judged Verified.
			</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.GetVerificationType(System.Int32,System.Int32,System.Int32)"><param name="paragraphPosition">A zero-based index that specifies the position of the paragraph of interest.</param><param name="linePosition">A zero-based index that specifies the position of the line of interest within the paragraph of interest.</param><param name="characterPosition">A zero-based index that specifies the position of the character of interest within the line of interest within the paragraph of interest.</param><returns>The verification type.</returns><summary>Gets the type of verification to be performed on the specified character position.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><remarks><para>In <see cref="T:Cognex.VisionPro.OCVMax.CogOCVMaxVerificationTypeConstants">Normal</see> mode
					a character may be judged Verified, or Confused, or Failed.
			</para><para>In <see cref="T:Cognex.VisionPro.OCVMax.CogOCVMaxVerificationTypeConstants">AlwaysVerified </see> mode
					OCVMax  scores every key in the keyset associated with the specified character position and chooses the highest scoring key,
					"always judging the character as Verified.
			</para><para>In <see cref="T:Cognex.VisionPro.OCVMax.CogOCVMaxVerificationTypeConstants">Ignore</see> mode
				OCVMax does no processing at all for the subject character, and the character is always judged Verified.
			</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SetVerificationType(Cognex.VisionPro.OCVMax.CogOCVMaxCharacterIterator,Cognex.VisionPro.OCVMax.CogOCVMaxVerificationTypeConstants)"><param name="pCI">A character iterator that specifies the character position of interest.</param><param name="eNewVal">n/a</param><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this method changes the verification type for the specified character.</event><summary>Sets the type of verification to be performed on the specified character position.</summary><remarks><para>In <see cref="T:Cognex.VisionPro.OCVMax.CogOCVMaxVerificationTypeConstants">Normal</see> mode
					a character may be judged Verified, or Confused, or Failed.
			</para><para>In <see cref="T:Cognex.VisionPro.OCVMax.CogOCVMaxVerificationTypeConstants">AlwaysVerified </see> mode
					OCVMax  scores every key in the keyset associated with the specified character position and chooses the highest scoring key,
					"always judging the character as Verified.
			</para><para>In <see cref="T:Cognex.VisionPro.OCVMax.CogOCVMaxVerificationTypeConstants">Ignore</see> mode
				OCVMax does no processing at all for the subject character, and the character is always judged Verified.
			</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SetVerificationType(System.Int32,System.Int32,System.Int32,Cognex.VisionPro.OCVMax.CogOCVMaxVerificationTypeConstants)"><param name="paragraphPosition">A zero-based index that specifies the position of the paragraph of interest.</param><param name="linePosition">A zero-based index that specifies the position of the line of interest within the paragraph of interest.</param><param name="characterPosition">A zero-based index that specifies the position of the character of interest within the line of interest within the paragraph of interest.</param><param name="eNewVal">n/a</param><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this method changes the verification type for the specified character.</event><summary>Sets the type of verification to be performed on the specified character position.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><remarks><para>In <see cref="T:Cognex.VisionPro.OCVMax.CogOCVMaxVerificationTypeConstants">Normal</see> mode
					a character may be judged Verified, or Confused, or Failed.
			</para><para>In <see cref="T:Cognex.VisionPro.OCVMax.CogOCVMaxVerificationTypeConstants">AlwaysVerified </see> mode
					OCVMax  scores every key in the keyset associated with the specified character position and chooses the highest scoring key,
					"always judging the character as Verified.
			</para><para>In <see cref="T:Cognex.VisionPro.OCVMax.CogOCVMaxVerificationTypeConstants">Ignore</see> mode
				OCVMax does no processing at all for the subject character, and the character is always judged Verified.
			</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.GetConfidenceThreshold(Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator)"><param name="pPI">A paragraph iterator that indicates the paragraph of interest.</param><returns>The confidence threshold in the range 0.0 to 1.0.</returns><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><summary>Gets the confidence threshold for the specified paragraph.</summary><exception cref="T:System.ArgumentNullException">If the supplied argument is NULL.</exception><remarks><para>
						This threshold is the amount that the score of the highest-scoring character in the current key set must be above the
						highest-scoring character that has a non-zero confusion score with any character in the key set.
				</para><para>
						Note that if a potentially confusing character has a higher score than the highest-scoring key set member,
						then the status result will always be ""Confused"", but the returned key will still be the one from the key set, not the confusing key.
						Note that only keys that pass the ConfusionThreshold test are considered for this scoring or verification step.
				</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.GetConfidenceThreshold(System.Int32)"><param name="paragraphPosition">A zero-based index that specifies the position of the paragraph of interest.</param><summary>Gets the confidence threshold for the specified paragraph.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><exception cref="T:System.ArgumentOutOfRangeException">If the paragraphPosition argument is less than zero or greater than or equal to the number of paragraphs described in this CogOCVMaxRunParams object.</exception><returns>The confidence threshold in the range 0.0 to 1.0.</returns><remarks><para>
						This threshold is the amount that the score of the highest-scoring character in the current key set must be above the
						highest-scoring character that has a non-zero confusion score with any character in the key set.
				</para><para>
						Note that if a potentially confusing character has a higher score than the highest-scoring key set member,
						then the status result will always be ""Confused"", but the returned key will still be the one from the key set, not the confusing key.
						Note that only keys that pass the ConfusionThreshold test are considered for this scoring or verification step.
				</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SetConfidenceThreshold(Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator,System.Double)"><param name="pPI">A paragraph iterator that indicates the paragraph of interest.</param><param name="dNewVal">n/a</param><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this method changes the confidence threshold for the specified paragraph.</event><exception cref="T:System.ArgumentNullException">If the supplied paragraph iterator argument is NULL.</exception><returns>The confidence threshold in the range 0.0 to 1.0.</returns><summary>Sets the confidence threshold for the specified paragraph.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><remarks><para>
					The confidence threshold is the amount that the score of the highest-scoring in the current key set
					must be above the highest-scoring character that has a non-zero confusion score with  any character in the keyset.
				</para><para>
					If a potentially confusing character has a high score than the highest-scoring key set member,
					the status of the result is always Confused, but the returned key will still be the one from the key set
					not from the confusing key.
				</para><para>
					Only keys that pass the confusion threshold test are considered for this scoring or verification step.
				</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SetConfidenceThreshold(System.Int32,System.Double)"><param name="paragraphPosition">A zero-based index that specifies the position of the paragraph of interest.</param><param name="dNewVal">n/a</param><returns>The confidence threshold in the range 0.0 to 1.0.</returns><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set this to a value less than zero or greater than one.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this method changes the confidence threshold for the specified paragraph.</event><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><summary>Sets the confidence threshold for the specified paragraph.</summary><remarks><para>
					The confidence threshold is the amount that the score of the highest-scoring in the current key set
					must be above the highest-scoring character that has a non-zero confusion score with  any character in the keyset.
				</para><para>
					If a potentially confusing character has a high score than the highest-scoring key set member,
					the status of the result is always Confused, but the returned key will still be the one from the key set
					not from the confusing key.
				</para><para>
					Only keys that pass the confusion threshold test are considered for this scoring or verification step.
				</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.GetConfusionThreshold(Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator)"><param name="pPI">A paragraph iterator that indicates the paragraph of interest.</param><summary>Gets the confusion threshold for the specified paragraph.</summary><returns>The confusion threshold in the range 0.0 to 1.0.</returns><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><exception cref="T:System.ArgumentNullException">If the supplied argument is NULL.</exception><remarks><para>
    						Each paragraph builds a confusion matrix when it is trained.
    						This matrix has a number for every pair of keys in the paragraph's font alphabet that
    						indicates how confusable two keys are.
    						
    						Values near  1.0 are very confusable (for example "5" and "S"), and
    						values near zero are not confusable ("1" and "5").
    					</para><para>
							The confusion threshold specifies the value below which other
							keys are not considered by OCVMax for confusion purposes. 
							For example, if OCVMax is expecting to find a "5", it will also check
							other potentially confusing keys to see if they are also good matches.
							With a confusion threshold of 0.9, the keys for "S" and "6" might be "
							tried, but "1" would not. 
							With a threshold of 0.4, many somewhat similar keys would be tried, such as "E" or "8". 
							With a threshold of 0, all keys would be tried. 
    					</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.GetConfusionThreshold(System.Int32)"><param name="paragraphPosition">A zero-based index that specifies the position of the paragraph of interest.</param><summary>Gets the confusion threshold for the specified paragraph.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><returns>The confusion threshold in the range 0.0 to 1.0.</returns><exception cref="T:System.ArgumentOutOfRangeException">If the paragraphPosition argument is less than zero or greater than or equal to the number of paragraphs described in this CogOCVMaxRunParams object.</exception><remarks><para>
    						Each paragraph builds a confusion matrix when it is trained.
    						This matrix has a number for every pair of keys in the paragraph's font alphabet that
    						indicates how confusable two keys are.
    						
    						Values near  1.0 are very confusable (for example "5" and "S"), and
    						values near zero are not confusable ("1" and "5").
    					</para><para>
							The confusion threshold specifies the value below which other
							keys are not considered by OCVMax for confusion purposes. 
							For example, if OCVMax is expecting to find a "5", it will also check
							other potentially confusing keys to see if they are also good matches.
							With a confusion threshold of 0.9, the keys for "S" and "6" might be "
							tried, but "1" would not. 
							With a threshold of 0.4, many somewhat similar keys would be tried, such as "E" or "8". 
							With a threshold of 0, all keys would be tried. 
    					</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SetConfusionThreshold(Cognex.VisionPro.OCVMax.CogOCVMaxParagraphIterator,System.Double)"><param name="pPI">A paragraph iterator that indicates the paragraph of interest.</param><param name="dNewVal">The confusion threshold in the range 0.0 to 1.0.</param><exception cref="T:System.ArgumentNullException">If the supplied paragraph iterator argument is NULL.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this method changes the confusion threshold for the specified paragraph.</event><summary>Sets the confusion threshold for the specified paragraph.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><remarks><para>
    						Each paragraph builds a confusion matrix when it is trained.
    						This matrix has a number for every pair of keys in the paragraph's font alphabet that
    						indicates how confusable two keys are.
    						
    						Values near  1.0 are very confusable (for example "5" and "S"), and
    						values near zero are not confusable ("1" and "5").
    					</para><para>
							The confusion threshold specifies the value below which other
							keys are not considered by OCVMax for confusion purposes. 
							For example, if OCVMax is expecting to find a "5", it will also check
							other potentially confusing keys to see if they are also good matches.
							With a confusion threshold of 0.9, the keys for "S" and "6" might be "
							tried, but "1" would not. 
							With a threshold of 0.4, many somewhat similar keys would be tried, such as "E" or "8". 
							With a threshold of 0, all keys would be tried. 
    					</para></remarks></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxRunParams.SetConfusionThreshold(System.Int32,System.Double)"><param name="paragraphPosition">A zero-based index that specifies the position of the paragraph of interest.</param><param name="dNewVal">The confusion threshold in the range 0.0 to 1.0.</param><exception cref="T:System.ArgumentOutOfRangeException">If you attempt to set this to a value less than zero or greater than one.</exception><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this method changes the confusion threshold for the specified paragraph.</event><summary>Sets the confusion threshold for the specified paragraph.</summary><exception cref="T:System.ObjectDisposedException">If this CogOCVMaxRunParams object has already been disposed.</exception><remarks><para>
    						Each paragraph builds a confusion matrix when it is trained.
    						This matrix has a number for every pair of keys in the paragraph's font alphabet that
    						indicates how confusable two keys are.
    						
    						Values near  1.0 are very confusable (for example "5" and "S"), and
    						values near zero are not confusable ("1" and "5").
    					</para><para>
							The confusion threshold specifies the value below which other
							keys are not considered by OCVMax for confusion purposes. 
							For example, if OCVMax is expecting to find a "5", it will also check
							other potentially confusing keys to see if they are also good matches.
							With a confusion threshold of 0.9, the keys for "S" and "6" might be "
							tried, but "1" would not. 
							With a threshold of 0.4, many somewhat similar keys would be tried, such as "E" or "8". 
							With a threshold of 0, all keys would be tried. 
    					</para></remarks></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxTuneParams"><summary>This class encapsulates properties used to tune the CogOCVMaxPattern object.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxTuneParams.SfFlags"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Flags may have changed.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxTuneParams.Flags"><summary>Which property or properties are modified during tuning.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><value>This read/write property of type CogOCVMaxTuneConstants identifies every which property or properties may be modified during tuning. This is a bit-wise OR of the defined enumeration values.</value></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult"><summary>This class holds all of the result information for a single character.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult.#ctor(Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult)"><param name="pOther">The CogOCVMaxCharacterResult object to be copied. May not be NULL.</param><summary>Construct a deep copy of the supplied CogOCVMaxCharacterResult object.</summary><exception cref="T:System.ArgumentNullException">If the input argument is NULL.</exception><exception cref="T:System.OutOfMemoryException">If memory cannot be allocated for this object.</exception></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult.ConfusionScores"><value>This read-only property is of type System::Array of System::Double. This will be an empty array if VerificationStatus is not Confused.</value><summary>The confusion scores of the characters causing confusion with this character, if VerificationStatus is Confused. If VerificationStatus is not Confused, this will be an empty array. Elements in this array correspond to elements in the ConfusionKeys array.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult.ConfusionKeys"><summary>The character keys of the characters causing confusion with this character, if VerificationStatus is Confused. If VerificationStatus is not Confused, this will be an empty array. Elements in this array correspond to elements in the ConfusionScores array.</summary><value>This read-only property is of type System::Array of System::Int32. This will be an empty array if VerificationStatus is not Confused.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult.VerificationFullViolations"><summary>The verification full violations. These are the degrees of freedom (DOFs) of the full (i.e. image or start pose) search params that were violated and which therefore decreased the VerificationDOFScore for this character.</summary><value>This read-only property is a bit-wise OR of CogOCVMaxDOFConstants.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult.VerificationKeyViolations"><value>This read-only property is a bit-wise OR of CogOCVMaxDOFConstants.</value><summary>The verification key violations. These are the degrees of freedom (DOFs) of the key search params that were violated and which therefore decreased the VerificationDOFScore for this character.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult.VerificationDOFScore"><summary>The verification DOF score of this character.</summary><value>This read-only property of type System::Double will be in the range from zero (worst) to one (best).</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult.VerificationMatchScore"><summary>The verification match score of this character.</summary><value>This read-only property of type System::Double will be in the range from zero (worst) to one (best).</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult.VerificationScore"><value>This read-only property of type System::Double will be in the range from zero (worst) to one (best). If the verification type for this character is Ignore, then this will be 1. This score is equal to the product of the verification match score times the verification DOF score.</value><summary>The verification score of this character.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult.ConfidenceScore"><summary>The confidence score of this character. This is the verification score of this character minus the score of the best ConfusionScore, but not less than zero.</summary><value>This read-only property of type System::Double will be in the range from zero to one. If the verification type for this character is Ignore, then this will be 1.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult.FitError"><value>This read-only property of type System::Double will be in the range from 0.0 (best) to infinity (worst). Will be -1.0 if not available.</value><summary>The fit error of this character. Zero is the best possible value, while larger numbers are worse. While there is no theoretical upper limit, it is typically less than 10 in practical use. Will be -1 if not available.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult.CharacterParagraphPose"><summary>The pose of this character in paragraph space. Note that this property is only meaningful if CharacterParagraphPoseValid is true.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult.CharacterParagraphPoseValid"><summary>Whether or not the pose of this character in paragraph space was successfully computed.</summary><value>This read-only property is of type Boolean.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult.CharacterArrangementPose"><value>This read-only property is of type CogTransform2DLinear.</value><summary>The pose of this character in arrangement space. Note that this property is only meaningful if CharacterArrangementPoseValid is true.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult.CharacterArrangementPoseValid"><summary>Whether or not the pose of this character in arrangement space was successfully computed.</summary><value>This read-only property is of type Boolean.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult.CharacterSelectedBounds"><summary>The bounding affine rectangle of found character in selected space. Note that this property is only meaningful if CharacterSelectedBoundsValid is true.</summary><value>This read-only property is of type CogRectangleAffine.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult.CharacterSelectedBoundsValid"><summary>Whether or not the bounds of this character in selected space was successfully computed.</summary><value>This read-only property is of type Boolean.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult.CharacterSelectedPose"><summary>The pose of this character in selected space. Note that this property is only meaningful if CharacterSelectedPoseValid is true.</summary><value>This read-only property is of type CogTransform2DLinear.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult.CharacterSelectedPoseValid"><summary>Whether or not the pose of this character in selected space was successfully computed.</summary><value>This read-only property is of type Boolean.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult.Character"><value>This read-only property is of type System::Char.</value><summary>The character found at this position. This assumes that something was in fact found (e.g. that CharacterKey is not -1). This also assumes that the character keys in the associated font correspond to Unicode code point values.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult.CharacterKey"><summary>The key of the character found at this position. This will be -1 if VerificationStatus is Failed or if the verification type for the search was CogOCVMaxVerificationTypeConstants::Ignore.</summary><value>This read-only property of type System::Int32 will be -1 if the character was not successfully found.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult.VerificationStatus"><summary>The verification status for this character. Possible values include Verified, Confused, and Failed.</summary><value>This read-only property of type CogOCVMaxCharacterStatusConstants may be one of Verified, Confused, or Failed.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult.Empty"><value>This read-only property is of type System::Boolean.</value><summary>Whether or not this character position was empty, i.e. both failed and having no violation information.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult.CharacterIndex"><summary>The zero-based character index. This tells you which character within the containing line produced this particular result. Note of course that this index reflects the arrangement as it existed when this result was produced - if the arrangement has changed since then this index may no longer be valid.</summary><value>This read-only property is of type System::Int32.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult.LineIndex"><value>This read-only property is of type System::Int32.</value><summary>The zero-based line index. This tells you which line within the containing paragraph produced this particular result. Note of course that this index reflects the arrangement as it existed when this result was produced - if the arrangement has changed since then this index may no longer be valid.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterResult.ParagraphIndex"><summary>The zero-based paragraph index. This tells you which paragraph within the arrangement produced this particular result. Note of course that this index reflects the arrangement as it existed when this result was produced - if the arrangement has changed since then this index may no longer be valid.</summary><value>This read-only property is of type System::Int32.</value></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxLineResult"><summary>This class holds all of the result information for a single line.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxLineResult.#ctor(Cognex.VisionPro.OCVMax.CogOCVMaxLineResult)"><param name="pOther">The CogOCVMaxLineResult object to be copied. May not be NULL.</param><exception cref="T:System.ArgumentNullException">If the input argument is NULL.</exception><summary>Construct a deep copy of the supplied CogOCVMaxLineResult object.</summary><exception cref="T:System.OutOfMemoryException">If memory cannot be allocated for this object.</exception></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxLineResult.CharacterResults"><value>This read-only property is of type System::Array of CogOCVMaxCharacterResult.</value><summary>A System::Array of character results, one for every character in this line.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxLineResult.NumCharactersEmpty"><value>This read-only property is of type System::Int32.</value><summary>The number of characters in this line that were empty.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxLineResult.NumCharactersVerified"><summary>The number of characters in this line that were verified.</summary><value>This read-only property of type System::Int32 will be greater than or equal to zero.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxLineResult.VerificationFullViolations"><summary>The verification full violations.</summary><value>This read-only property is a bit-wise OR of CogOCVMaxDOFConstants for all characters in this line.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxLineResult.VerificationKeyViolations"><summary>The verification key violations.</summary><value>This read-only property is a bit-wise OR of CogOCVMaxDOFConstants for all characters in this line.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxLineResult.VerificationScore"><summary>The overall score of the line. This is the average of the scores of all of the characters in the line.</summary><value>This read-only property of type System::Double will be in the range from zero (worst) to one (best).</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxLineResult.LineParagraphPose"><value>This read-only property is of type CogTransform2DLinear.</value><summary>The pose of this line in paragraph space. Note that this property is only meaningful if LineParagraphPoseValid is true.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxLineResult.LineParagraphPoseValid"><summary>Whether or not the pose of this line in paragraph space was successfully computed.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxLineResult.LineArrangementPose"><value>This read-only property is of type CogTransform2DLinear.</value><summary>The pose of this line in arrangement space. Note that this property is only meaningful if LineArrangementPoseValid is true.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxLineResult.LineArrangementPoseValid"><summary>Whether or not the pose of this line in arrangement space was successfully computed.</summary><value>This read-only property is of type Boolean.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxLineResult.LineSelectedPose"><summary>The pose of this line in selected space. Note that this property is only meaningful if LineSelectedPoseValid is true.</summary><value>This read-only property is of type CogTransform2DLinear.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxLineResult.LineSelectedPoseValid"><value>This read-only property is of type Boolean.</value><summary>Whether or not the pose of this line in selected space was successfully computed.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxLineResult.Verified"><value>This read-only property is of type Boolean.</value><summary>Whether or not ALL character positions in this line have been verified.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxLineResult.LineIndex"><value>This read-only property is of type System::Int32.</value><summary>The zero-based line index. This tells you which line within the containing paragraph produced this particular result. Note of course that this index reflects the arrangement as it existed when this result was produced - if the arrangement has changed since then this index may no longer be valid.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxLineResult.ParagraphIndex"><summary>The zero-based paragraph index. This tells you which paragraph within the arrangement produced this particular result. Note of course that this index reflects the arrangement as it existed when this result was produced - if the arrangement has changed since then this index may no longer be valid.</summary><value>This read-only property is of type System::Int32.</value></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphResult"><summary>This class holds all of the result information for a single paragraph.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphResult.#ctor(Cognex.VisionPro.OCVMax.CogOCVMaxParagraphResult)"><param name="pOther">The CogOCVMaxParagraphResult object to be copied. May not be NULL.</param><summary>Construct a deep copy of the supplied CogOCVMaxParagraphResult object.</summary><exception cref="T:System.ArgumentNullException">If the input argument is NULL.</exception><exception cref="T:System.OutOfMemoryException">If memory cannot be allocated for this object.</exception></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphResult.LineResults"><summary>A System::Array of line results, one for every line in this paragraph.</summary><value>This read-only property is of type System::Array of CogOCVMaxLineResult.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphResult.NumLinesVerified"><value>This read-only property of type System::Int32 will be greater than or equal to zero.</value><summary>The number of lines in this paragraph that were verified.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphResult.VerificationFullViolations"><value>This read-only property is a bit-wise OR of CogOCVMaxDOFConstants for all characters in all lines in this paragraph.</value><summary>The verification full violations.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphResult.VerificationKeyViolations"><summary>The verification key violations.</summary><value>This read-only property is a bit-wise OR of CogOCVMaxDOFConstants for all characters in all lines in this paragraph.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphResult.VerificationScore"><summary>The overall score of the paragraph. This is the average of the scores of all of the characters in the paragraph.</summary><value>This read-only property of type System::Double will be in the range from zero (worst) to one (best).</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphResult.ParagraphArrangementPose"><summary>The pose of this paragraph in arrangement space. Note that this property is only meaningful if ParagraphArrangementPoseValid is true.</summary><value>This read-only property is of type CogTransform2DLinear.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphResult.ParagraphArrangementPoseValid"><summary>Whether or not the pose of this paragraph in arrangement space was successfully computed.</summary><value>This read-only property is of type Boolean.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphResult.ParagraphSelectedPose"><value>This read-only property is of type CogTransform2DLinear.</value><summary>The pose of this paragraph in selected space. Note that this property is only meaningful if ParagraphSelectedPoseValid is true.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphResult.ParagraphSelectedPoseValid"><summary>Whether or not the pose of this paragraph in selected space was successfully computed.</summary><value>This read-only property is of type Boolean.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphResult.Verified"><summary>Whether or not ALL character positions in this paragraph have been verified.</summary><value>This read-only property is of type Boolean.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphResult.ParagraphIndex"><value>This read-only property is of type System::Int32.</value><summary>The zero-based paragraph index. This tells you which paragraph within the arrangement produced this particular result. Note of course that this index reflects the arrangement as it existed when this result was produced - if the arrangement has changed since then this index may no longer be valid.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphResult.CreateResultGraphics(Cognex.VisionPro.OCVMax.CogOCVMaxParagraphResultGraphicConstants)"><param name="graphicOptions">A bitwise OR of CogOCVMaxParagraphResultGraphicConstants. Options include: ParagraphBounds, CharactersBounds, CharactersLabel, and TipText. ParagraphBounds will render a paragraph pose aligned bounding box around this paragraph. CharactersBounds will render character pose aligned bounding boxes around each character. Both the ParagraphBounds and the CharactersBounds graphics are color coded: green for verified, yellow for confused, red for failed. CharactersLabel will render a graphic version of each character slightly below each found character. TipText causes mouse-activated tip text to be available for any requested graphics.</param><returns>A CogCompositeShape containing the requested graphics.</returns><summary>Create a CogCompositeShape containing the requested result graphics for this paragraph result object.</summary><exception cref="T:System.InvalidOperationException">If the internal shared result field is NULL.</exception></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxResult"><summary>This class holds all of the result information for an entire pattern.</summary></member><member name="M:Cognex.VisionPro.OCVMax.CogOCVMaxResult.#ctor(Cognex.VisionPro.OCVMax.CogOCVMaxResult)"><param name="pOther">The CogOCVMaxResult object to be copied. May not be NULL.</param><summary>Construct a deep copy of the supplied CogOCVMaxResult object.</summary><exception cref="T:System.OutOfMemoryException">If memory cannot be allocated for this object.</exception><exception cref="T:System.ArgumentNullException">If the input argument is NULL.</exception></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxResult.ParagraphResults"><summary>A System::Array of paragraph results, one for every paragraph for which verification was attempted.</summary><value>This read-only property is of type System::Array of CogOCVMaxParagraph.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxResult.NumParagraphsVerified"><value>This read-only property of type System::Int32 will be greater than or equal to zero.</value><summary>The number of paragraphs in this arrangement that were verified.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxResult.VerificationFullViolations"><value>This read-only property is a bit-wise OR of CogOCVMaxDOFConstants for all characters in all lines in all paragraphs in this arrangement.</value><summary>The verification full violations.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxResult.VerificationKeyViolations"><value>This read-only property is a bit-wise OR of CogOCVMaxDOFConstants for all characters in all lines in all paragraphs in this arrangement.</value><summary>The verification key violations.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxResult.VerificationScore"><value>This read-only property of type System::Double will be in the range from zero (worst) to one (best).</value><summary>The overall score of the arrangement. This is the average of the scores of all of the paragraphs that the operator attempted to verify.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxResult.ArrangementSelectedPose"><summary>The pose of the entire arrangement in selected space. Note that this property is only meaningful if ArrangementSelectedPoseValid is true.</summary><value>This read-only property is of type CogTransform2DLinear.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxResult.ArrangementSelectedPoseValid"><summary>Whether or not the pose of the entire arrangement in selected space was successfully computed.</summary><value>This read-only property is of type Boolean.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxResult.Verified"><summary>Whether or not ALL character positions in this arrangement have been verified.</summary><value>This read-only property is of type Boolean.</value></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxResult.TimedOut"><value>This read-only property is of type Boolean.</value><summary>Whether or not the operator timed out while this result was being generated. If true, then these results should be assumed to be incomplete.</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxTool"><summary>This class provides tool level access to the CogOCVMaxPattern operator. This class encapsulates all of the classes required to perform an OCVMax inspection.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxTool.SfLastRunRecordEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LastRunRecordEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxTool.SfLastRunRecordDiagEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LastRunRecordDiagEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxTool.SfCurrentRecordEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CurrentRecordEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxTool.SfPattern"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Pattern may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxTool.SfRunParams"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by RunParams may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxTool.SfInputImage"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by InputImage may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxTool.SfRegion"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Region may have changed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxTool.SfResult"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Result may have changed.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxTool.Result"><value>This read-only property is of type CogOCVMaxResult.</value><summary>The result from the last invocation of the Run method. A new instance of CogOCVMaxResult is created for each inspection.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxTool.Pattern"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><value>This read/write property is of type CogOCVMaxPattern.</value><summary>The OCVMax pattern. This embodies all train-time knowledge of the text to be inspected.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxTool.RunParams"><summary>The run parameters for this OCVMax tool.</summary><value>This read/write property is of type CogOCVMaxRunParams.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxTool.Region"><value>This read/write property is of type ICogRegion.</value><summary>Specifies the region of the InputImage that will be used to perform OCVMax analysis. The CogOCVMaxRunParams::RegionMode property specifies exactly how the ROI will be applied to the InputImage.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxTool.InputImage"><value>The image on which to perform the OCVMax analysis.</value><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><summary>The image used to perform OCVMax analysis. The Region property can be used to specify that this analysis will be performed only on a portion of the InputImage. OCVMax analysis is performed on the entire InputImage if Region is Nothing.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxTool.LastRunRecordDiagEnable"><value>This read/write property is a bitwise combination of CogOCVMaxLastRunRecordDiagConstants. Options include None, InputImageByReference, InputImageDeepCopy, Region, TransformedRegionPixels, All.</value><summary>Enable creation of records by bitwise ORing the appropriate CogOCVMaxLastRunRecordDiagConstants.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxTool.LastRunRecordEnable"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event><value>This read/write property is a bitwise combination of CogOCVMaxLastRunRecordConstants. Options include None, ParagraphBounds, ParagraphCharactersBounds, ParagraphCharactersLabel, All.</value><summary>Enable creation of records by bitwise ORing the appropriate CogOCVMaxLastRunRecordConstants.</summary></member><member name="P:Cognex.VisionPro.OCVMax.CogOCVMaxTool.CurrentRecordEnable"><value>This read/write property is a bitwise combination of CogOCVMaxCurrentRecordConstants. Options include None, InputImage, Region, All.</value><summary>Enable creation of records by bitwise ORing the appropriate CogOCVMaxCurrentRecordConstants.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed">Fires when this property changes.</event></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxFontTypeConstants"><summary>Constants used to identify the type of an imported font.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFontTypeConstants.Outline"><summary>This is an outline font, sometimes called a printer font. It consists of mathematical descriptions of what each character should look like. The characters may be rendered at any scale without loss of quality.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFontTypeConstants.Raster"><summary>This is a raster, or bitmap font. Each character is described by an array of pixels. This style font is used by some dot-matrix printers.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFontTypeConstants.Stroke"><summary>This is stroke font. Characters are described by pen or beam paths.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFontTypeConstants.Image"><summary>This is an image font.</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxFontOriginConstants"><summary>Constants used to identify the character origins of an imported image font.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFontOriginConstants.ImageCenter"><summary>Origin is the center of the image</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFontOriginConstants.ImageLowerLeft"><summary>Origin is the lower left of the image</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFontOriginConstants.SpecifiedMarkLowerLeft"><summary>Origin is the specified mark lower left</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxFontOriginConstants.DetectedMarkLowerLeft"><summary>Origin is detected in the lower left</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxPolarityConstants"><summary>Constants for specifying the brightness or darkness of the characters to be inspected relative to their background.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPolarityConstants.DarkOnLight"><summary>Characters are dark on a light background.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPolarityConstants.LightOnDark"><summary>Characters are light on a dark background.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxPolarityConstants.Unknown"><summary>The relative brightness or darkness of the characters with respect to their background is not known.</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterStatusConstants"><summary>Constants which describe the overall outcome for the inspection of a single character.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterStatusConstants.Verified"><summary>The subject character has met all inspection criteria.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterStatusConstants.Confused"><summary>The subject character may be confused with another character.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterStatusConstants.Failed"><summary>The subject character has not met all inspection criteria.</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterRegistrationConstants"><summary>Constants used to select the type of registration (fitting) done for each character found.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterRegistrationConstants.Standard"><summary>Registration is done with five degrees of freedom (affine, without skew). This takes the shortest time to run.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterRegistrationConstants.Bent"><summary>Registration is done with an affine transformation and is then further refined to model small amounts of warping.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterRegistrationConstants.Nonlinear"><summary>Registration is done entirely with a nonlinear transform that can model significant deformations of the runtime characters. This takes the longest time to run.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterRegistrationConstants.Correlation"><summary>Registration is done using correlation technology with at most translation, rotation, and uniform scale.  The maximum possible runtime ranges for rotation and uniform scale must be specified at training time.</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxRefinementConstants"><summary>Constants used to specify the amount of refinement done on the transform that represents the deformation for a particular character.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxRefinementConstants.None"><summary>Perform no refinement. There may be small amounts of error in the transform.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxRefinementConstants.Coarse"><summary>The transform will be refined to a limited accuracy.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxRefinementConstants.Stretch"><summary>The transform will be refined as with Coarse, but will also be refined to resolve high-level inaccuracies (extreme warping of a character).</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxRefinementConstants.Fine"><summary>The transform will be refined as with Stretch, but will additionally be refined to a high accuracy.</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxScoreModeConstants"><summary>Constants used to specify how we compute the score for each character. Note: ScoreUsingClutter is usually preferable to allow confusion to be computed more reliably, whereas ScoreWithoutClutter may be necessary in noisy images.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxScoreModeConstants.ScoreUsingClutter"><summary>Reduce the character score if extra features (clutter) are present.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxScoreModeConstants.ScoreWithoutClutter"><summary>Compute the score based only on the presence of expected features, ignoring any extra features (clutter).</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxScoreModeConstants.ScoreUsingOptimizedClutter"><summary>Reduce the character score if extra features (clutter) are present, but optimize score for relatively low-contrast clutter.</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxVerificationTypeConstants"><summary>Constants used to select the type of verification performed on each character.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxVerificationTypeConstants.Normal"><summary>This is standard OCV. In this mode a character may be judged Verified, or Confused, or Failed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxVerificationTypeConstants.AlwaysVerified"><summary>Score every key in the keyset associated with this character (position) and choose the highest scoring key, always judging the character as Verified.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxVerificationTypeConstants.Ignore"><summary>Do no processing at all for the subject character. The character will always be judged Verified.</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxCustomizationTypeConstants"><summary>Constants used in customizing a CogOCVMaxPattern object.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxCustomizationTypeConstants.OCVMaxTool"><summary>Customization applies to the OCVMax tool itself.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxCustomizationTypeConstants.ImageSearch"><summary>Customization applies to the image search algorithm.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxCustomizationTypeConstants.KeySearch"><summary>Customization applies to the key-to-key search algorithm.</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxDOFAttributeConstants"><summary>Constants to help specify which aspect of a particular search degree of freedom (DOF) is being accessed. Only one such attribute may be accessed at a time.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxDOFAttributeConstants.Nominal"><summary>Selects the Nominal value of a particular DOF. This is the value used when the subject DOF is not enabled.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxDOFAttributeConstants.LowerLimit"><summary>Selects the LowerLimit value of a particular DOF. This is the lower limit of the range searched when the subject DOF is enabled.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxDOFAttributeConstants.UpperLimit"><summary>Selects the UpperLimit value of a particular DOF. This is the upper limit of the range searched when the subject DOF is enabled.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxDOFAttributeConstants.Overlap"><summary>Selects the Overlap value of a particular DOF. This is the amount by which two instances must overlap in order to be considered the same result.</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterTypeConstants"><summary>Constants to aid in specifying which characters within a given font to incorporate in the alphabet for a particular paragraph. These help provide an easier way to specify an alphabet than explicitly listing each character.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterTypeConstants.None"><summary>Do not use any of the available characters in the subject paragraph's alphabet.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterTypeConstants.DecimalDigitNumber"><summary>Use those characters identified as a decimal digit number, e.g. 0, 1, 2, in the subject paragraph's alphabet.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterTypeConstants.LowercaseLetter"><summary>Use those characters identified as a lowercase letter, e.g. a, b, c, in the subject paragraph's alphabet.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterTypeConstants.UppercaseLetter"><summary>Use those characters identified as an uppercase letter, e.g. A, B, C, in the subject paragraph's alphabet.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxCharacterTypeConstants.All"><summary>Use all available characters in the subject paragraph's alphabet. This may cause both training and inspection to run more slowly than necessary.</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxDOFConstants"><summary>Constants used to specify search degree(s) of freedom (DOFs).</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxDOFConstants.None"><summary>No search degrees of freedom.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxDOFConstants.Rotation"><summary>Angular search degree of freedom.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxDOFConstants.Scale"><summary>Uniform scale search degree of freedom.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxDOFConstants.ScaleX"><summary>Scale in the X direction search degree of freedom.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxDOFConstants.ScaleY"><summary>Scale in the Y direction search degree of freedom.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxDOFConstants.Shear"><summary>Shear search degree of freedom.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxDOFConstants.Aspect"><summary>Aspect ratio. Only used to report a DOF violation in the character, line, result, or arrangement result(s). Ignored by CogOCVMaxSearchParams::DOFEnable property.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxDOFConstants.TranslationX"><summary>Translation in the X direction. Only used to report a DOF violation in the character, line, result, or arrangement result(s). Ignored by CogOCVMaxSearchParams::DOFEnable property.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxDOFConstants.TranslationY"><summary>Translation in the Y direction. Only used to report a DOF violation in the character, line, result, or arrangement result(s). Ignored by CogOCVMaxSearchParams::DOFEnabled property.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxDOFConstants.All"><summary>All search degrees of freedom.</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxTuneConstants"><summary>Constants used to specify which pattern properties to tune.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxTuneConstants.None"><summary>Do not tune any of the pattern properties.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxTuneConstants.SpotSizeScale"><summary>Tune SpotSizeScale for each and every paragraph in this arrangement. Ignored for any paragraph whose associated font does not use spot size (SpotSizeUsed is false).</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxTuneConstants.CharacterSpacingAddedX"><summary>Tune CharacterSpacingAddedX for specified paragraph(s) in this arrangement.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxTuneConstants.CharacterSpacingAddedY"><summary>Tune CharacterSpacingAddedY for specified paragraph(s) in this arrangement.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxTuneConstants.LineSpacingAddedX"><summary>Tune LineSpacingAddedX for specified paragraph(s) in this arrangement.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxTuneConstants.LineSpacingAddedY"><summary>Tune LineSpacingAddedY for specified paragraph(s) in this arrangement.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxTuneConstants.StrokeWidthAdded"><summary>Tune StrokeWidthAdded for specified paragraph(s) in this arrangement.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxTuneConstants.SpotSpacingScaleX"><summary>Tune SpotSpacingScaleX for specified paragraph(s) in this arrangement.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxTuneConstants.SpotSpacingScaleY"><summary>Tune SpotSpacingScaleY for specified paragraph(s) in this arrangement.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxTuneConstants.Polarity"><summary>Tune Polarity for specified paragraph(s) in this arrangement.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxTuneConstants.PoseScale"><summary>Tune Pose (uniform) Scale for specified paragraph(s) in this arrangement.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxTuneConstants.PoseAspect"><summary>Tune PoseAspect for specified paragraph(s) in this arrangement.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxTuneConstants.PoseRotation"><summary>Tune PoseRotation for specified paragraph(s) in this arrangement.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxTuneConstants.PoseShear"><summary>Tune PoseShear for specified paragraph(s) in this arrangement.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxTuneConstants.All"><summary>Tune all available pattern properties.</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxComputePosesConstants"><summary>Constants used to specify which poses to compute at run time. Computing poses takes additional execution time and may not be needed in all applications. Note that poses of individual characters are always computed.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxComputePosesConstants.None"><summary>Do not compute any of the optional poses (neither line nor paragraph nor arrangement).</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxComputePosesConstants.Line"><summary>Compute line poses.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxComputePosesConstants.Paragraph"><summary>Compute paragraph poses.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxComputePosesConstants.Arrangement"><summary>Compute arrangement poses.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxComputePosesConstants.All"><summary>Compute all poses.</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphResultGraphicConstants"><summary>Constants used to specify desired result graphics for CogOCVMaxParagraphResult::CreateResultGraphics().</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphResultGraphicConstants.None"><summary>Do not draw any result graphics for this paragraph.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphResultGraphicConstants.TipText"><summary>Add tooltip text to this paragraph.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphResultGraphicConstants.ParagraphBounds"><summary>Draw a bounding affine rectangle around the entire paragraph.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphResultGraphicConstants.CharactersBounds"><summary>Draw a bounding affine rectangle around each found character within this paragraph.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphResultGraphicConstants.CharactersLabel"><summary>Label each found character, e.g. A, B, C.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxParagraphResultGraphicConstants.All"><summary>Draw all of the paragraph result graphics.</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxCurrentRecordConstants"><summary>Enumeration of data that can be included in the tool's CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxCurrentRecordConstants.None"><summary>Do not include any records in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxCurrentRecordConstants.InputImage"><summary>Include the input image in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxCurrentRecordConstants.Region"><summary>Include the region to be processed in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxCurrentRecordConstants.All"><summary>Include all possible records in the CurrentRecord.</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxLastRunRecordConstants"><summary>Enumeration of Non-Diagnostic data that can be included in the tool's LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxLastRunRecordConstants.None"><summary>Do not include any of the non-diagnostic data in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxLastRunRecordConstants.ParagraphBounds"><summary>Draw a bounding affine rectangle around each paragraph.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxLastRunRecordConstants.ParagraphCharactersBounds"><summary>Draw a bounding affine rectangle around each found character.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxLastRunRecordConstants.ParagraphCharactersLabel"><summary>Label each found character, e.g. A, B, C.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxLastRunRecordConstants.All"><summary>Include all of the non-diagnostic data in the LastRunRecord.</summary></member><member name="T:Cognex.VisionPro.OCVMax.CogOCVMaxLastRunRecordDiagConstants"><summary>Enumeration of Diagnostic data that can be included in the tool's LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxLastRunRecordDiagConstants.None"><summary>Do not include any of the diagnostic data in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxLastRunRecordDiagConstants.InputImageByReference"><summary>Include a reference to the input image in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxLastRunRecordDiagConstants.InputImageDeepCopy"><summary>Include a deep copy of the input image in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxLastRunRecordDiagConstants.Region"><summary>Generate a record containing the Region.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxLastRunRecordDiagConstants.TransformedRegionPixels"><summary>Generate a record containing the pixels within the Region.</summary></member><member name="F:Cognex.VisionPro.OCVMax.CogOCVMaxLastRunRecordDiagConstants.All"><summary>Include all of the diagnostic data in the LastRunRecord.</summary></member></members></doc>