<?xml version="1.0"?><doc><assembly><name>Cognex.VisionPro.OC</name></assembly><members><member name="T:Cognex.VisionPro.Exceptions.CogOCFontNotCompiledException"><summary>The exception that is thrown when the character font is not compiled.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogOCFontDuplicateNameInstanceException"><summary>The exception that is thrown when more than one CogOCFontModel has the same Name and Instance properties.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogOCFontNoModelsException"><summary>The exception that is thrown when <see cref="P:Cognex.VisionPro.OC.CogOCFont.FontModels" /> is null or empty.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogOCFontNoModelImageException"><summary>The exception that is thrown when a nonblank CogOCFontModel has a null Image property.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogOCFontCVLArchiveErrorException"><summary>The exception that is thrown when an error occurs reading or writing a CVL font archive.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogOCFontModelImageTooSmallException"><summary>The exception that is thrown when at least one of the nonblank font models has a height or a width less than 3 pixels.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogOCVNoFontException"><summary>The exception that is thrown when the <see cref="P:Cognex.VisionPro.OC.CogOCVPattern.Font" /> property is null.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogOCVNoCharacterPositionsException"><summary>The exception that is thrown when the <see cref="P:Cognex.VisionPro.OC.CogOCVPattern.CharacterPositions" /> collection is empty.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogOCVInvalidFontModelException"><summary>The exception that is thrown when one of the character positions has a font model name and instance that is not a member of the font.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogOCVNoFontModelFoundException"><summary>The exception that is thrown when no font model was found (i.e. the <see cref="P:Cognex.VisionPro.OC.CogOCVResult.Status" /> propert is set to 'Failed').</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogOCVNoFontModelsException"><summary>The exception that is thrown when at least one of the character positions has no font models listed for verification.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogOCVInvalidPatternPositionException"><summary>The exception that is thrown when the pattern position is not valid because of one of the following reasons: (1) Its selected space name is not a valid space of the input image's space tree, (2) Its selected space name is a nonqualified space name and more than one instance of it exists in the input image's space tree, or (3) Its selected space name is not a legal space name.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogOCVNoNormalModelsException"><summary>The exception that is thrown when the OCV pattern does not contain any nonblank models.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogOCArrangerNoCharacterPositionsException"><summary>The exception that is thrown when the collection is empty.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogOCArrangerInvalidFontModelException"><summary>The exception that is thrown when one of the character positions has a font model name and instance that is not a member of the font.</summary></member><member name="T:Cognex.VisionPro.Exceptions.CogOCArrangerNoFontException"><summary>The exception that is thrown when the <see cref="P:Cognex.VisionPro.OC.CogOCVPattern.Font" /> property is null.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCFontModel"><summary>Provides access to the properties of an optical character font model.  This can be a normal font model which is used to inspect for the presence of a character or a blank font model which is used to inspect for the absence of any character.</summary><remarks><PARA>
	Interface which provide access to the properties of an optical character font model.  This can be a normal font model which is used to inspect for the presence of a character or a blank font model which is used to inspect for the absence of any character.
	</PARA></remarks></member><member name="M:Cognex.VisionPro.OC.CogOCFontModel.#ctor(Cognex.VisionPro.OC.CogOCFontModel)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFontModel.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFontModel.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCFontModel.SfName"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Name may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCFontModel.SfInstance"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Instance may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCFontModel.SfDescription"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Description may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCFontModel.SfType"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Type may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCFontModel.SfOrigin"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Origin may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCFontModel.SfImage"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Image may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCFontModel.SfImageMask"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ImageMask may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCFontModel.SfImageMaskOffsetX"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ImageMaskOffsetX may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCFontModel.SfImageMaskOffsetY"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ImageMaskOffsetY may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCFontModel.SfBlankWidth"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by BlankWidth may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCFontModel.SfBlankHeight"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by BlankHeight may have changed.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCFontModel.BlankHeight"><remarks><PARA>
		If the <see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Type" /> of this model is 
	<see cref="T:Cognex.VisionPro.OC.CogOCFontModelTypeConstants">Blank</see> then this 
	property specifies the height of the model in pixels.
	</PARA><DEFAULT>48</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The height is &lt;= 0.</para></exception><summary>BlankWidth and BlankHeight specify the size, in pixel units, of a blank model image.  The Image property is not used for blank models.</summary><event cref="E:Cognex.VisionPro.OC.CogOCFontModel.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCFontModel_BlankHeight--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCFontModel.SfBlankHeight" /></li></ul></event></member><member name="P:Cognex.VisionPro.OC.CogOCFontModel.BlankWidth"><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The width is &lt;= 0.</para></exception><summary>BlankWidth and BlankHeight specify the size, in pixel units, of a blank model image.  The Image property is not used for blank models.</summary><remarks><PARA>
		If the <see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Type" /> of this model is 
	<see cref="T:Cognex.VisionPro.OC.CogOCFontModelTypeConstants">Blank</see> then this 
	property specifies the width of the model in pixels.
	</PARA><DEFAULT>24</DEFAULT></remarks><event cref="E:Cognex.VisionPro.OC.CogOCFontModel.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCFontModel_BlankWidth--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCFontModel.SfBlankWidth" /></li></ul></event></member><member name="P:Cognex.VisionPro.OC.CogOCFontModel.ImageMaskOffsetY"><event cref="E:Cognex.VisionPro.OC.CogOCFontModel.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCFontModel_ImageMaskOffsetY--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCFontModel.SfImageMaskOffsetY" /></li></ul></event><remarks><PARA>The mask Y-offset value in pixels.  The 
	offset is the distance from the upper-left corner of the 
	<see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Image" /> to the upper-left corner of the <see cref="P:Cognex.VisionPro.OC.CogOCFontModel.ImageMask" /> in pixels.</PARA><DEFAULT>0</DEFAULT></remarks><summary>Y offset value in pixels.  The X &amp; Y offset values measure the offset from the upper-left corner of the Image to the upper-left corner of the ImageMask, in image coordinates of the Image.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCFontModel.ImageMaskOffsetX"><summary>X offset value in pixels.  The X &amp; Y offset values measure the offset from the upper-left corner of the Image to the upper-left corner of the ImageMask, in image coordinates of the Image.</summary><event cref="E:Cognex.VisionPro.OC.CogOCFontModel.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCFontModel_ImageMaskOffsetX--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCFontModel.SfImageMaskOffsetX" /></li></ul></event><remarks><PARA>The mask X-offset value in pixels.  The 
	offset is the distance from the upper-left corner of the 
	<see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Image" /> to the upper-left corner of the <see cref="P:Cognex.VisionPro.OC.CogOCFontModel.ImageMask" /> in pixels.</PARA><DEFAULT>0</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.OC.CogOCFontModel.ImageMask"><event cref="E:Cognex.VisionPro.OC.CogOCFontModel.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCFontModel_ImageMask--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCFontModel.SfImageMask" /></li></ul></event><remarks><PARA>A 
	<see cref="u:Identification.OCV.Theory.OCVTool" cgnxAnchor="masks">mask</see> which allows the user to identify areas of the font model image, or blank region, as care or don't care. Only model pixels corresponding to care pixels in the mask are used for verifying a font model. All pixels with values less than 128 are don't care pixels; 
all pixels with values greater than or equal to 128 are care pixels.</PARA><DEFAULT>Null</DEFAULT></remarks><summary>A mask which allows the user to identify areas of the font model image, or blank region, as care or don't care.  Only model pixels corresponding to care pixels in the mask are used for verifying a font model.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCFontModel.Image"><summary>Image of the character to be verified for a normal font model.  The Image property is ignored for a blank model.</summary><remarks><PARA>
		An image of the character to be verified for a normal font model.  
	If the <see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Type" /> of this model is 
	<see cref="T:Cognex.VisionPro.OC.CogOCFontModelTypeConstants">Blank</see> then this 
	property is ignored.
	</PARA><DEFAULT>Null</DEFAULT></remarks><event cref="E:Cognex.VisionPro.OC.CogOCFontModel.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCFontModel_Image--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCFontModel.SfImage" /></li></ul></event></member><member name="P:Cognex.VisionPro.OC.CogOCFontModel.Origin"><summary>A transform that defines the origin of the model relative to the model's image pixels.  It is a pixel space from model origin space transform.  In the case of blank models, the width and height define a rectangle which is equivalent to image pixel space.</summary><event cref="E:Cognex.VisionPro.OC.CogOCFontModel.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCFontModel_Origin--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCFontModel.SfOrigin" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The transform is NULL.</para></exception><remarks><PARA>A transform that defines the origin of the model relative to the model's image pixels.  It is a pixel space from model origin space transform.  In the case of blank models, the width and height define a rectangle which is equivalent to image pixel space.</PARA><DEFAULT>The identity transformation.</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.OC.CogOCFontModel.Type"><remarks><PARA>
	If this property is 
	<see cref="T:Cognex.VisionPro.OC.CogOCFontModelTypeConstants">Blank</see> then this 
	is a blank model, which is used to verify the absence of a character. Blank models 
	are defined by their <see cref="P:Cognex.VisionPro.OC.CogOCFontModel.BlankWidth" />, <see cref="P:Cognex.VisionPro.OC.CogOCFontModel.BlankHeight" /> and 
	<see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Origin" />.
	If this property is 
	<see cref="T:Cognex.VisionPro.OC.CogOCFontModelTypeConstants">Normal</see> then this 
	model is used to verify a character. 
	</PARA></remarks><summary>Indicates whether this is a normal or blank model. A normal model is used to inspect for the presence of a character and is defined by an image of the character. A blank is used to inspect for the absence of a character defined by a width and height.</summary><event cref="E:Cognex.VisionPro.OC.CogOCFontModel.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCFontModel_Type--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCFontModel.SfType" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The model type is not
			<see cref="T:Cognex.VisionPro.OC.CogOCFontModelTypeConstants">Normal</see> or
			<see cref="T:Cognex.VisionPro.OC.CogOCFontModelTypeConstants">Blank</see>.
	</para></exception></member><member name="P:Cognex.VisionPro.OC.CogOCFontModel.Description"><event cref="E:Cognex.VisionPro.OC.CogOCFontModel.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCFontModel_Description--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCFontModel.SfDescription" /></li></ul></event><summary>Description simply provides a string for the user to store additional information or comments about their font model.</summary><remarks><PARA>A text string that provides information about this model. You 
	can use this property to store any data.</PARA></remarks></member><member name="P:Cognex.VisionPro.OC.CogOCFontModel.Instance"><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The instance number is &lt; 0 or &gt; 255.</para></exception><event cref="E:Cognex.VisionPro.OC.CogOCFontModel.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCFontModel_Instance--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCFontModel.SfInstance" /></li></ul></event><remarks><PARA>The 
	<see cref="u:Identification.OCV.Theory.OCVTool" cgnxAnchor="character_instances">instance</see> of this font model. 
	Using instances let you include multiple variations for a particular character in 
	your font. This property may be set to values from 0 through 255.</PARA><DEFAULT>0</DEFAULT></remarks><summary>The Instance of this font model.  The Name and Instance of a font model uniquely identify the model within a font.  Valid instance number is between 0 and 255, inclusive.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCFontModel.Name"><summary>The Name of this font model.  The Name and Instance of a font model uniquely identify the model within a font.</summary><remarks><PARA>The Name of this font model.  The Name and 
	<see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Instance" /> of a font model uniquely identify a model within a font.</PARA></remarks><event cref="E:Cognex.VisionPro.OC.CogOCFontModel.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCFontModel_Name--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCFontModel.SfName" /></li></ul></event></member><member name="P:Cognex.VisionPro.OC.CogOCFontModel.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCFontModel.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFontModel.~CogOCFontModel"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFontModel.!CogOCFontModel"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFontModel.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFontModel.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFontModel.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="E:Cognex.VisionPro.OC.CogOCFontModel.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCFontModels"><remarks><PARA>A collection of optical character font models.</PARA></remarks><summary>A collection of optical character font models.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFontModels.#ctor(Cognex.VisionPro.OC.CogOCFontModels)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFontModels.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFontModels.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCFontModels.Item(System.Int32)"><param name="index">The index of the item to get or set.</param><summary>Gets or sets the item at the specified index.  In C#, this property is the indexer for the collection.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCFontModels.SyncRoot"><summary>Gets an object that can be used to synchronize access to this collection.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCFontModels.IsSynchronized"><summary>Gets a value indicating whether access to this collection is synchronized (thread-safe).</summary></member><member name="P:Cognex.VisionPro.OC.CogOCFontModels.Count"><summary>Gets the number of items contained in this collection.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCFontModels.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCFontModels.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFontModels.~CogOCFontModels"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFontModels.!CogOCFontModels"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFontModels.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFontModels.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFontModels.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFontModels.CopyTo(System.Array,System.Int32)"><param name="array">The array into which to copy.</param><param name="index">The index from which to start copying.</param><summary>Copies the contents of this collection to an array.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFontModels.Clear"><summary>Removes all items from this collection.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFontModels.Move(System.Int32,System.Int32)"><param name="fromIndex">The index of the item to move.</param><param name="toIndex">The index to which the item will be moved.</param><summary>Moves the selected item to a new index in this collection.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFontModels.IndexOf(Cognex.VisionPro.OC.CogOCFontModel)"><param name="value">The item whose index is desired.</param><summary>Gets the index of the given item.  If the item cannot be found -1 is returned.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFontModels.Insert(Cognex.VisionPro.OC.CogOCFontModel,System.Int32)"><param name="value">The item to be inserted.</param><param name="index">The index at which to insert the item.</param><summary>Inserts the given item at the specified index.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFontModels.Add(Cognex.VisionPro.OC.CogOCFontModel)"><param name="value">The item to be added.</param><summary>Adds the given item to the end of this collection.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFontModels.RemoveAt(System.Int32)"><param name="index">The index of the item to remove.</param><summary>Removes the item at the specified index.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFontModels.Sort"><summary>Sort the font model collection in ascending order by Name first and then by Instance.</summary><remarks><PARA>
	Sorts the font model collection in ascending order by 
	<see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Name" /> and 
	<see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Instance" />.
	</PARA></remarks><EVENT TYPELIB="CognexCore" IFACE="ICogCollectionEvents" FUNC="ItemReplaced"><ACTUAL_PARAMS><ACTUAL_PARAM><LINK TYPELIB="CognexCore" ENUM="constants">cogNoIndex</LINK></ACTUAL_PARAM><ACTUAL_PARAM><LINK TYPELIB="CognexCore" ENUM="constants">cogNoIndex</LINK></ACTUAL_PARAM></ACTUAL_PARAMS>
		Fires when the collection is sorted. 
	</EVENT></member><member name="M:Cognex.VisionPro.OC.CogOCFontModels.GetFontModelByNameInstance(System.String,System.Int32)"><param name="name"><PARA>The name of the font model to get.</PARA></param><param name="instance"><PARA>The instance of the font model to get.</PARA></param><exception cref="T:Cognex.VisionPro.Exceptions.CogOCFontDuplicateNameInstanceException" cgnxHRESULT="E_CogOCFont_DuplicateNameInstance"><para>Two or more models have the same
				<paramref name="name" /> and <paramref name="instance" /> combination.</para></exception><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="instance" /> is less than 0 or greater than 255.</para></exception><returns><PARA>The returned <see cref="T:Cognex.VisionPro.OC.CogOCFontModel" />.</PARA></returns><summary>Get the font model identified by the Name and Instance input arguments.</summary><remarks><PARA>
	Gets the font model with the supplied 
	<see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Name" /> and 
	<see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Instance" />.
	</PARA><PARA>
	This function returns Nothing if no font is found with the specified name and instance.
	</PARA></remarks></member><member name="E:Cognex.VisionPro.OC.CogOCFontModels.MovedItem"><summary>Occurs after an item is moved to a new index.</summary></member><member name="E:Cognex.VisionPro.OC.CogOCFontModels.MovingItem"><summary>Occurs before an item is moved to a new index.</summary></member><member name="E:Cognex.VisionPro.OC.CogOCFontModels.ReplacedItem"><summary>Occurs after an item is replaced in this collection.</summary></member><member name="E:Cognex.VisionPro.OC.CogOCFontModels.ReplacingItem"><summary>Occurs before an item is replaced in this collection.</summary></member><member name="E:Cognex.VisionPro.OC.CogOCFontModels.RemovedItem"><summary>Occurs after an item is removed from this collection.</summary></member><member name="E:Cognex.VisionPro.OC.CogOCFontModels.RemovingItem"><summary>Occurs before an item is removed from this collection.</summary></member><member name="E:Cognex.VisionPro.OC.CogOCFontModels.InsertedItem"><summary>Occurs after an item is inserted into this collection.</summary></member><member name="E:Cognex.VisionPro.OC.CogOCFontModels.InsertingItem"><summary>Occurs before an item is inserted into this collection.</summary></member><member name="E:Cognex.VisionPro.OC.CogOCFontModels.Cleared"><summary>Occurs after this collection is cleared.</summary></member><member name="E:Cognex.VisionPro.OC.CogOCFontModels.Clearing"><summary>Occurs before this collection is cleared.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCFont"><remarks><PARA>
	Interface for an optical character font. This interface includes properties and methods that 
	let you specify the font's 
	<see cref="P:Cognex.VisionPro.OC.CogOCFont.ConfusionThreshold">confusion threshold</see>, 
	determine how <see cref="M:Cognex.VisionPro.OC.CogOCFont.Confusable(Cognex.VisionPro.OC.CogOCFontModel,Cognex.VisionPro.OC.CogOCFontModel)">confusable</see> font model pairs are, and
	<see cref="M:Cognex.VisionPro.OC.CogOCFont.Compile" />the font. 
	It also contains the 
	<see cref="P:Cognex.VisionPro.OC.CogOCFont.FontModels">collection of models</see> that make up the font.
	</PARA></remarks><summary>Default interface of this class provides access to an optical character font's properties, Compile method, Uncompile method, and the results of compiling the font.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFont.#ctor(Cognex.VisionPro.OC.CogOCFont)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFont.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFont.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCFont.SfDescription"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Description may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCFont.SfTimeoutEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TimeoutEnabled may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCFont.SfTimeout"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Timeout may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCFont.SfFontModels"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by FontModels may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCFont.SfConfusionThreshold"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ConfusionThreshold may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCFont.SfCompiled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Compiled may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCFont.SfConfusion"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Confusion may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCFont.SfConfusable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Confusable may have changed.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCFont.Compiled"><remarks><PARA>True if the font is compiled, false otherwise.</PARA></remarks><summary>True if the font is compiled.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCFont.ConfusionThreshold"><summary>Threshold at which two models are considered Confusable. A compiled font contains Confusion scores for all model pairs in the font.  A score greater than this threshold indicates that a model pair should be considered confusing.</summary><remarks><PARA>
	You specify the 
	<see cref="M:Cognex.VisionPro.OC.CogOCFont.Confusion(Cognex.VisionPro.OC.CogOCFontModel,Cognex.VisionPro.OC.CogOCFontModel)" /> (in the range 0.0 through 1.0)
	to tell the tool the confusion score above which two 
	characters are to be treated as potentially confusing.
	</PARA><PARA>
	As you decrease the confusion threshold, the OCV tool compares more characters with the expected character. As you increase the confusion threshold, the tool compares fewer characters.
	</PARA><DEFAULT>0.5</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The confusion threshold is &lt; 0 or &gt; 1.</para></exception><event cref="E:Cognex.VisionPro.OC.CogOCFont.Changed" cgnxEvent="singleState"><para>
        
Fires when the confusion threshold changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCFont_ConfusionThreshold--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCFont.SfConfusionThreshold" /></li></ul></event><event cref="E:Cognex.VisionPro.OC.CogOCFont.Changed" cgnxEvent="multiState"><para>
        
Fires when the confusion threshold changes and one or more <see cref="M:Cognex.VisionPro.OC.CogOCFont.Confusable(Cognex.VisionPro.OC.CogOCFontModel,Cognex.VisionPro.OC.CogOCFontModel)" /> values also changed. 
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_OCFont_ConfusionThreshold--><li><see cref="F:Cognex.VisionPro.OC.CogOCFont.SfConfusionThreshold" /></li><!--FA:cogFA_OCFont_Confusable--><li><see cref="F:Cognex.VisionPro.OC.CogOCFont.SfConfusable" /></li></ul></event></member><member name="P:Cognex.VisionPro.OC.CogOCFont.FontModels"><remarks><PARA>
	This font's collection of <see cref="u:Identification.OCV.Theory.OCVTool" cgnxAnchor="font_models">models</see>.
	</PARA></remarks><event cref="E:Cognex.VisionPro.OC.CogOCFont.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCFont_FontModels--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCFont.SfFontModels" /></li></ul></event><event cref="E:Cognex.VisionPro.OC.CogOCFont.Changed" cgnxEvent="multiState"><para>
        
Fires when this property changes and the font was untrained. 
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_OCFont_FontModels--><li><see cref="F:Cognex.VisionPro.OC.CogOCFont.SfFontModels" /></li><!--FA:cogFA_OCFont_CompileResults--><li><see cref="F:Cognex.VisionPro.OC.CogOCFont.SfCompiled" /></li><li><see cref="F:Cognex.VisionPro.OC.CogOCFont.SfConfusion" /></li><!--FA:cogFA_OCFont_Confusable--><li><see cref="F:Cognex.VisionPro.OC.CogOCFont.SfConfusable" /></li></ul></event><summary>Collection of font models for this font.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCFont.Timeout"><event cref="E:Cognex.VisionPro.OC.CogOCFont.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCFont_Timeout--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCFont.SfTimeout" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The timeout period is &lt; 0.</para></exception><summary>The maximum time (msec) allowed to compile the font.  If compilation has not finished by the end of the timeout period, it will stop soon thereafter and return E_Cog_TimeoutExpired.  This value only applies if TimeoutEnabled is true.</summary><remarks><PARA>The maximum amount of time, in milliseconds, allowed to compile the font.
	If the compilation is not finished within the timeout period, it will stop soon thereafter and <see cref="M:Cognex.VisionPro.OC.CogOCFont.Compile" /> returns <see cref="T:Cognex.VisionPro.CogErrConstants">E_Cog_TimeoutExpired</see>.</PARA><NOTE>The actual timeout period can exceed the requested maximum by up to 0.02 seconds on a 200 MHz Pentium I processor. Typical
	latencies are much lower with faster CPUs.</NOTE><PARA>This value applies only when <see cref="P:Cognex.VisionPro.OC.CogOCFont.TimeoutEnabled" /> is True.</PARA><DEFAULT>30000  milliseconds</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.OC.CogOCFont.TimeoutEnabled"><event cref="E:Cognex.VisionPro.OC.CogOCFont.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCFont_TimeoutEnabled--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCFont.SfTimeoutEnabled" /></li></ul></event><remarks><PARA>
	Sets or gets whether the <see cref="P:Cognex.VisionPro.OC.CogOCFont.Timeout" /> property specifies the maximum amount of time allowed to compile the font.
	If this property is False, the <see cref="P:Cognex.VisionPro.OC.CogOCFont.Timeout" /> property is ignored.	</PARA><DEFAULT>False</DEFAULT></remarks><summary>If true then the Timeout property limits the amount of time allowed for compilation of the font.  If false then timeout is disabled and the Timeout property is ignored.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCFont.Description"><remarks><PARA>	
	A string that you can use to store a description of this font, or other information.
</PARA></remarks><summary>Description simply provides a string for the user to store additional information or comments about their font.</summary><event cref="E:Cognex.VisionPro.OC.CogOCFont.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCFont_Description--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCFont.SfDescription" /></li></ul></event></member><member name="P:Cognex.VisionPro.OC.CogOCFont.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCFont.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFont.~CogOCFont"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFont.!CogOCFont"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFont.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFont.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFont.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFont.Confusion(Cognex.VisionPro.OC.CogOCFontModel,Cognex.VisionPro.OC.CogOCFontModel)"><param name="model1"><PARA>The first model.</PARA></param><param name="model2"><PARA>The second model.</PARA></param><summary>Get the Confusion score for the specified model pair.  The Confusion score for a pair of models is the probability, on a scale of 0 to 1, that the two models will be confused with each other during verification.</summary><remarks><PARA>
	Returns the <see cref="u:Identification.OCV.Theory.OCVTool" cgnxAnchor="font_confusion">confusion score</see> for the 
	two supplied models.
	</PARA><PARA>
The confusion score for two models may not be symmetric. That is,
the confusion score calculated for A compared with B may be
different than the confusion score obtained for B compared with A. 
You should supply the model being verified as <paramref name="model1" /> and 
the model being evaluated for confusion as <paramref name="model2" />.
</PARA></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="model1" /> or <paramref name="model2" /> is NULL.</para></exception><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="model1" /> or <paramref name="model2" /> is not a member of the <see cref="P:Cognex.VisionPro.OC.CogOCFont.FontModels" /> collection.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOCFontNotCompiledException" cgnxHRESULT="E_CogOCFont_NotCompiled"><para>The font is not compiled.</para></exception><returns><PARA>The confusion score, in the range 0.0 through 1.0.</PARA></returns></member><member name="M:Cognex.VisionPro.OC.CogOCFont.Confusable(Cognex.VisionPro.OC.CogOCFontModel,Cognex.VisionPro.OC.CogOCFontModel)"><param name="model1"><PARA>The first model to compare.</PARA></param><param name="model2"><PARA>The second model to compare.</PARA></param><remarks><PARA>
	Returns true if the specified pair of font models are confusable. Two models are confusable 
	if their <see cref="u:Identification.OCV.Theory.OCVTool" cgnxAnchor="font_confusion">confusion score</see> is greater than 
	the <see cref="P:Cognex.VisionPro.OC.CogOCFont.ConfusionThreshold" /> defined for this font.
	</PARA><PARA>
The <see cref="M:Cognex.VisionPro.OC.CogOCFont.Confusion(Cognex.VisionPro.OC.CogOCFontModel,Cognex.VisionPro.OC.CogOCFontModel)" /> score for two models may not be symmetric. That is,
the confusion score calculated for A compared with B may be
different than the confusion score obtained for B compared with A. 
You should supply the model being verified as <paramref name="model1" /> and 
the model being evaluated for confusion as <paramref name="model2" />.
</PARA></remarks><returns><PARA>
	True if the confusion score of 
	<paramref name="model1" /> and <paramref name="model2" /> exceeds 
	the <see cref="P:Cognex.VisionPro.OC.CogOCFont.ConfusionThreshold" /> of this font, false otherwise.
	</PARA></returns><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="model1" /> or <paramref name="model2" /> is NULL.</para></exception><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="model1" /> or <paramref name="model2" /> is not a member of the <see cref="P:Cognex.VisionPro.OC.CogOCFont.FontModels" /> collection.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOCFontNotCompiledException" cgnxHRESULT="E_CogOCFont_NotCompiled"><para>The font is not compiled.</para></exception><summary>Returns true if the specified model pair are confusable.  Two models are confusable if their Confusion score is greater than the ConfusionThreshold specified by the user.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFont.Uncompile"><remarks><PARA>Uncompiles this font.</PARA></remarks><summary>Uncompile this font.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCFont.Compile"><remarks><PARA><see cref="u:Identification.OCV.Theory.OCVTool" cgnxAnchor="compiling_the_font">Compiles</see> this font. 
	Font compilation includes computing the 
	<see cref="u:Identification.OCV.Theory.OCVTool" cgnxAnchor="font_confusion">confusion scores</see>
	for all possible model pairings in the font.
</PARA></remarks><summary>Compiles this font which involves computing the confusion scores for all possible model pairings in the font.</summary><event cref="E:Cognex.VisionPro.OC.CogOCFont.Changed" cgnxEvent="multiState"><para>
        
Fires when the font was compiled successfully. 
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_OCFont_CompileResults--><li><see cref="F:Cognex.VisionPro.OC.CogOCFont.SfCompiled" /></li><li><see cref="F:Cognex.VisionPro.OC.CogOCFont.SfConfusion" /></li><!--FA:cogFA_OCFont_Confusable--><li><see cref="F:Cognex.VisionPro.OC.CogOCFont.SfConfusable" /></li></ul></event><exception cref="T:Cognex.VisionPro.Exceptions.CogOCFontNoModelsException" cgnxHRESULT="E_CogOCFont_NoModels"><para><see cref="P:Cognex.VisionPro.OC.CogOCFont.FontModels" /> is NULL or empty.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOCFontDuplicateNameInstanceException" cgnxHRESULT="E_CogOCFont_DuplicateNameInstance"><para>Two or more models have the same
				<see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Name" /> and <see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Instance" /> combination.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageNoPixelsException" cgnxHRESULT="E_CogImage_NoPixels"><para>At least one of the normal (nonblank) models has an <see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Image" /> that is not allocated.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOCFontNoModelImageException" cgnxHRESULT="E_CogOCFont_NoModelImage"><para>At least one of the normal (nonblank) models has a NULL <see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Image" />.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogTimeoutExpiredException" cgnxHRESULT="E_Cog_TimeoutExpired"><para>The compilation <see cref="P:Cognex.VisionPro.OC.CogOCFont.Timeout" /> period expired. (Applies only if <see cref="P:Cognex.VisionPro.OC.CogOCFont.TimeoutEnabled" /> is True.)</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOCFontModelImageTooSmallException" cgnxHRESULT="E_CogOCFont_ModelImageTooSmall"><para>At least one of the nonblank models has a  height or a width less than 3 pixels.</para></exception></member><member name="M:Cognex.VisionPro.OC.CogOCFont.ExportToCvlArchive(System.String)"><param name="fileName"><PARA>The file to which to archive the font.</PARA></param><summary>Exports this font to the specified CVL archive as a ccOCAlphabetPtrh.  If this font is compiled then the CVL will contain a compiled font.</summary><remarks><PARA>
	Exports this font to the specified CVL archive as a 
	<paramref name="ccOCAlphabetPtrh" />.  If this font is 
	<see cref="P:Cognex.VisionPro.OC.CogOCFont.Compiled" /> then the CVL archive will contain a compiled font.
	</PARA></remarks><exception cref="T:Cognex.VisionPro.Exceptions.CogOCFontDuplicateNameInstanceException" cgnxHRESULT="E_CogOCFont_DuplicateNameInstance"><para>Two or more models have the same
				<see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Name" /> and <see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Instance" /> combination.</para></exception><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="fileName" /> is empty or NULL.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogFileOpenException" cgnxHRESULT="E_Cog_FileOpen"><para><paramref name="fileName" /> cannot be opened.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOCFontCvlArchiveErrorException" cgnxHRESULT="E_CogOCFont_CvlArchiveError"><para>An error occurred while saving to the CVL archive.</para></exception></member><member name="M:Cognex.VisionPro.OC.CogOCFont.ImportFromCvlArchive(System.String)"><param name="fileName"><PARA>The file from which to load the archive.</PARA></param><event cref="E:Cognex.VisionPro.OC.CogOCFont.Changed" cgnxEvent="multiState"><para>
        
Fires when the font was compiled successfully. 
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_OCFont_CompileResults--><li><see cref="F:Cognex.VisionPro.OC.CogOCFont.SfCompiled" /></li><li><see cref="F:Cognex.VisionPro.OC.CogOCFont.SfConfusion" /></li><!--FA:cogFA_OCFont_Confusable--><li><see cref="F:Cognex.VisionPro.OC.CogOCFont.SfConfusable" /></li><!--FA:cogFA_OCFont_ConfusionThreshold--><li><see cref="F:Cognex.VisionPro.OC.CogOCFont.SfConfusionThreshold" /></li><!--FA:cogFA_OCFont_FontModels--><li><see cref="F:Cognex.VisionPro.OC.CogOCFont.SfFontModels" /></li><!--FA:cogFA_Misc--><li><see cref="F:Cognex.VisionPro.OC.CogOCFont.SfDescription" /></li><li><see cref="F:Cognex.VisionPro.OC.CogOCFont.SfTimeoutEnabled" /></li><li><see cref="F:Cognex.VisionPro.OC.CogOCFont.SfTimeout" /></li></ul></event><remarks><PARA>
	Imports a <paramref name="ccOCAlphabet" /> object from the specified CVL archive file into this font.  The supplied archive should contain a single <paramref name="ccOCAlphabet" /> object.  
Import will try to load from the CVL archive via either a ccOCAlphabet or a ccOCAlphabetPtrh.
	</PARA></remarks><summary>Imports a ccOCAlphabet class from the specified CVL archive file into this CogOCFont class.  The archive should contain a single ccOCAlphabet.  Import will try to load from the CVL archive via either a ccOCAlphabet or a ccOCAlphabetPtrh.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="fileName" /> is empty or NULL.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogFileOpenException" cgnxHRESULT="E_Cog_FileOpen"><para><paramref name="fileName" /> cannot be opened.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOCFontCvlArchiveErrorException" cgnxHRESULT="E_CogOCFont_CvlArchiveError"><para>An error occurred while reading from the CVL archive.
	The internal state of the font is unchanged.</para></exception></member><member name="E:Cognex.VisionPro.OC.CogOCFont.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCVCharacterPosition"><summary>Default interface of this class provides access to the character position parameters.  User can specify which character models to verify, their expected position and positional uncertainties, as well as their accept and confidence thresholds.</summary><remarks><PARA>
	Interface that provides access to the character position parameters. 
	This interface lets you specify which character models to verify, their expected 
	positions and positional uncertainties, as well as their 
	<see cref="u:Identification.OCV.Theory.OCVTool" cgnxAnchor="accept_and_confidence_thresholds_at_runtime">accept and confidence</see> 
	thresholds.
	</PARA></remarks></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPosition.#ctor(Cognex.VisionPro.OC.CogOCVCharacterPosition)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPosition.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPosition.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfFontModelCount"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by FontModelCount may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfGetFontModelName"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetFontModelName may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfGetFontModelInstance"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by GetFontModelInstance may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfTranslationX"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TranslationX may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfTranslationY"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TranslationY may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfRotation"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Rotation may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfScaling"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Scaling may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfTranslationUncertainty"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TranslationUncertainty may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfRotationUncertainty"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by RotationUncertainty may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfScalingUncertainty"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ScalingUncertainty may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfUsePatternCharacterUncertainties"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by UsePatternCharacterUncertainties may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfRunTimeAcceptThreshold"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by RunTimeAcceptThreshold may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfRunTimeConfidenceThreshold"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by RunTimeConfidenceThreshold may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfUsePatternRunTimeCharacterThresholds"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by UsePatternRunTimeCharacterThresholds may have changed.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.UsePatternRunTimeCharacterThresholds"><event cref="E:Cognex.VisionPro.OC.CogOCVCharacterPosition.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVCharacterPosition_UsePatternRunTimeCharacterThresholds--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfUsePatternRunTimeCharacterThresholds" /></li></ul></event><remarks><PARA>
	If true then this character position will use the accept and confidence thresholds 
	specified in the <see cref="T:Cognex.VisionPro.OC.CogOCVPattern" />.  
	If false, the character position will use the thresholds specified 
	by <see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.RunTimeAcceptThreshold" /> and 
	<see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.RunTimeConfidenceThreshold" />.
	</PARA><DEFAULT>True</DEFAULT></remarks><summary>If set, the thresholds for the location will come from pattern's character location settings when the run-time parameter is built.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.RunTimeConfidenceThreshold"><remarks><PARA>The 
	<see cref="u:Identification.OCV.Theory.OCVTool" cgnxAnchor="accept_and_confidence_thresholds_at_run_time">confidence threshold</see> 
	is the amount that a character's matching score must exceed the highest scoring confusing character in order to pass verification.</PARA><DEFAULT>0.0</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>Threshold is &lt; 0 or &gt; 1.</para></exception><summary>The confidence score is the amount that a character's matching score must exceed the highest scoring confusing character in order to pass verification.</summary><event cref="E:Cognex.VisionPro.OC.CogOCVCharacterPosition.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVCharacterPosition_RunTimeConfidenceThreshold--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfRunTimeConfidenceThreshold" /></li></ul></event></member><member name="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.RunTimeAcceptThreshold"><summary>The accept threshold specifies the matching score below which a character will fail verification.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>Threshold is &lt; 0 or &gt; 1.</para></exception><remarks><PARA>The 
	<see cref="u:Identification.OCV.Theory.OCVTool" cgnxAnchor="character_accept_and_confidence_thresholds">accept threshold</see> 
	specifies the matching score below which a character will fail verification.</PARA><DEFAULT>0.5</DEFAULT></remarks><event cref="E:Cognex.VisionPro.OC.CogOCVCharacterPosition.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVCharacterPosition_RunTimeAcceptThreshold--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfRunTimeAcceptThreshold" /></li></ul></event></member><member name="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.UsePatternCharacterUncertainties"><summary>If true then this character position will use the common uncertainty settings in the pattern.  Otherwise, this position will use the uncertainty settings specified by its own properties.</summary><remarks><PARA>
	If true, then this character position will use the common uncertainty settings 
	specified in the <see cref="T:Cognex.VisionPro.OC.CogOCVPattern" />.  
	If false, the character position will use the individual uncertainty settings specified 
	by <see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.TranslationUncertainty" />, <see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.RotationUncertainty" />, and 
	<see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.ScalingUncertainty" />.
	</PARA><DEFAULT>True</DEFAULT></remarks><event cref="E:Cognex.VisionPro.OC.CogOCVCharacterPosition.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVCharacterPosition_UsePatternCharacterUncertainties--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfUsePatternCharacterUncertainties" /></li></ul></event></member><member name="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.ScalingUncertainty"><remarks><PARA>
		Scaling uncertainty specifies the expected +/- range of the of the image-to-image variation of 
		this  character's scaling factor.  This is an unsigned value; supply a value of 0.05 to specify a 
		range of scale factors from 0.95*<see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.Scaling" /> through 1.05*<see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.Scaling" />.
	</PARA><DEFAULT>0.0</DEFAULT></remarks><event cref="E:Cognex.VisionPro.OC.CogOCVCharacterPosition.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVCharacterPosition_ScalingUncertainty--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfScalingUncertainty" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>Scaling uncertainty  is &lt; 0 or &gt; 0.05.</para></exception><summary>Scaling uncertainty specifies the expected +/- range of the of the image-to-image variation of a character's scaling factor.  This is an unsigned value.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.RotationUncertainty"><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>Rotation uncertainty  is &lt; 0.</para></exception><summary>Rotation uncertainty specifies the expected +/- range, in radians, of the image-to-image variation of a character's rotation.  This is an unsigned value.</summary><remarks><PARA>	
	The expected range, in radians, of the image-to-image variation of a character's rotation. 
	This is an unsigned value; specify 0.1 to specify a range of <see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.Rotation" />-0.1 through 
	<see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.Rotation" />+0.1 radians.
	</PARA><DEFAULT>0.0</DEFAULT></remarks><event cref="E:Cognex.VisionPro.OC.CogOCVCharacterPosition.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVCharacterPosition_RotationUncertainty--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfRotationUncertainty" /></li></ul></event></member><member name="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.TranslationUncertainty"><event cref="E:Cognex.VisionPro.OC.CogOCVCharacterPosition.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVCharacterPosition_TranslationUncertainty--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfTranslationUncertainty" /></li></ul></event><summary>Translation uncertainty specifies the expected +/- range of the image-to-image variation of a character's x,y position.  This is an unsigned value.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>Translation uncertainty  is &lt; 0.</para></exception><remarks><PARA>The expected range of image-to-image variation in a character's translation, 
	expressed in the units of the 
	pattern space (the implicit space defined by the origins of the 
	individual character positions).  This is an unsigned value; supply a value of 5 to indicate an 
	expected translation from -5 through +5.</PARA><DEFAULT>0.0</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.Scaling"><remarks><PARA>The expected scaling factor of this character position.  The scale is expressed as a
	factor (1.1 for 10% larger, 0.9 for 10% smaller).</PARA><PARA>
	The scale of the expected character position expresses the scale component of the transformation 
	of the font model origin from the pattern origin.
	</PARA><DEFAULT>1</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>Scaling  is &lt;= 0.</para></exception><event cref="E:Cognex.VisionPro.OC.CogOCVCharacterPosition.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVCharacterPosition_Scaling--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfScaling" /></li></ul></event><summary>The expected scaling factor of this character position.  The character position is the position of a font model's origin with respect to the expected position of the pattern which the user supplies at run-time.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.Rotation"><summary>The expected rotation, in radians, of this character position.  The character position is the position of a font model's origin with respect to the expected position of the pattern which the user supplies at run-time.</summary><event cref="E:Cognex.VisionPro.OC.CogOCVCharacterPosition.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVCharacterPosition_Rotation--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfRotation" /></li></ul></event><remarks><PARA>
	The expected rotation, in radians, of this character position. 
	The rotation is measured from the expected pattern position 
	(<see cref="P:Cognex.VisionPro.OC.CogOCVTool.PatternPosition" />) to the font model origin.
	</PARA><DEFAULT>0.0</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.TranslationY"><summary>The expected Y coordinate of this character position.  This is the position of a font model's origin with respect to the expected position of the pattern which the user supplies at run-time.</summary><remarks><PARA>The expected y-coordinate of this character position. 
	This is the position of the font model's origin with respect to the expected pattern 
	position (<see cref="P:Cognex.VisionPro.OC.CogOCVTool.PatternPosition" />).</PARA><DEFAULT>0.0</DEFAULT></remarks><event cref="E:Cognex.VisionPro.OC.CogOCVCharacterPosition.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVCharacterPosition_TranslationY--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfTranslationY" /></li></ul></event></member><member name="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.TranslationX"><event cref="E:Cognex.VisionPro.OC.CogOCVCharacterPosition.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVCharacterPosition_TranslationX--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfTranslationX" /></li></ul></event><summary>The expected X coordinate of this character position.  This is the position of a font model's origin with respect to the expected position of the pattern which the user supplies at run-time.</summary><remarks><PARA>The expected x-coordinate of this character position. 
	This is the position of the font model's origin with respect to the expected pattern 
	position (<see cref="P:Cognex.VisionPro.OC.CogOCVTool.PatternPosition" />).</PARA><DEFAULT>0.0</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.FontModelCount"><summary>Number of model candidates for this position. OCV verifies the highest scoring candidate. Models are specified using FontModelName &amp; FontModelInstance. Increasing count adds models with an empty name and instance of zero. Decreasing removes candidates.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The count is &lt; 0.</para></exception><remarks><PARA>
	Number of model candidates for this position.  
	The OCV tool attempts to verify the highest scoring model candidate. If you increase the 
	value of this property, models with an empty name and an instance of 0 are added to the end 
	of the collection. If you decrease the value of this property, models are removed from the 
	end of the collection.
	</PARA><DEFAULT>0</DEFAULT></remarks><event cref="E:Cognex.VisionPro.OC.CogOCVCharacterPosition.Changed" cgnxEvent="multiState"><para>
        
Fires when this property changes. 
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_OCVCharacterPosition_FontModels--><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfFontModelCount" /></li><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfGetFontModelName" /></li><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfGetFontModelInstance" /></li></ul></event></member><member name="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPosition.~CogOCVCharacterPosition"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPosition.!CogOCVCharacterPosition"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPosition.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPosition.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPosition.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPosition.GetFontModelName(System.Int32)"><param name="index"><PARA>The zero-based index of the font model candidate whose name is returned.</PARA></param><remarks><PARA>
	Returns 
	the <see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Name" /> 
	of the specified font model candidate.  
	<paramref name="index" /> must be greater than or equal to zero and less than 
	<see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.FontModelCount" />.
	</PARA></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is &lt; 0 or &gt;= <see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.FontModelCount" />.</para></exception><event cref="E:Cognex.VisionPro.OC.CogOCVCharacterPosition.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVCharacterPosition_FontModelName--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfGetFontModelName" /></li></ul></event><summary>The Name of the font model candidate specified via Index.  OCV verifies the highest scoring candidate.  Models are specified using both FontModelName &amp; FontModelInstance.  Index must be greater than or equal to zero and less than FontModelCount.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPosition.SetFontModelName(System.Int32,System.String)"><param name="index"><PARA>The zero-based index of the font model candidate whose name is returned.</PARA></param><param name="value"></param><summary>The Name of the font model candidate specified via Index.  OCV verifies the highest scoring candidate.  Models are specified using both FontModelName &amp; FontModelInstance.  Index must be greater than or equal to zero and less than FontModelCount.</summary><event cref="E:Cognex.VisionPro.OC.CogOCVCharacterPosition.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVCharacterPosition_FontModelName--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfGetFontModelName" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is &lt; 0 or &gt;= <see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.FontModelCount" />.</para></exception><remarks><PARA>
	Returns 
	the <see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Name" /> 
	of the specified font model candidate.  
	<paramref name="index" /> must be greater than or equal to zero and less than 
	<see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.FontModelCount" />.
	</PARA></remarks></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPosition.GetFontModelInstance(System.Int32)"><param name="index"><PARA>The zero-based index of the font model candidate whose instance is returned.</PARA></param><event cref="E:Cognex.VisionPro.OC.CogOCVCharacterPosition.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVCharacterPosition_FontModelInstance--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfGetFontModelInstance" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is &lt; 0 or &gt;= <see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.FontModelCount" />.</para></exception><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The instance number is &lt; 0 or &gt; 255.</para></exception><remarks><PARA>
	Returns 
	the <see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Instance" /> 
	of the specified font model candidate.  
	<paramref name="index" /> must be greater than or equal to zero and less than 
	<see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.FontModelCount" />.
	</PARA></remarks><summary>The Instance of the font model candidate specified via Index.  OCV verifies the highest scoring candidate.  Models are specified using both FontModelName &amp; FontModelInstance.  Index must be greater than or equal to zero and less than FontModelCount.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPosition.SetFontModelInstance(System.Int32,System.Int32)"><param name="index"><PARA>The zero-based index of the font model candidate whose instance is returned.</PARA></param><param name="value"></param><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is &lt; 0 or &gt;= <see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.FontModelCount" />.</para></exception><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The instance number is &lt; 0 or &gt; 255.</para></exception><event cref="E:Cognex.VisionPro.OC.CogOCVCharacterPosition.Changed" cgnxEvent="singleState"><para>
        
Fires when this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVCharacterPosition_FontModelInstance--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfGetFontModelInstance" /></li></ul></event><summary>The Instance of the font model candidate specified via Index.  OCV verifies the highest scoring candidate.  Models are specified using both FontModelName &amp; FontModelInstance.  Index must be greater than or equal to zero and less than FontModelCount.</summary><remarks><PARA>
	Returns 
	the <see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Instance" /> 
	of the specified font model candidate.  
	<paramref name="index" /> must be greater than or equal to zero and less than 
	<see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.FontModelCount" />.
	</PARA></remarks></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPosition.AddFontModel(System.String,System.Int32)"><param name="name"><PARA>The name of the model to add.</PARA></param><param name="instance"><PARA>The instance of the character model to add.</PARA></param><event cref="E:Cognex.VisionPro.OC.CogOCVCharacterPosition.Changed" cgnxEvent="multiState"><para>
        
Fires when this property changes. 
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_OCVCharacterPosition_FontModels--><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfFontModelCount" /></li><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfGetFontModelName" /></li><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfGetFontModelInstance" /></li></ul></event><summary>Add a new font model to the end of the list of model candidates to be verified at this character position.  FontModelCount will increment by one.</summary><remarks><PARA>Add a new font model to the end of the list of model candidates to be verified at this character position.  
Calling this function will cause <see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.FontModelCount" /> to increase by one.</PARA></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="instance" /> is &lt; 0 or &gt; 255.</para></exception></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPosition.DeleteFontModel(System.Int32)"><param name="index"><PARA>The zero-based index of the model to delete.</PARA></param><summary>Delete the font model specified by Index from the list of model candidates to be verified at this character position.  FontModelCount will decrement by one.</summary><event cref="E:Cognex.VisionPro.OC.CogOCVCharacterPosition.Changed" cgnxEvent="multiState"><para>
        
Fires when this property changes. 
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_OCVCharacterPosition_FontModels--><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfFontModelCount" /></li><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfGetFontModelName" /></li><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfGetFontModelInstance" /></li></ul></event><remarks><PARA>Delete the specified model from the list of model candidates to be verified at this character position. Calling this function will cause <see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.FontModelCount" /> to decrease by one.</PARA></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is &lt; 0 or &gt;= <see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.FontModelCount" />.</para></exception></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPosition.SetFontModel(System.Int32,System.String,System.Int32)"><param name="index"><PARA>The zero-based index of the position to set.</PARA></param><param name="name"><PARA>The name.</PARA></param><param name="instance"><PARA>The instance number.</PARA></param><summary>Set font model specified by the index to the new values.</summary><remarks><PARA>Sets the specified character position to use the supplied 
	font model name and instance.</PARA></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="instance" /> is &lt; 0 or &gt; 255.</para></exception><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is &lt; 0 or &gt;= <see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.FontModelCount" />.</para></exception><event cref="E:Cognex.VisionPro.OC.CogOCVCharacterPosition.Changed" cgnxEvent="multiState"><para>
        
Fires when this property changes. 
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_OCVCharacterPosition_FontModels--><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfFontModelCount" /></li><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfGetFontModelName" /></li><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfGetFontModelInstance" /></li></ul></event></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPosition.GetFontModel(System.Int32,System.String@,System.Int32@)"><param name="index"><PARA>The zero-based index of the font model candidate.</PARA></param><param name="name"><PARA>The returned <see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Name" />.</PARA></param><param name="instance"><PARA>The returned <see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Instance" />.</PARA></param><remarks><PARA>
	Get the 
	<see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Name" /> and 
	<see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Instance" />	
	of the specified font model.
	</PARA></remarks><summary>Get the name and instance of the font model specified by the index.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is &lt; 0 or &gt;= <see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.FontModelCount" />.</para></exception></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPosition.SetScalingRotationTranslation(System.Double,System.Double,System.Double,System.Double)"><param name="scaling"><PARA>The expected scale of the character.</PARA></param><param name="rotaton"><PARA>The expected rotation of the character's origin, with respect to the
	expected pattern position in radians.</PARA></param><param name="translationX"><PARA>The x-translation from the pattern origin of the 
	character position.</PARA></param><param name="translationY"><PARA>The y-translation from the pattern origin of the 
	character position.</PARA></param><event cref="E:Cognex.VisionPro.OC.CogOCVCharacterPosition.Changed" cgnxEvent="multiState"><para>
        
Fires when this property changes. 
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_OCVCharacterPosition_Position--><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfTranslationX" /></li><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfTranslationY" /></li><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfRotation" /></li><li><see cref="F:Cognex.VisionPro.OC.CogOCVCharacterPosition.SfScaling" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="scaling" />  is &lt;= 0.</para></exception><summary>Wide setter for character position.  The character position is the position of a font model's origin with respect to the expected position of the pattern which the user supplies at run-time.</summary><remarks><PARA>
	Sets the expected location, rotation, and scale of this 
	character position with respect to the 
	overall pattern origin.
	</PARA></remarks></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPosition.GetScalingRotationTranslation(System.Double@,System.Double@,System.Double@,System.Double@)"><param name="scaling"><PARA>The expected scale of the character.</PARA></param><param name="rotaton"><PARA>The expected rotation of the character's origin, with respect to the
	expected pattern position in radians.</PARA></param><param name="translationX"><PARA>The x-translation from the pattern origin of the  
	expected character position.</PARA></param><param name="translationY"><PARA>The y-translation from the pattern origin of the 
	character position.</PARA></param><summary>Wide getter for character position.  The character position is the position of a font model's origin with respect to the expected position of the pattern which the user supplies at run-time.</summary><remarks><PARA>
	Gets the expected location, rotation, and scale of this 
	character position with respect to the 
	overall pattern origin.
	</PARA></remarks></member><member name="E:Cognex.VisionPro.OC.CogOCVCharacterPosition.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCVCharacterPositions"><remarks><PARA>
	Collection of character positions to be verified by OCV. 
	All of the character positions with non-blank character models 
	are verified in the order in which they are listed in the collection. Positions with 
	<see cref="u:Identification.OCV.Theory.OCVTool" cgnxAnchor="blank_characters">blank</see> character models are verified 
	separately after the non-blank positions are verified.
	</PARA></remarks><summary>Collection of character positions to be verified by OCV.  Character positions are verified in the order in which they are listed in the collection.  An exception is blank models, which are verified only after all non-blank models have been verified.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPositions.#ctor(Cognex.VisionPro.OC.CogOCVCharacterPositions)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPositions.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPositions.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVCharacterPositions.Item(System.Int32)"><param name="index">The index of the item to get or set.</param><summary>Gets or sets the item at the specified index.  In C#, this property is the indexer for the collection.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVCharacterPositions.SyncRoot"><summary>Gets an object that can be used to synchronize access to this collection.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVCharacterPositions.IsSynchronized"><summary>Gets a value indicating whether access to this collection is synchronized (thread-safe).</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVCharacterPositions.Count"><summary>Gets the number of items contained in this collection.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVCharacterPositions.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVCharacterPositions.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPositions.~CogOCVCharacterPositions"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPositions.!CogOCVCharacterPositions"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPositions.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPositions.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPositions.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPositions.CopyTo(System.Array,System.Int32)"><param name="array">The array into which to copy.</param><param name="index">The index from which to start copying.</param><summary>Copies the contents of this collection to an array.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPositions.Clear"><summary>Removes all items from this collection.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPositions.Move(System.Int32,System.Int32)"><param name="fromIndex">The index of the item to move.</param><param name="toIndex">The index to which the item will be moved.</param><summary>Moves the selected item to a new index in this collection.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPositions.IndexOf(Cognex.VisionPro.OC.CogOCVCharacterPosition)"><param name="value">The item whose index is desired.</param><summary>Gets the index of the given item.  If the item cannot be found -1 is returned.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPositions.Insert(Cognex.VisionPro.OC.CogOCVCharacterPosition,System.Int32)"><param name="value">The item to be inserted.</param><param name="index">The index at which to insert the item.</param><summary>Inserts the given item at the specified index.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPositions.Add(Cognex.VisionPro.OC.CogOCVCharacterPosition)"><param name="value">The item to be added.</param><summary>Adds the given item to the end of this collection.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVCharacterPositions.RemoveAt(System.Int32)"><param name="index">The index of the item to remove.</param><summary>Removes the item at the specified index.</summary></member><member name="E:Cognex.VisionPro.OC.CogOCVCharacterPositions.MovedItem"><summary>Occurs after an item is moved to a new index.</summary></member><member name="E:Cognex.VisionPro.OC.CogOCVCharacterPositions.MovingItem"><summary>Occurs before an item is moved to a new index.</summary></member><member name="E:Cognex.VisionPro.OC.CogOCVCharacterPositions.ReplacedItem"><summary>Occurs after an item is replaced in this collection.</summary></member><member name="E:Cognex.VisionPro.OC.CogOCVCharacterPositions.ReplacingItem"><summary>Occurs before an item is replaced in this collection.</summary></member><member name="E:Cognex.VisionPro.OC.CogOCVCharacterPositions.RemovedItem"><summary>Occurs after an item is removed from this collection.</summary></member><member name="E:Cognex.VisionPro.OC.CogOCVCharacterPositions.RemovingItem"><summary>Occurs before an item is removed from this collection.</summary></member><member name="E:Cognex.VisionPro.OC.CogOCVCharacterPositions.InsertedItem"><summary>Occurs after an item is inserted into this collection.</summary></member><member name="E:Cognex.VisionPro.OC.CogOCVCharacterPositions.InsertingItem"><summary>Occurs before an item is inserted into this collection.</summary></member><member name="E:Cognex.VisionPro.OC.CogOCVCharacterPositions.Cleared"><summary>Occurs after this collection is cleared.</summary></member><member name="E:Cognex.VisionPro.OC.CogOCVCharacterPositions.Clearing"><summary>Occurs before this collection is cleared.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCVPatternPosition"><remarks><PARA>
	Interface that lets you specify the expected run-time position of the overall pattern. 
	The pattern position is the 
	pose of the pattern origin in the <see cref="P:Cognex.VisionPro.OC.CogOCVPatternPosition.SelectedSpaceName">specified space</see> 
	of the input image, where the pattern origin is 
	implicitly defined by the translation, rotation, and 
	scale of the individual <see cref="T:Cognex.VisionPro.OC.CogOCVCharacterPosition" />s in the pattern.
	</PARA></remarks><summary>Default interface provides access to the properties for setting the run-time expected position of a pattern and the uncertainty of the expected position.  Character positions in a pattern are specified with respect to the expected position of the pattern.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVPatternPosition.#ctor(Cognex.VisionPro.OC.CogOCVPatternPosition)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVPatternPosition.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVPatternPosition.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVPatternPosition.SfExpectedPose"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ExpectedPose may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVPatternPosition.SfSelectedSpaceName"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by SelectedSpaceName may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVPatternPosition.SfTranslationUncertainty"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by TranslationUncertainty may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVPatternPosition.SfRotationUncertainty"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by RotationUncertainty may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVPatternPosition.SfScalingUncertainty"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by ScalingUncertainty may have changed.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVPatternPosition.ScalingUncertainty"><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The uncertainty is &lt; 0 or &gt; 0.05.</para></exception><event cref="E:Cognex.VisionPro.OC.CogOCVPatternPosition.Changed" cgnxEvent="singleState"><para>
		
		Fires when this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVPatternPosition_ScalingUncertainty--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVPatternPosition.SfScalingUncertainty" /></li></ul></event><summary>Scaling uncertainty specifies the +/- range that the pattern may vary from its expected scaling factor.  Uncertainty value must be greater than or equal to zero.</summary><remarks><PARA>
	The expected +/- range of the of the image-to-image variation of the overall 
	pattern's scaling factor.  This is an unsigned value; supply a value of 0.1 to specify a 
	range of scale factors from 0.9 through 1.1.
	</PARA><DEFAULT>0.0</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.OC.CogOCVPatternPosition.RotationUncertainty"><remarks><PARA>
	The expected range, in radians, of the image-to-image variation of the overall 
	pattern's rotation with respect to the selected space of the input image. 
	This is an unsigned value; specify 0.1 to specify a range of -0.1 through +0.1 radians.
	</PARA><DEFAULT>0.0</DEFAULT></remarks><summary>Rotation uncertainty specifies the +/- range (in radians) that the pattern may vary from its expected rotation.  Uncertainty value must be greater than or equal to zero.</summary><event cref="E:Cognex.VisionPro.OC.CogOCVPatternPosition.Changed" cgnxEvent="singleState"><para>
		
		Fires when this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVPatternPosition_RotationUncertainty--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVPatternPosition.SfRotationUncertainty" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The supplied uncertainty is &lt; 0 or &gt; 5 degrees (0.087266 radians).</para></exception></member><member name="P:Cognex.VisionPro.OC.CogOCVPatternPosition.TranslationUncertainty"><remarks><PARA>
	The expected range of image-to-image variation in the overall pattern's translation.  
	This is an unsigned value; supply a value of 5 to indicate an 
	expected translation from -5 through +5.
	</PARA><DEFAULT>0.0</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The uncertainty is &lt; 0.</para></exception><summary>Translation uncertainty specifies the +/- range that the pattern may vary from its expected x,y position.  Uncertainty value must be greater than or equal to zero.</summary><event cref="E:Cognex.VisionPro.OC.CogOCVPatternPosition.Changed" cgnxEvent="singleState"><para>
		
		Fires when this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVPatternPosition_TranslationUncertainty--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVPatternPosition.SfTranslationUncertainty" /></li></ul></event></member><member name="P:Cognex.VisionPro.OC.CogOCVPatternPosition.SelectedSpaceName"><remarks><PARA>
	Specifies which space of the input image's coordinate space tree is used to define the expected position of the pattern.
</PARA><DEFAULT>"."</DEFAULT></remarks><event cref="E:Cognex.VisionPro.OC.CogOCVPatternPosition.Changed" cgnxEvent="singleState"><para>
		
		Fires when this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVPatternPosition_SelectedSpaceName--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVPatternPosition.SfSelectedSpaceName" /></li></ul></event><summary>Specifies which space of the input image's coordinate space tree is used to define the expected position of the pattern.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVPatternPosition.ExpectedPose"><remarks><PARA>
	The expected position of the pattern in the input image.  
	Character positions in a pattern are specified with respect to the 
	expected position of the pattern.
	</PARA><DEFAULT>Identity transformation</DEFAULT></remarks><event cref="E:Cognex.VisionPro.OC.CogOCVPatternPosition.Changed" cgnxEvent="singleState"><para>
		
		Fires when this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVPatternPosition_ExpectedPose--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVPatternPosition.SfExpectedPose" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The expected pose is NULL.</para></exception><summary>The run-time expected position of a pattern.  Character positions in a pattern are specified with respect to the expected position of the pattern.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVPatternPosition.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVPatternPosition.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVPatternPosition.~CogOCVPatternPosition"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVPatternPosition.!CogOCVPatternPosition"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVPatternPosition.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVPatternPosition.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVPatternPosition.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="E:Cognex.VisionPro.OC.CogOCVPatternPosition.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCVPattern"><summary>Provides access to the properties of an OCV pattern and to the results of training the pattern.  The pattern must be trained via the Train method prior to performing an OCV inspection which is done by calling the Execute method.</summary><remarks><PARA>Interface that provides access to properties of an OCV pattern and to the results of training the pattern.  You must train the pattern by calling <see cref="M:Cognex.VisionPro.OC.CogOCVPattern.Train" /> before you can verify 
characters (by calling <see cref="M:Cognex.VisionPro.OC.CogOCVPattern.Execute(Cognex.VisionPro.CogImage8Grey,Cognex.VisionPro.OC.CogOCVPatternPosition)" />).</PARA></remarks></member><member name="M:Cognex.VisionPro.OC.CogOCVPattern.#ctor(Cognex.VisionPro.OC.CogOCVPattern)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVPattern.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVPattern.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVPattern.SfFont"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Font may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVPattern.SfCharacterPositions"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CharacterPositions may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVPattern.SfCharacterTranslationUncertainty"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CharacterTranslationUncertainty may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVPattern.SfCharacterRotationUncertainty"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CharacterRotationUncertainty may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVPattern.SfCharacterScalingUncertainty"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CharacterScalingUncertainty may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVPattern.SfTrained"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Trained may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVPattern.SfRunTimeTimeout"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by RunTimeTimeout may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVPattern.SfRunTimeTimeoutEnabled"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by RunTimeTimeoutEnabled may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVPattern.SfRunTimeCharacterAcceptThreshold"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by RunTimeCharacterAcceptThreshold may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVPattern.SfRunTimeCharacterConfidenceThreshold"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by RunTimeCharacterConfidenceThreshold may have changed.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVPattern.RunTimeCharacterConfidenceThreshold"><summary>A common confidence threshold for any character position with UsePatternRunTimeCharacterThresholds set to true. A character's matching score must exceed the highest scoring confusing character by the confidence threshold in order to pass verification.</summary><event cref="E:Cognex.VisionPro.OC.CogOCVPattern.Changed" cgnxEvent="singleState"><para>
		
		Fires when this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVPattern_RunTimeCharacterConfidenceThreshold--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfRunTimeCharacterConfidenceThreshold" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The threshold is &lt; 0 or &gt; 1.</para></exception><remarks><PARA>
	The 
	<see cref="u:Identification.OCV.Theory.OCVTool" cgnxAnchor="character_accept_and_confidence_thresholds">confidence threshold</see> 
	to apply to any character position that has 
	<see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.UsePatternRunTimeCharacterThresholds" /> 
	set to true. The confidence threshold 
	is the amount that a character's matching score must exceed the highest scoring 
	confusing character in order to pass verification.
	</PARA><DEFAULT>0.0</DEFAULT></remarks></member><member name="P:Cognex.VisionPro.OC.CogOCVPattern.RunTimeCharacterAcceptThreshold"><event cref="E:Cognex.VisionPro.OC.CogOCVPattern.Changed" cgnxEvent="singleState"><para>
		
		Fires when this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVPattern_RunTimeCharacterAcceptThreshold--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfRunTimeCharacterAcceptThreshold" /></li></ul></event><remarks><PARA>
	The 
	<see cref="u:Identification.OCV.Theory.OCVTool" cgnxAnchor="character_accept_and_confidence_thresholds">accept threshold</see> 
	to apply to any character position that has 
	<see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.UsePatternRunTimeCharacterThresholds" /> 
	set to true. The accept threshold 
	specifies the matching score below which a character will fail verification.
	</PARA><DEFAULT>0.5</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The threshold is &lt; 0 or &gt; 1.</para></exception><summary>A common accept threshold for any character position that has its UsePatternRunTimeCharacterThresholds set to true.  The accept threshold specifies the matching score below which a character will fail verification.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVPattern.RunTimeTimeoutEnabled"><remarks><PARA>
	If true then the 
	<see cref="P:Cognex.VisionPro.OC.CogOCVPattern.RunTimeTimeout" /> property limits the execution time of the OCV inspection.  If false 
	then timeout value ignored.
 	</PARA><DEFAULT>False</DEFAULT></remarks><event cref="E:Cognex.VisionPro.OC.CogOCVPattern.Changed" cgnxEvent="singleState"><para>
		
		Fires when this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVPattern_RunTimeTimeoutEnabled--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfRunTimeTimeoutEnabled" /></li></ul></event><summary>If true then the RunTimeTimeout property limits the execution time of the OCV inspection.  If false then timeout is disabled and the RunTimeTimeout property is ignored.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVPattern.RunTimeTimeout"><summary>The maximum execution time (msec) allowed to run an OCV inspection.  If OCV has not finished by the end of the timeout period, it will stop soon thereafter and return E_Cog_TimeoutExpired.  This value only applies if TimeoutEnabled is true.</summary><remarks><PARA>
	The maximum execution time (msec) allowed to run an OCV inspection.  If OCV has not 
	finished by the end of the timeout period, it will stop soon thereafter and return 
	E_Cog_TimeoutExpired.  This value only applies if 
	<see cref="P:Cognex.VisionPro.OC.CogOCVPattern.RunTimeTimeoutEnabled" /> is true.
	</PARA><DEFAULT>5000</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The timeout value is &lt; 0.</para></exception><event cref="E:Cognex.VisionPro.OC.CogOCVPattern.Changed" cgnxEvent="singleState"><para>
		
		Fires when this property changes. 
	</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVPattern_RunTimeTimeout--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfRunTimeTimeout" /></li></ul></event></member><member name="P:Cognex.VisionPro.OC.CogOCVPattern.Trained"><summary>True if the pattern is trained.</summary><remarks><PARA>True if the pattern is trained, false otherwise.</PARA><PARA>
	Whenever you add new character positions, or change the properties of an existing character 
	position, the pattern becomes untrained.
	</PARA></remarks></member><member name="P:Cognex.VisionPro.OC.CogOCVPattern.CharacterScalingUncertainty"><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The uncertainty is &lt; 0 or &gt; 0.05.</para></exception><summary>A common scaling uncertainty for any character position that has its UsePatternCharacterUncertainties set to true.  The scaling uncertainty specifies the expected image-to-image variation of a character's scale.  This is an unsigned value.</summary><remarks><PARA>
	Scaling uncertainty specifies the expected +/- range of the of the image-to-image 
	variation of any   
	character's scaling factor.  This is an unsigned value; supply a value of 0.05 to specify a 
	range of scale factors from 
	0.95*<see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.Scaling" /> through 
	1.05 *<see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.Scaling" />.
	This value is applied to any character position that has 
	<see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.UsePatternCharacterUncertainties" /> set to true.
	</PARA><DEFAULT>0.0</DEFAULT></remarks><event cref="E:Cognex.VisionPro.OC.CogOCVPattern.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVPattern_CharacterScalingUncertainty--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfCharacterScalingUncertainty" /></li></ul></event><event cref="E:Cognex.VisionPro.OC.CogOCVPattern.Changed" cgnxEvent="multiState"><para>
        
Fires when the value of this property changes and the pattern becomes untrained. 
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_OCVPattern_CharacterUncertainties--><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfCharacterTranslationUncertainty" /></li><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfCharacterRotationUncertainty" /></li><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfCharacterScalingUncertainty" /></li><!--FA:cogFA_OCVPattern_TrainResults--><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfTrained" /></li></ul></event></member><member name="P:Cognex.VisionPro.OC.CogOCVPattern.CharacterRotationUncertainty"><remarks><PARA>
	The expected range, in radians, of the image-to-image variation of any character's rotation. 
	This is an unsigned value; specify 0.1 to specify a range of 
	<see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.Rotation" />-0.1 through 
	<see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.Rotation" />+0.1 radians.
	This value is applied to any character position that has 
	<see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.UsePatternCharacterUncertainties" /> set to true.
	</PARA><DEFAULT>0.0</DEFAULT></remarks><summary>A common rotation (in radians) uncertainty for any character position that has its UsePatternCharacterUncertainties set to true.  The rotation uncertainty specifies the expected image-to-image variation of a character's rotation.  This is an unsigned value.</summary><event cref="E:Cognex.VisionPro.OC.CogOCVPattern.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVPattern_CharacterRotationUncertainty--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfCharacterRotationUncertainty" /></li></ul></event><event cref="E:Cognex.VisionPro.OC.CogOCVPattern.Changed" cgnxEvent="multiState"><para>
        
Fires when the value of this property changes and the pattern becomes untrained. 
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_OCVPattern_CharacterUncertainties--><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfCharacterTranslationUncertainty" /></li><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfCharacterRotationUncertainty" /></li><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfCharacterScalingUncertainty" /></li><!--FA:cogFA_OCVPattern_TrainResults--><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfTrained" /></li></ul></event><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The uncertainty is &lt; 0.</para></exception></member><member name="P:Cognex.VisionPro.OC.CogOCVPattern.CharacterTranslationUncertainty"><event cref="E:Cognex.VisionPro.OC.CogOCVPattern.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVPattern_CharacterTranslationUncertainty--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfCharacterTranslationUncertainty" /></li></ul></event><event cref="E:Cognex.VisionPro.OC.CogOCVPattern.Changed" cgnxEvent="multiState"><para>
        
Fires when the value of this property changes and the pattern becomes untrained. 
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_OCVPattern_CharacterUncertainties--><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfCharacterTranslationUncertainty" /></li><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfCharacterRotationUncertainty" /></li><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfCharacterScalingUncertainty" /></li><!--FA:cogFA_OCVPattern_TrainResults--><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfTrained" /></li></ul></event><summary>A common translation uncertainty for any character position that has its UsePatternCharacterUncertainties set to true.  The translation uncertainty specifies the expected image-to-image variation of a character's x,y position.  This is an unsigned value.</summary><remarks><PARA>
	The expected range of image-to-image variation in any character's translation. This is an unsigned value; supply a value of 5 to indicate an 
	expected translation from -5 through +5.
	This value is applied to any character position that has 
	<see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.UsePatternCharacterUncertainties" /> set to true.
	</PARA><DEFAULT>0.0</DEFAULT></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The uncertainty is &lt; 0.</para></exception></member><member name="P:Cognex.VisionPro.OC.CogOCVPattern.CharacterPositions"><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para>The collection of character positions is NULL.</para></exception><event cref="E:Cognex.VisionPro.OC.CogOCVPattern.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVPattern_CharacterPositions--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfCharacterPositions" /></li></ul></event><event cref="E:Cognex.VisionPro.OC.CogOCVPattern.Changed" cgnxEvent="multiState"><para>
        
Fires when the value of this property changes and the pattern becomes untrained. 
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_OCVPattern_CharacterPositions--><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfCharacterPositions" /></li><!--FA:cogFA_OCVPattern_TrainResults--><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfTrained" /></li></ul></event><remarks><PARA>
	A collection of characters positions to be verified.  Each of the items in the 
	character collection specifies the <see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Name" /> and 
	<see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Instance" /> of each character that should be verified at that 
	position.
	</PARA></remarks><summary>A collection of characters positions to be verified.  Each character position in this pattern will indicate which font models should be verified for that position.  A character position specifies a font model via the font model's Name and Instance.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVPattern.Font"><remarks><PARA>
	The <see cref="T:Cognex.VisionPro.OC.CogOCFont" /> that contains the character models specified by the
	character positions defined in this pattern. Each of the character models (specified by 
	<see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Name" /> and <see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Instance" />) 
	used in this pattern must be present in this font.
	</PARA></remarks><event cref="E:Cognex.VisionPro.OC.CogOCVPattern.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVPattern_Font--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfFont" /></li></ul></event><event cref="E:Cognex.VisionPro.OC.CogOCVPattern.Changed" cgnxEvent="multiState"><para>
        
Fires when the value of this property changes and the font becomes untrained. 
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_OCVPattern_Font--><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfFont" /></li><!--FA:cogFA_OCVPattern_TrainResults--><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfTrained" /></li></ul></event><summary>The font for this OCV pattern.  Each character position in this pattern will indicate which of the font's model(s) should be verified for that position.  A character position specifies a font model via the font model's Name and Instance.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVPattern.ChangedEventSuspended"><summary>If nonzero, indicates that the raising of the Changed event has been suspended. This value is incremented when SuspendChangedEvent is called and decremented when ResumeAndRaiseChangedEvent is called.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVPattern.HasChanged"><summary>If true, the serializable state of this object has changed since the last time it was serialized.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVPattern.~CogOCVPattern"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVPattern.!CogOCVPattern"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVPattern.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVPattern.SuspendChangedEvent"><summary>Temporarily suspends the raising of the Changed event. May be called more than once, and a corresponding call to ResumeAndRaiseChangedEvent must be made for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVPattern.ResumeAndRaiseChangedEvent"><summary>Re-enables raising of the Changed event after SuspendChangedEvent has been called.  Also raises the Changed event if the ChangedEventSuspended count is reduced to zero and any changes were made while events were suspended. Must be called once for each call to SuspendChangedEvent.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVPattern.ExportToCvlArchive(System.String)"><param name="fileName"><PARA>The name of the file to store the CVL character pattern.</PARA></param><summary>Exports this pattern to the specified CVL archive as a ccOCLineArrangementPtrh.</summary><remarks><PARA>Exports this pattern to the specified CVL archive as a ccOCLineArrangementPtrh.</PARA></remarks></member><member name="M:Cognex.VisionPro.OC.CogOCVPattern.Train"><exception cref="T:Cognex.VisionPro.Exceptions.CogSecurityViolationException" cgnxHRESULT="E_Cog_SecurityViolation"><para>Security is not enabled for this vision tool. See 
<see cref="u:Programming.Tools.Theory.Security" cgnxAnchor="resolving_securityrelated_error_messages">Resolving Security-Related Error Messages</see>
for more information.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOCVNoFontException" cgnxHRESULT="E_CogOCV_NoFont"><para><see cref="P:Cognex.VisionPro.OC.CogOCVPattern.Font" /> property is set to Nothing.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOCFontNotCompiledException" cgnxHRESULT="E_CogOCFont_NotCompiled"><para><see cref="P:Cognex.VisionPro.OC.CogOCVPattern.Font" /> is not compiled.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOCVNoCharacterPositionsException" cgnxHRESULT="E_CogOCV_NoCharacterPositions"><para>The <see cref="P:Cognex.VisionPro.OC.CogOCVPattern.CharacterPositions" /> collection is empty.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOCVNoFontModelsException" cgnxHRESULT="E_CogOCV_NoFontModels"><para>At least one of the character positions has no font models listed for verification.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOCVInvalidFontModelException" cgnxHRESULT="E_CogOCV_InvalidFontModel"><para>One of the character positions has a font model name and instance that is not a member of the font.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOCVNoNormalModelsException" cgnxHRESULT="E_CogOCV_NoNormalModels"><para>The pattern does not contain any nonblank models.</para></exception><event cref="E:Cognex.VisionPro.OC.CogOCVPattern.Changed" cgnxEvent="multiState"><para>
        
Fires when the pattern is trained. 
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_OCVPattern_TrainResults--><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfTrained" /></li></ul></event><summary>Trains this OCV pattern.  If the pattern is already trained then it will be untrained and retrained.</summary><remarks><PARA><see cref="u:Identification.OCV.Theory.OCVTool" cgnxAnchor="pattern_training">Trains</see> this OCV pattern.  
	If the pattern is already trained then it will be 
	untrained and retrained.
	</PARA></remarks></member><member name="M:Cognex.VisionPro.OC.CogOCVPattern.Untrain"><event cref="E:Cognex.VisionPro.OC.CogOCVPattern.Changed" cgnxEvent="multiState"><para>
        
Fires when the pattern is trained. 
</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_OCVPattern_TrainResults--><li><see cref="F:Cognex.VisionPro.OC.CogOCVPattern.SfTrained" /></li></ul></event><remarks><PARA>
	Untrains this pattern and releases any saved training data.  
	This function has no effect if this pattern is not currently trained.
	</PARA></remarks><summary>Untrain this pattern.  Releases any saved training data.  No effect if this pattern is not currently trained.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVPattern.Execute(Cognex.VisionPro.CogImage8Grey,Cognex.VisionPro.OC.CogOCVPatternPosition)"><param name="inputImage"><PARA>The image in which to verify the pattern.</PARA></param><param name="patternPosition"><PARA>The expected pose of the trained pattern in <paramref name="inputImage" />.</PARA></param><summary>Perform an OCV inspection of this pattern at the specified pattern position.  A results collection will be created and filled with character position result classes in same the order as the pattern's character positions collection.</summary><returns><PARA>A <see cref="T:Cognex.VisionPro.OC.CogOCVResults" /> object containing the results of the verification.</PARA></returns><exception cref="T:Cognex.VisionPro.Exceptions.CogSecurityViolationException" cgnxHRESULT="E_Cog_SecurityViolation"><para>Security is not enabled for this vision tool. See 
<see cref="u:Programming.Tools.Theory.Security" cgnxAnchor="resolving_securityrelated_error_messages">Resolving Security-Related Error Messages</see>
for more information.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorNoInputImageException" cgnxHRESULT="E_CogOperator_NoInputImage"><para><paramref name="inputImage" /> is NULL.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageNoPixelsException" cgnxHRESULT="E_CogImage_NoPixels"><para><paramref name="inputImage" /> is not allocated.</para></exception><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="patternPosition" /> is NULL.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorNotTrainedException" cgnxHRESULT="E_CogOperator_NotTrained"><para>The pattern is not trained.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogTimeoutExpiredException" cgnxHRESULT="E_Cog_TimeoutExpired"><para><see cref="P:Cognex.VisionPro.OC.CogOCVPattern.RunTimeTimeout" /> expired.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOCVInvalidPatternPositionException" cgnxHRESULT="E_CogOCV_InvalidPatternPosition"><para>The selected space of the <paramref name="patternPosition" /> is not a valid space of the <paramref name="inputImage" />'s coordinate space tree.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOCVInvalidPatternPositionException" cgnxHRESULT="E_CogOCV_InvalidPatternPosition"><para>The selected space name of  the <paramref name="patternPosition" /> is a nonqualified space name and more than  one instance of it exists in the space tree of the <paramref name="inputImage" />.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOCVInvalidPatternPositionException" cgnxHRESULT="E_CogOCV_InvalidPatternPosition"><para>The selected space name of the <paramref name="patternPosition" /> is not a legal space name.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadSelectedSpaceNameException" cgnxHRESULT="E_CogImage_BadSelectedSpaceName"><para>The selected space of the <paramref name="inputImage" /> is not a valid space of the <paramref name="inputImage" />'s coordinate space tree.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadSelectedSpaceNameException" cgnxHRESULT="E_CogImage_BadSelectedSpaceName"><para>The selected space name of the <paramref name="inputImage" /> is a nonqualified space name and more than one instance of it exists in the space tree of the <paramref name="inputImage" />.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadSelectedSpaceNameException" cgnxHRESULT="E_CogImage_BadSelectedSpaceName"><para> the selected space name of the <paramref name="patternPosition" /> is not a legal space name. </para></exception><remarks><PARA>
	Attempts to verify that the pattern of characters specified in this pattern is present in 
	the supplied input image at the specified pose. A results collection 
	is  created and filled with results in the same order as the character positions appear 
	in the <see cref="P:Cognex.VisionPro.OC.CogOCVPattern.CharacterPositions" /> collection.
	</PARA></remarks></member><member name="E:Cognex.VisionPro.OC.CogOCVPattern.Changed"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCVResult"><summary>Default interface of this class provides access to the results of a single character position inspection.</summary><remarks><PARA>Interface that provides access to the results of a single character position inspection.</PARA></remarks></member><member name="M:Cognex.VisionPro.OC.CogOCVResult.#ctor(Cognex.VisionPro.OC.CogOCVResult)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVResult.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVResult.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVResult.ConfusableFontModelCount"><summary>The number of confusable models that were found.  These are the models that are confusable with the model to be verified and have a match score that is greater than or equal to (accept threshold - confusion threshold).</summary><remarks><PARA>The number of <see cref="M:Cognex.VisionPro.OC.CogOCFont.Confusable(Cognex.VisionPro.OC.CogOCFontModel,Cognex.VisionPro.OC.CogOCFontModel)">confusable</see> models that were found.  These are the models that are confusable with the model to be verified and have a match score that is greater than or equal to (<see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.RunTimeAcceptThreshold" /> − <see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.RunTimeConfidenceThreshold" />).</PARA></remarks></member><member name="P:Cognex.VisionPro.OC.CogOCVResult.ConfidenceScore"><summary>Confidence score of the found font model which indicates the amount that the match score for the found model is greater than the highest scoring confusable model.  Models listed for this character position can not be confusable with the found model.</summary><remarks><PARA>Confidence score of the found font model.
This score is the amount by which the match score for the found model is greater than the highest scoring confusable model.
Models listed for this character position cannot be confusable with the found model.</PARA><NOTE>This score is 0.0 if no model was found.</NOTE></remarks></member><member name="P:Cognex.VisionPro.OC.CogOCVResult.Score"><summary>Score of the found font model which indicates how well the character in the run-time image matched the font model's image.  The score is a value between zero and one where one is a perfect match.</summary><remarks><PARA>Returns the score of the found font model which indicates how well the character in the runtime image matched the font model's image.  The score is a value in the range 0.0 (no match) through 1.0 (perfect match).</PARA><NOTE>The score is 0.0 for a non-blank model that was not found.</NOTE></remarks></member><member name="P:Cognex.VisionPro.OC.CogOCVResult.FontModelInstance"><remarks><PARA>The instance of the found font model.  If multiple models where listed for the pattern position then this is the instance of the highest scoring model.</PARA></remarks><exception cref="T:Cognex.VisionPro.Exceptions.CogOCVNoFontModelFoundException" cgnxHRESULT="E_CogOCV_NoFontModelFound"><para><see cref="P:Cognex.VisionPro.OC.CogOCVResult.Status" /> is <see cref="T:Cognex.VisionPro.OC.CogOCVCharacterStatusConstants">Failed</see>.</para></exception><summary>The Instance of the found font model.  If multiple models where listed for the pattern position then this is the instance of the highest scoring model.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVResult.FontModelName"><remarks><PARA>The <see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Name" /> of the found font model.  If multiple models where listed for the pattern position then this is the name of the highest scoring font model.</PARA></remarks><summary>The Name of the found font model.  If multiple models where listed for the pattern position then this is the name of the highest scoring font model.</summary><exception cref="T:Cognex.VisionPro.Exceptions.CogOCVNoFontModelFoundException" cgnxHRESULT="E_CogOCV_NoFontModelFound"><para><see cref="P:Cognex.VisionPro.OC.CogOCVResult.Status" /> is <see cref="T:Cognex.VisionPro.OC.CogOCVCharacterStatusConstants">Failed</see>.</para></exception></member><member name="P:Cognex.VisionPro.OC.CogOCVResult.Status"><remarks><PARA>Returns whether the character position passed verification or why it failed.</PARA><TABLE><ROW><TH><tab-head>Return value</tab-head></TH><TH><tab-head>Meaning</tab-head></TH></ROW><ROW><CELL><PARA><see cref="T:Cognex.VisionPro.OC.CogOCVCharacterStatusConstants">Verified</see></PARA></CELL><CELL><PARA>The character passed verification.</PARA></CELL></ROW><ROW><CELL><PARA><see cref="T:Cognex.VisionPro.OC.CogOCVCharacterStatusConstants">Confused</see></PARA></CELL><CELL><PARA>The character failed because its score was  less than the confusion threshold.</PARA></CELL></ROW><ROW><CELL><PARA><see cref="T:Cognex.VisionPro.OC.CogOCVCharacterStatusConstants">Failed</see></PARA></CELL><CELL><PARA>The character failed because its score was  less than the accept threshold.</PARA></CELL></ROW></TABLE></remarks><summary>Status indicates whether this character position passed verification, failed due to confusion, or failed because no model was found above the accept threshold.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVResult.ID"><summary>A unique ID used to identify this OCV result.  This ID also corresponds to the index of this result in the CogOCVResults to which this result belongs.  It also corresponds to the index for the CharacterPositions collection of the inspected pattern.</summary><remarks><PARA>Returns a unique ID used to identify this OCV result.  This ID also corresponds to the index of this result in the <see cref="T:Cognex.VisionPro.OC.CogOCVResults" /> to which this result belongs and to the index for the <see cref="P:Cognex.VisionPro.OC.CogOCVPattern.CharacterPositions" /> collection of the <see cref="T:Cognex.VisionPro.OC.CogOCVPattern" />.</PARA></remarks></member><member name="M:Cognex.VisionPro.OC.CogOCVResult.~CogOCVResult"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVResult.!CogOCVResult"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVResult.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVResult.GetConfusableFontModelName(System.Int32)"><param name="index"><PARA>The 0-based index of the model.</PARA></param><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is &lt; 0 or &gt;= <see cref="P:Cognex.VisionPro.OC.CogOCVResult.ConfusableFontModelCount" />.</para></exception><summary>The name of the 'nth' confusable model found.  Confusable models are ordered from highest match score (worst case) to lowest match score.</summary><remarks><PARA>The name of the <paramref name="index" />th confusable model found.  Confusable models are ordered from highest match score (worst case) to lowest match score.</PARA></remarks></member><member name="M:Cognex.VisionPro.OC.CogOCVResult.GetConfusableFontModelInstance(System.Int32)"><param name="index"><PARA>The 0-based index of the model.</PARA></param><summary>The instance number of the 'nth' confusable model found.  Confusable models are ordered from highest match score (worst case) to lowest match score.</summary><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is &lt; 0 or &gt;= <see cref="P:Cognex.VisionPro.OC.CogOCVResult.ConfusableFontModelCount" />.</para></exception><remarks><PARA>Returns the instance number of the <paramref name="index" />th confusable model found.  Confusable models are ordered from highest match score (worst case) to lowest match score.</PARA></remarks></member><member name="M:Cognex.VisionPro.OC.CogOCVResult.GetConfusableFontModelScore(System.Int32)"><param name="index"><PARA>The 0-based index of the model.</PARA></param><remarks><PARA>The match score of the <paramref name="index" />th confusable model found.  Confusable models are ordered from highest match score (worst case) to lowest match score.</PARA></remarks><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="index" /> is &lt; 0 or &gt;= <see cref="P:Cognex.VisionPro.OC.CogOCVResult.ConfusableFontModelCount" />.</para></exception><summary>The match score of the 'nth' confusable model found.  Confusable models are ordered from highest match score (worst case) to lowest match score.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVResult.GetPose"><exception cref="T:Cognex.VisionPro.Exceptions.CogOCVNoFontModelFoundException" cgnxHRESULT="E_CogOCV_NoFontModelFound"><para><see cref="P:Cognex.VisionPro.OC.CogOCVResult.Score" /> is 0.</para></exception><!-- <ERROR_HRESULT NAME="E_Cog_NotImplemented">The verified model is a blank.</ERROR_HRESULT> --><remarks><PARA>Returns the position of the found font model's origin in the selected space of the input image.
You can use the returned transform to find any point relative to the model in the selected space of the run-time input image.
</PARA><PARA>Mapping the point (0, 0) through the returned <see cref="T:Cognex.VisionPro.CogTransform2DLinear" /> returns the origin of the found model in the input image's selected space. 
</PARA></remarks><returns><PARA>The returned pose.</PARA></returns><summary>Returns the position of the found font model's origin in the selected space of the input image.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVResult.GetPoseWithRespectToPattern"><summary>Returns the determined Pose of the character location in relative to pattern space.</summary><returns><PARA>The returned pose.</PARA></returns><remarks><PARA>Returns the position of the found font model's 
origin with respect to the pattern's origin. 
You can use the returned transform to map a point
relative to the model's origin to a point relative to the pattern's origin.
</PARA><PARA>Mapping the point (0, 0) through the returned <see cref="T:Cognex.VisionPro.CogTransform2DLinear" /> returns the origin of the found model 
relative to the pattern's origin. 
</PARA></remarks><exception cref="T:Cognex.VisionPro.Exceptions.CogOCVNoFontModelFoundException" cgnxHRESULT="E_CogOCV_NoFontModelFound"><para><see cref="P:Cognex.VisionPro.OC.CogOCVResult.Score" /> is 0.</para></exception><!-- <ERROR_HRESULT NAME="E_Cog_NotImplemented">The verified model is a blank.</ERROR_HRESULT> --></member><member name="M:Cognex.VisionPro.OC.CogOCVResult.CreateResultGraphics(Cognex.VisionPro.OC.CogOCVResultGraphicConstants)"><param name="graphicOptions"><PARA>An ORed set of <see cref="T:Cognex.VisionPro.OC.CogOCVResultGraphicConstants" /> that specify contents of the graphic.</PARA></param><returns><PARA>The result graphic.</PARA></returns><summary>Creates a composite result graphic containing child graphics specified by the GraphicOptions which is a bitwise combination of CogOCVResultGraphicConstants.</summary><remarks><PARA>Creates a composite result graphic containing child graphics specified by the <paramref name="graphicOptions" /> which is a bitwise combination of <see cref="T:Cognex.VisionPro.OC.CogOCVResultGraphicConstants" />.</PARA></remarks></member><member name="T:Cognex.VisionPro.OC.CogOCVResults"><remarks><PARA>The overall results of an OCV inspection. You can use
	<see cref="P:Cognex.VisionPro.OC.CogOCVResults.Item" />
		and
	<see cref="M:Cognex.VisionPro.OC.CogOCVResults.IndexOf(Cognex.VisionPro.OC.CogOCVResult)" />.
</PARA></remarks><summary>Default interface of this class provides access to the overall results of an OCV inspection.  It provides access to the individual character position results via standard collection properties and methods.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVResults.#ctor(Cognex.VisionPro.OC.CogOCVResults)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVResults.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVResults.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVResults.NumCharactersVerified"><remarks><PARA>Returns the number of characters in the <see cref="T:Cognex.VisionPro.OC.CogOCVPattern" /> that passed verification. The difference between this value and <see cref="P:Cognex.VisionPro.OC.CogOCVResults.Count" /> is the number of characters that did not pass verification.</PARA></remarks><summary>Returns number of character positions in the pattern that passed verification.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVResults.Status"><remarks><PARA>Returns the overall status of this OCV inspection. 
The result is <see cref="T:Cognex.VisionPro.OC.CogOCVPatternStatusConstants">Verified</see> if all of the characters in the <see cref="T:Cognex.VisionPro.OC.CogOCVPattern" /> were verified. Otherwise, the result is <see cref="T:Cognex.VisionPro.OC.CogOCVPatternStatusConstants">Failed</see>.</PARA></remarks><summary>Returns the overall status of this OCV inspection.  Status will indicate verified if all of the character positions passed verification.  Other, status will indicate failed.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVResults.Score"><summary>Return the overall score for this OCV result.</summary><remarks><PARA>Returns the overall score for this OCV result. This value is the average of scores of the all of the characters in the <see cref="T:Cognex.VisionPro.OC.CogOCVPattern" /> and is in the range 0.0 (no match) through 1.0 (perfect match).</PARA></remarks></member><member name="P:Cognex.VisionPro.OC.CogOCVResults.Item(System.Int32)"><param name="index">The index of the item to get.</param><summary>Gets the item at the specified index.  In C#, this property is the indexer for the collection.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVResults.SyncRoot"><summary>Gets an object that can be used to synchronize access to this collection.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVResults.IsSynchronized"><summary>Gets a value indicating whether access to this collection is synchronized (thread-safe).</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVResults.Count"><summary>Gets the number of items contained in this collection.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVResults.~CogOCVResults"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVResults.!CogOCVResults"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVResults.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVResults.CopyTo(System.Array,System.Int32)"><param name="array">The array into which to copy.</param><param name="index">The index from which to start copying.</param><summary>Copies the contents of this collection to an array.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVResults.IndexOf(Cognex.VisionPro.OC.CogOCVResult)"><param name="value">The item whose index is desired.</param><summary>Gets the index of the given item.  If the item cannot be found -1 is returned.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVResults.GetPose"><returns><PARA>The returned pose.</PARA></returns><remarks><PARA>Returns the overall position of the pattern in the selected space of the input image.
You can use the returned transform to find any point relative to the pattern in the selected space of the run-time input image.
</PARA><PARA>Mapping the point (0, 0) through the returned <see cref="T:Cognex.VisionPro.CogTransform2DLinear" /> returns the origin of the trained pattern in the input image's selected space. 
</PARA></remarks><summary>Returns the overall position of the pattern in the selected space of the input image.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCVTool"><remarks><PARA>Optical Character Verification (OCV) tool which can be used to verify a pattern of characters in an image.  This tool encompasses all of the classes required to perform an OCV inspection.</PARA></remarks><summary>Optical character verification (OCV) tool which can be used to verify a pattern of character in an image.  This tool encompasses all of the classes required to perform an OCV inspection.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVTool.#ctor(Cognex.VisionPro.OC.CogOCVTool)"><param name="other">The instance to copy from.</param><summary>Constructs a new instance of this class as a deep copy of the given instance.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVTool.#ctor"><summary>Constructs a new instance of this class.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVTool.#ctor(System.IntPtr)"><param name="impl">n/a</param><summary>Constructs a new instance of this class using com pointer.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVTool.SfLastRunRecordEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LastRunRecordEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVTool.SfLastRunRecordDiagEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by LastRunRecordDiagEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVTool.SfCurrentRecordEnable"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by CurrentRecordEnable may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVTool.SfPatternPosition"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by PatternPosition may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVTool.SfInputImage"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by InputImage may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVTool.SfPattern"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Pattern may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVTool.SfResults"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by Results may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVTool.SfPatternReferenceImage"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by PatternReferenceImage may have changed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVTool.SfPatternReferenceOrigin"><summary>This bit will be set in the EventArgs of a Changed event every time the value returned by PatternReferenceOrigin may have changed.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVTool.PatternReferenceOrigin"><remarks><PARA>The pattern reference origin can be displayed via the CurrentRecord in order to provide the user a means of graphically setting up their pattern of character positions. It is not required for either training or running the OCV tool.</PARA></remarks><summary>The pattern reference origin can be displayed via the CurrentRecord in order to provide the user a means of graphically setting up their pattern of character positions.  It is not required for either training or running the OCV tool.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVTool.PatternReferenceImage"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVTool_PatternReferenceImage--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVTool.SfPatternReferenceImage" /></li></ul></event><summary>The pattern reference image can be displayed via the CurrentRecord in order to provide the user a means of graphically setting up their pattern of character positions.  It is not required for either training or running the OCV tool.</summary><remarks><PARA>The reference image is an image you can use to configure and train your pattern. The tool does not use the reference image pixels for training. Instead, you use the reference image to manually place the expected character positions. You can enable the reference image display in <see cref="P:Cognex.VisionPro.OC.CogOCVTool.CurrentRecordEnable" />.</PARA></remarks></member><member name="P:Cognex.VisionPro.OC.CogOCVTool.Results"><remarks><PARA>Results from the last invocation of the <see cref="M:Cognex.VisionPro.OC.CogOCVTool.Run" /> method.  A new <see cref="T:Cognex.VisionPro.OC.CogOCVResults" /> is created for each inspection.  Previous results are released prior to the new inspection.</PARA></remarks><summary>Results from the last invocation of the Run method.  A gcnew CogOCVResults is factoried for each inspection.  Previous results will be released prior to the new inspection.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVTool.Pattern"><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVTool_Pattern--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVTool.SfPattern" /></li></ul></event><remarks><PARA>The <see cref="T:Cognex.VisionPro.OC.CogOCVPattern" /> that the tool attempts to verify in the <see cref="P:Cognex.VisionPro.OC.CogOCVTool.InputImage" />.</PARA></remarks><summary>The OCV pattern which will be verified by this tool.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVTool.InputImage"><summary>Input image on which the OCV inspection will be performed.</summary><remarks><PARA>Sets or gets the input image on which the OCV inspection will be performed. The tool attempts to locate the trained <see cref="P:Cognex.VisionPro.OC.CogOCVTool.Pattern" /> in this image.</PARA></remarks><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVTool_InputImage--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVTool.SfInputImage" /></li></ul></event></member><member name="P:Cognex.VisionPro.OC.CogOCVTool.PatternPosition"><remarks><PARA>The expected position of the <see cref="P:Cognex.VisionPro.OC.CogOCVTool.Pattern" /> and the uncertainty of the expected position.
<see cref="T:Cognex.VisionPro.OC.CogOCVCharacterPositions" /> in a pattern are relative to the <see cref="T:Cognex.VisionPro.OC.CogOCVPatternPosition" />.</PARA></remarks><summary>Run-time expected position of a pattern and the uncertainty of the expected position.  Character positions in a pattern are specified with respect to the expected position of the pattern.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVTool_PatternPosition--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVTool.SfPatternPosition" /></li></ul></event></member><member name="P:Cognex.VisionPro.OC.CogOCVTool.CurrentRecordEnable"><summary>Enable creation of records by bitwise ORing the appropriate CurrentRecordConstants.</summary><remarks><PARA>Enable creation of records by bitwise ORing the appropriate <see cref="T:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants" />.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants">InputImage</see> +
<see cref="T:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants">PatternPositionCoordinateAxes</see> +
<see cref="T:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants">PatternPositionCharacterOrigins</see> +
<see cref="T:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants">PatternPositionCharacterRegions</see> +
<see cref="T:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants">PatternPositionCharacterLabels</see> +
<see cref="T:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants">PatternReferenceImage</see> +
<see cref="T:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants">PatternOriginFree</see> +
<see cref="T:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants">CharacterPositionsOrigin</see> +
<see cref="T:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants">CharacterPositionsRegion</see> +
<see cref="T:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants">CharacterPositionsLabel</see></DEFAULT></remarks><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVTool_CurrentRecordEnable--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVTool.SfCurrentRecordEnable" /></li></ul></event></member><member name="P:Cognex.VisionPro.OC.CogOCVTool.LastRunRecordDiagEnable"><remarks><PARA>Enable creation of records by bitwise ORing the appropriate <see cref="T:Cognex.VisionPro.OC.CogOCVLastRunRecordDiagConstants" />.  These are diagnostic records that may cause the Tool to have a longer execution time.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.OC.CogOCVLastRunRecordDiagConstants">CogOCVLastRunRecordDiagInputImageByReference</see></DEFAULT></remarks><summary>Enable creation of records by bitwise ORing the appropriate LastRunRecordDiagConstants.  These are diagnostic records that may cause the Tool to have a longer execution time.</summary><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVTool_LastRunRecordDiagEnable--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVTool.SfLastRunRecordDiagEnable" /></li></ul></event></member><member name="P:Cognex.VisionPro.OC.CogOCVTool.LastRunRecordEnable"><summary>Enable creation of records by bitwise ORing the appropriate LastRunRecordConstants.</summary><remarks><PARA>Enable creation of records by bitwise ORing the appropriate <see cref="T:Cognex.VisionPro.OC.CogOCVLastRunRecordConstants" />.</PARA><DEFAULT><see cref="T:Cognex.VisionPro.OC.CogOCVLastRunRecordConstants">PatternPosition</see> +
<see cref="T:Cognex.VisionPro.OC.CogOCVLastRunRecordConstants">ResultsOrigin</see> +
<see cref="T:Cognex.VisionPro.OC.CogOCVLastRunRecordConstants">ResultsMatchRegion</see> +
<see cref="T:Cognex.VisionPro.OC.CogOCVLastRunRecordConstants">ResultsLabel</see> +
</DEFAULT></remarks><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="singleState"><para>
        
Fires when the value of this property changes. 
</para><para>The following state flag may be affected:</para><!--STATEID:cogOCVTool_LastRunRecordEnable--><ul><li><see cref="F:Cognex.VisionPro.OC.CogOCVTool.SfLastRunRecordEnable" /></li></ul></event></member><member name="P:Cognex.VisionPro.OC.CogOCVTool.RunStatus"><summary>Gets general information about the last call to Run.</summary></member><member name="P:Cognex.VisionPro.OC.CogOCVTool.Name"><summary>Gets or sets the name of the tool.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVTool.Clone"><summary>Returns a deep copy of this class instance.  Derived classes that implement Clone should override this method; other clients who wish to clone this instance should call ICloneable.Clone. See also CogSerializer.DeepCopyObject.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVTool.Run"><summary>Runs the tool using the current parameter settings.</summary><remarks><PARA>Verifies that the <see cref="P:Cognex.VisionPro.OC.CogOCVTool.Pattern" /> is located in the <see cref="P:Cognex.VisionPro.OC.CogOCVTool.InputImage" /> at the <see cref="P:Cognex.VisionPro.OC.CogOCVTool.PatternPosition" />. Results are placed in <see cref="P:Cognex.VisionPro.OC.CogOCVTool.Results" />.</PARA><NOTE>
		This method does not actually raise the exceptions listed below. 
		Use the <see cref="P:Cognex.VisionPro.CogFitCircleTool.RunStatus" /> property
		to obtain a <see cref="T:Cognex.VisionPro.ICogRunStatus" /> reference. Then use
		its <see cref="P:Cognex.VisionPro.ICogRunStatus.Exception" /> property to see
		if the Run method raised any exceptions.
	</NOTE></remarks><event cref="E:Cognex.VisionPro.ICogTool.Running" cgnxEvent="PreRun"><para>
		Fires before the tool runs.
	</para></event><event cref="E:Cognex.VisionPro.ICogChangedEvent.Changed" cgnxEvent="multiState"><para>
	
		Fires when the tool runs. If the run was successful, results are generated;
		if the run was not successful, no results are generated and the previous results are cleared.
		Use <see cref="P:Cognex.VisionPro.OC.CogOCVTool.RunStatus" /> after <see cref="T:Cognex.VisionPro.OC.CogOCVTool" /> returns or in a
		<see cref="E:Cognex.VisionPro.ICogTool.Ran" /> event  handler
		to determine whether a run was successful or unsuccessful.
	</para><para>The following state flags may be affected:</para><ul><!--FA:cogFA_Tool_Results--><!--FA:cogFA_Tool_LastRunRecord--></ul></event><event cref="E:Cognex.VisionPro.ICogTool.Ran" cgnxEvent="PostRun"><para>
		Fires after the tool runs.
	</para></event><exception cref="T:Cognex.VisionPro.Exceptions.CogSecurityViolationException" cgnxHRESULT="E_Cog_SecurityViolation"><para>Security is not enabled for this vision tool. See 
<see cref="u:Programming.Tools.Theory.Security" cgnxAnchor="resolving_securityrelated_error_messages">Resolving Security-Related Error Messages</see> for more information.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorNoInputImageException" cgnxHRESULT="E_CogOperator_NoInputImage"><para><paramref name="InputImage" /> is NULL.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageNoPixelsException" cgnxHRESULT="E_CogImage_NoPixels"><para><paramref name="InputImage" /> is not allocated.</para></exception><exception cref="T:System.ArgumentException" cgnxHRESULT="E_INVALIDARG"><para><paramref name="PatternPosition" /> is NULL.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOperatorNotTrainedException" cgnxHRESULT="E_CogOperator_NotTrained"><para>The pattern is not trained.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogTimeoutExpiredException" cgnxHRESULT="E_Cog_TimeoutExpired"><para><see cref="P:Cognex.VisionPro.OC.CogOCVPattern.RunTimeTimeout" /> expired.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOCVInvalidPatternPositionException" cgnxHRESULT="E_CogOCV_InvalidPatternPosition"><para>The selected space of the <paramref name="PatternPosition" />is not a valid space of the <paramref name="InputImage" />'s coordinate space tree.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOCVInvalidPatternPositionException" cgnxHRESULT="E_CogOCV_InvalidPatternPosition"><para>The selected space name of  the <paramref name="PatternPosition" /> is a nonqualified space name and more than  one instance of it exists in the space tree of the <paramref name="InputImage" />.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogOCVInvalidPatternPositionException" cgnxHRESULT="E_CogOCV_InvalidPatternPosition"><para>The selected space name of the <paramref name="PatternPosition" /> is not a legal space name.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadSelectedSpaceNameException" cgnxHRESULT="E_CogImage_BadSelectedSpaceName"><para>The selected space of the <paramref name="InputImage" /> is not a valid space of the <paramref name="InputImage" />'s coordinate space tree.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadSelectedSpaceNameException" cgnxHRESULT="E_CogImage_BadSelectedSpaceName"><para>The selected space name of the <paramref name="InputImage" /> is a nonqualified space name and more than one instance of it exists in the space tree of the <paramref name="InputImage" />.</para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogImageBadSelectedSpaceNameException" cgnxHRESULT="E_CogImage_BadSelectedSpaceName"><para> the selected space name of the <paramref name="PatternPosition" /> is not a legal space name. </para></exception><exception cref="T:Cognex.VisionPro.Exceptions.CogToolNoOperatorException" cgnxHRESULT="E_CogTool_NoOperator"><para><see cref="P:Cognex.VisionPro.OC.CogOCVTool.Pattern" /> is NULL.</para></exception></member><member name="M:Cognex.VisionPro.OC.CogOCVTool.~CogOCVTool"><summary>Releases all resources used by this object.  Do not attempt to access an object after it has been disposed.</summary></member><member name="M:Cognex.VisionPro.OC.CogOCVTool.!CogOCVTool"><summary>Releases all unmanaged resources used by this object.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCFontModelTypeConstants"><summary>Enumeration of optical character font model types.</summary><remarks><PARA>Enumeration that <see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Type" /> uses to specify  whether a font model is a normal model or a blank model.</PARA></remarks></member><member name="F:Cognex.VisionPro.OC.CogOCFontModelTypeConstants.Normal"><remarks><PARA>Use a normal font model to inspect for the presence of a character.  Normal font models are defined by providing an
<see cref="P:Cognex.VisionPro.OC.CogOCFontModel.Image" />
of the character.</PARA></remarks><summary>A normal font model is used to inspect for the presence of a character.  The normal font model is defined by providing an image of the character.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCFontModelTypeConstants.Blank"><summary>A blank font model is used to inspect for the absence of a character.  A blank model does not have any image pixels.  Instead, it is defined by its BlankWidth and BlankHeight properties.</summary><remarks><PARA>Use a blank font model to inspect for the absence of a character.  A blank model 
has a
<see cref="P:Cognex.VisionPro.OC.CogOCFontModel.BlankWidth" /> and a 
<see cref="P:Cognex.VisionPro.OC.CogOCFontModel.BlankHeight" /> but
does not have any image pixels.</PARA></remarks></member><member name="T:Cognex.VisionPro.OC.CogOCVCharacterStatusConstants"><remarks><PARA>The <see cref="P:Cognex.VisionPro.OC.CogOCVResult.Status" /> of an OCV character position inspection <see cref="T:Cognex.VisionPro.OC.CogOCVResult" />.</PARA></remarks><summary>The status of an OCV character position inspection.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVCharacterStatusConstants.Verified"><summary>The character position passed verification.  The verified font model has a matching score greater than or equal to the accept threshold and a confidence score greater than or equal to the confidence threshold.</summary><remarks><PARA>The character position passed verification.  The verified font model has a 
<see cref="P:Cognex.VisionPro.OC.CogOCVResult.Score">matching score </see>
greater than or equal to the
<see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.RunTimeAcceptThreshold">accept threshold</see>
and a 
<see cref="P:Cognex.VisionPro.OC.CogOCVResult.ConfidenceScore">confidence score</see>
greater than or equal to the
<see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.RunTimeConfidenceThreshold">confidence threshold</see>.
</PARA></remarks></member><member name="F:Cognex.VisionPro.OC.CogOCVCharacterStatusConstants.Confused"><remarks><PARA>The character position failed verification due to confusion.

The found font model has a
<see cref="P:Cognex.VisionPro.OC.CogOCVResult.Score">matching score </see>
greater than or equal to the
<see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.RunTimeAcceptThreshold">accept threshold</see>, but the
<see cref="P:Cognex.VisionPro.OC.CogOCVResult.ConfidenceScore">confidence score</see>
is less than
the
<see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.RunTimeConfidenceThreshold">confidence threshold</see>.
 </PARA></remarks><summary>The character position failed verification due to confusion.  The found font model has a matching score greater than or equal to the accept threshold.  However, the confidence score is less then confidence threshold.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVCharacterStatusConstants.Failed"><remarks><PARA>The character position failed verification.
No model found that scored above the <see cref="P:Cognex.VisionPro.OC.CogOCVCharacterPosition.RunTimeAcceptThreshold">accept threshold</see>.</PARA></remarks><summary>The character position failed verification.  No model found that scored above the accept threshold.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCVResultGraphicConstants"><remarks><PARA>Constants that you can OR together to specify desired <see cref="M:Cognex.VisionPro.OC.CogOCVResult.CreateResultGraphics(Cognex.VisionPro.OC.CogOCVResultGraphicConstants)">result graphics</see>.</PARA></remarks><summary>Constants used to specify desired result graphics.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVResultGraphicConstants.None"><summary>Draw no result graphics.</summary><remarks><PARA>Draw no result graphics.</PARA></remarks></member><member name="F:Cognex.VisionPro.OC.CogOCVResultGraphicConstants.TipText"><remarks><PARA>Turn on tip text for result graphics.</PARA></remarks><summary>Turn on tip text for result graphics.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVResultGraphicConstants.Origin"><remarks><PARA>Draw a cross at the font model origin of this result.</PARA></remarks><summary>Draw a cross at the font model origin of this result.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVResultGraphicConstants.CoordinateAxes"><remarks><PARA>Draw a coordinate axes at the font model origin of this result.</PARA></remarks><summary>Draw a coordinate axes at the font model origin of this result.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVResultGraphicConstants.MatchRegion"><remarks><PARA>Draw the match region for this result.  This is a mapped version of the font model's image border indicating where the font model was found in the run-time image.</PARA></remarks><summary>Draw the match region for this result.  This is a mapped version of the font model's image border indicating where the font model was found in the run-time image.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVResultGraphicConstants.Label"><summary>Draw a graphic label indicating the name and instance of the font model found.</summary><remarks><PARA>Draw a graphic label indicating the name and instance of the font model found.</PARA></remarks></member><member name="F:Cognex.VisionPro.OC.CogOCVResultGraphicConstants.All"><summary>Draw all result graphics.</summary><remarks><PARA>Draw all result graphics.</PARA></remarks></member><member name="T:Cognex.VisionPro.OC.CogOCVPatternStatusConstants"><summary>The overall status of an OCV inspection.</summary><remarks><PARA>The overall <see cref="P:Cognex.VisionPro.OC.CogOCVResults.Status" /> of an OCV inspection <see cref="T:Cognex.VisionPro.OC.CogOCVResults" />.</PARA></remarks></member><member name="F:Cognex.VisionPro.OC.CogOCVPatternStatusConstants.Verified"><remarks><PARA>All of the character positions in the pattern passed verification.</PARA></remarks><summary>All of the character positions in the pattern passed verification.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVPatternStatusConstants.Failed"><remarks><PARA>One or more of the character positions in the pattern failed verification due to confusion or no model was found that scored above the accept threshold.</PARA></remarks><summary>One or more of the character positions in the pattern failed verification due to confusion or no model was found that scored above the accept threshold.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCVLastRunRecordConstants"><summary>Enumeration of Non-Diagnostic data that can be provided in the Tool's LastRunRecord.</summary><remarks><PARA>
    Use these constants with
<see cref="P:Cognex.VisionPro.OC.CogOCVTool.LastRunRecordEnable" /> to specify the 
<!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Programming.Tools.Theory.ToolRecords">tool records</see> that the
CogOCV Tool
generates when you call
<see cref="M:Cognex.VisionPro.ICogTool.CreateLastRunRecord" />.
</PARA><PARA>
See <see cref="u:Programming.Tools.Theory.RecordKeys" cgnxAnchor="cogocvtool_record_keys">About Record Keys</see>  for a list of the record keys that the tool uses.
</PARA></remarks></member><member name="F:Cognex.VisionPro.OC.CogOCVLastRunRecordConstants.None"><summary>Do not include any of the non-diagnostic data in the LastRunRecord.</summary><remarks><PARA>Do not include any of the non-diagnostic data in the LastRunRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.OC.CogOCVLastRunRecordConstants.PatternPosition"><remarks><PARA>Include a coordinate axes for the found pattern position in the last run input image.</PARA></remarks><summary>Include a coordinate axes for the found pattern position in the last run input image.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVLastRunRecordConstants.ResultsOrigin"><remarks><PARA>Include a point marker graphic at the position of each character result in the last run input image.</PARA></remarks><summary>Include a point marker graphic at the position of each character result in the last run input image.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVLastRunRecordConstants.ResultsMatchRegion"><remarks><PARA>Include an affine rectangle graphic for the region of each character position result in the last run input image.</PARA></remarks><summary>Include an affine rectangle graphic for the region of each character position result in the last run input image.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVLastRunRecordConstants.ResultsCoordinateAxes"><remarks><PARA>Include a coordinate axes graphic at the position of each character result in the last run input image.</PARA></remarks><summary>Include a coordinate axes graphic at the position of each character result in the last run input image.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVLastRunRecordConstants.ResultsLabel"><remarks><PARA>Include a label graphic, with the font model name and instance, for each character position in the last run input image.</PARA></remarks><summary>Include a label graphic, with the font model name and instance, for each character position in the last run input image.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVLastRunRecordConstants.All"><summary>Include all of the non-diagnostic data in the LastRunRecord.</summary><remarks><PARA>Include all of the non-diagnostic data in the LastRunRecord.</PARA></remarks></member><member name="T:Cognex.VisionPro.OC.CogOCVLastRunRecordDiagConstants"><summary>Enumeration of Diagnostic data that can be provided in the Tool's LastRunRecord.</summary><remarks><PARA>
    Use these constants with
<see cref="P:Cognex.VisionPro.OC.CogOCVTool.LastRunRecordDiagEnable" /> to specify the 
diagnostic
<!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Programming.Tools.Theory.ToolRecords">tool records</see> that the
CogOCV Tool
generates when you call
<see cref="M:Cognex.VisionPro.ICogTool.CreateLastRunRecord" />.
</PARA><PARA>
See <see cref="u:Programming.Tools.Theory.RecordKeys" cgnxAnchor="cogocvtool_record_keys">About Record Keys</see>  for a list of the record keys that the tool uses.
</PARA></remarks></member><member name="F:Cognex.VisionPro.OC.CogOCVLastRunRecordDiagConstants.None"><summary>Do not include any of the diagnostic data in the LastRunRecord.</summary><remarks><PARA>Do not include any of the diagnostic data in the LastRunRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.OC.CogOCVLastRunRecordDiagConstants.InputImageByReference"><remarks><PARA>Include a reference to the input image in the LastRunRecord.</PARA></remarks><summary>Include a reference to the input image in the LastRunRecord.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVLastRunRecordDiagConstants.InputImageDeepCopy"><summary>Include a deep copy of the input image in the LastRunRecord.</summary><remarks><PARA>Include a deep copy of the input image in the LastRunRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.OC.CogOCVLastRunRecordDiagConstants.All"><remarks><PARA>Include all of the diagnostic data in the LastRunRecord.</PARA></remarks><summary>Include all of the diagnostic data in the LastRunRecord.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants"><summary>Enumeration of data that can be provided in the Tool's CurrentRecord.</summary><remarks><PARA>
    Use these constants with
<see cref="P:Cognex.VisionPro.OC.CogOCVTool.CurrentRecordEnable" /> to specify the 
<!--TAGFIX: 0 nodes matched the following tag --><see cref="u:Programming.Tools.Theory.ToolRecords">tool records</see> that the
CogOCV Tool
generates when you call
<see cref="M:Cognex.VisionPro.ICogTool.CreateCurrentRecord" />.
</PARA><PARA>
See <see cref="u:Programming.Tools.Theory.RecordKeys" cgnxAnchor="cogocvtool_record_keys">About Record Keys</see>  for a list of the record keys that the tool uses.
</PARA></remarks></member><member name="F:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants.None"><summary>Do not include any records in the CurrentRecord.</summary><remarks><PARA>Do not include any records in the CurrentRecord.</PARA></remarks></member><member name="F:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants.InputImage"><remarks><PARA>Include the input image in the CurrentRecord.</PARA></remarks><summary>Include the input image in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants.PatternPositionCoordinateAxes"><remarks><PARA>Include a coordinate axes at the origin of the pattern in the interactive composite shape used for setting up the run-time pattern position in the input image.</PARA></remarks><summary>Include a coordinate axes at the origin of the pattern in the interactive composite shape used for setting up the run-time pattern position in the input image.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants.PatternPositionCharacterOrigins"><remarks><PARA>Include a point marker at the position of each character in the interactive composite shape used for setting up the run-time pattern position in the input image.</PARA></remarks><summary>Include a point marker at the position of each character in the interactive composite shape used for setting up the run-time pattern position in the input image.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants.PatternPositionCharacterCoordinateAxes"><summary>Include a coordinate axes at the position of each character in the interactive composite shape used for setting up the run-time pattern position in the input image.</summary><remarks><PARA>Include a coordinate axes at the position of each character in the interactive composite shape used for setting up the run-time pattern position in the input image.</PARA></remarks></member><member name="F:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants.PatternPositionCharacterRegions"><remarks><PARA>Include an affine rectangle for the region of each character in the interactive composite shape used for setting up the run-time pattern position in the input image.</PARA></remarks><summary>Include an affine rectangle for the region of each character in the interactive composite shape used for setting up the run-time pattern position in the input image.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants.PatternPositionCharacterLabels"><summary>Include a label, with the font model name and instance, for each character in the interactive composite shape used for up setting the run-time pattern position in the input image.</summary><remarks><PARA>Include a label, with the font model name and instance, for each character in the interactive composite shape used for up setting the run-time pattern position in the input image.</PARA></remarks></member><member name="F:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants.PatternReferenceImage"><remarks><PARA>Include the pattern reference image in the CurrentRecord.</PARA></remarks><summary>Include the pattern reference image in the CurrentRecord.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants.PatternOriginUniform"><summary>Include an interactive coordinate axes for the pattern origin on the pattern reference image.  All of the character positions will move in uniform with this pattern origin graphic as it is moved.</summary><remarks><PARA>Include an interactive coordinate axes for the pattern origin on the pattern reference image.  All of the character positions will move in uniform with this pattern origin graphic as it is moved.</PARA></remarks></member><member name="F:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants.PatternOriginFree"><summary>Include an interactive coordinate axes for the pattern origin on the pattern reference image.  All of the character positions will remain in the same location relative the reference image as this pattern origin graphic is moved.</summary><remarks><PARA>Include an interactive coordinate axes for the pattern origin on the pattern reference image.  All of the character positions will remain in the same location relative the reference image as this pattern origin graphic is moved.</PARA></remarks></member><member name="F:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants.CharacterPositionsCoordinateAxes"><remarks><PARA>Include a coordinate axes graphic for each character position in the pattern reference image.</PARA></remarks><summary>Include a coordinate axes graphic for each character position in the pattern reference image.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants.CharacterPositionsOrigin"><remarks><PARA>Include a point marker graphic for each character position in the pattern reference image.</PARA></remarks><summary>Include a point marker graphic for each character position in the pattern reference image.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants.CharacterPositionsRegion"><summary>Include an affine rectangle graphic for the region of each character position in the pattern reference image.</summary><remarks><PARA>Include an affine rectangle graphic for the region of each character position in the pattern reference image.</PARA></remarks></member><member name="F:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants.CharacterPositionsLabel"><summary>Include a label graphic, with the font model name and instance, for each character position in the pattern reference image.</summary><remarks><PARA>Include a label graphic, with the font model name and instance, for each character position in the pattern reference image.</PARA></remarks></member><member name="F:Cognex.VisionPro.OC.CogOCVCurrentRecordConstants.All"><remarks><PARA>Include all possible records in the CurrentRecord.</PARA></remarks><summary>Include all possible records in the CurrentRecord.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCArrangerCharacterStatusConstants"><summary>Specifies how an individual character's position in the returned arrangement was computed.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCArrangerCharacterStatusConstants.Matched"><summary>The character was matched to an appropriate representation in the image, and its position determined from that representation.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCArrangerCharacterStatusConstants.Inferred"><summary>The character was not matched to the image, but it occurs within the interior of a text line, and its position is inferred from the poses of surrounding matched characters.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCArrangerCharacterStatusConstants.Unknown"><summary>Unknown: The character was not matched to the image, and it occurs within its own text line.  Its pose is completely unknown and is simply returned as the identity pose.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCArrangerLineTypeConstants"><summary>Specifies the geometric form of a line of text, that is, the shape of a baseline.  The values indicate that a baseline is a line segment, a circular arc, or either type, respectively.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCArrangerLineTypeConstants.Straight"><summary>Specifies that the shape of the baseline of a line of text is a line segment.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCArrangerLineTypeConstants.Circular"><summary>Specifies that the shape of the baseline of a line of text is a circular arc.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCArrangerLineTypeConstants.Any"><summary>Specifies that the shape of the baseline of a line of text is either a line segment or a circular arc.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCArrangerOrientationModeConstants"><summary>Specifies whether the expected orientation of a character is explicitly specified by the client, or is the average of all orientations of characters along the same line of text.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCArrangerOrientationModeConstants.Specified"><summary>The orientation of the lines of text are explicitly specified by the client.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCArrangerOrientationModeConstants.Average"><summary>The orientation of a line of text is the average of all orientations of characters along that same line of text.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCArrangerOrientationReferenceConstants"><summary>Specifies whether character orientations are referenced to the selected space of the image or the local baseline direction.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCArrangerOrientationReferenceConstants.SelectedSpace"><summary>Character orientations are referenced to the selected space of the image.</summary></member><member name="F:Cognex.VisionPro.OC.CogOCArrangerOrientationReferenceConstants.Baseline"><summary>Character orientations are referenced to the local baseline direction.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCFontModel.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCFontModels.MovedItemEventHandler"><summary>Occurs after an item is moved to a new index.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCFontModels.MovingItemEventHandler"><summary>Occurs before an item is moved to a new index.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCFontModels.ReplacedItemEventHandler"><summary>Occurs after an item is replaced in this collection.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCFontModels.ReplacingItemEventHandler"><summary>Occurs before an item is replaced in this collection.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCFontModels.RemovedItemEventHandler"><summary>Occurs after an item is removed from this collection.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCFontModels.RemovingItemEventHandler"><summary>Occurs before an item is removed from this collection.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCFontModels.InsertedItemEventHandler"><summary>Occurs after an item is inserted into this collection.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCFontModels.InsertingItemEventHandler"><summary>Occurs before an item is inserted into this collection.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCFontModels.ClearedEventHandler"><summary>Occurs after this collection is cleared.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCFontModels.ClearingEventHandler"><summary>Occurs before this collection is cleared.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCFont.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCVCharacterPosition.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCVCharacterPositions.MovedItemEventHandler"><summary>Occurs after an item is moved to a new index.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCVCharacterPositions.MovingItemEventHandler"><summary>Occurs before an item is moved to a new index.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCVCharacterPositions.ReplacedItemEventHandler"><summary>Occurs after an item is replaced in this collection.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCVCharacterPositions.ReplacingItemEventHandler"><summary>Occurs before an item is replaced in this collection.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCVCharacterPositions.RemovedItemEventHandler"><summary>Occurs after an item is removed from this collection.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCVCharacterPositions.RemovingItemEventHandler"><summary>Occurs before an item is removed from this collection.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCVCharacterPositions.InsertedItemEventHandler"><summary>Occurs after an item is inserted into this collection.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCVCharacterPositions.InsertingItemEventHandler"><summary>Occurs before an item is inserted into this collection.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCVCharacterPositions.ClearedEventHandler"><summary>Occurs after this collection is cleared.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCVCharacterPositions.ClearingEventHandler"><summary>Occurs before this collection is cleared.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCVPatternPosition.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member><member name="T:Cognex.VisionPro.OC.CogOCVPattern.ChangedEventHandler"><summary>Occurs when one or more parts of the object's state may have changed.</summary></member></members></doc>